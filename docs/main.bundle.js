/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/css/canvas.css":
/*!******************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/css/canvas.css ***!
  \******************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `body {\n    margin: 0px;\n    padding: 0px;\n    overflow: hidden;\n}\n.canvas-container {\n    width: 100%;\n    height: 100vh;\n    margin: 0px;\n}\n.canvas {\n    background-color: lightgray;\n    margin:auto;\n    display: flex;\n    \n}`, \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://earthquest/./src/css/canvas.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};\n\n//# sourceURL=webpack://earthquest/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://earthquest/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/_game/assets/menu/menu.png":
/*!****************************************!*\
  !*** ./src/_game/assets/menu/menu.png ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"33d9f598a831ed057f015fd1a5c8455b.png\");\n\n//# sourceURL=webpack://earthquest/./src/_game/assets/menu/menu.png?");

/***/ }),

/***/ "./src/assets/font.png":
/*!*****************************!*\
  !*** ./src/assets/font.png ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"81df8f4030b5ae0cbeddd833c8e0c69d.png\");\n\n//# sourceURL=webpack://earthquest/./src/assets/font.png?");

/***/ }),

/***/ "./src/assets/menu.png":
/*!*****************************!*\
  !*** ./src/assets/menu.png ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"f8c23831bead9466317d54669e246719.png\");\n\n//# sourceURL=webpack://earthquest/./src/assets/menu.png?");

/***/ }),

/***/ "./src/css/canvas.css":
/*!****************************!*\
  !*** ./src/css/canvas.css ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./canvas.css */ \"./node_modules/css-loader/dist/cjs.js!./src/css/canvas.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_canvas_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://earthquest/./src/css/canvas.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://earthquest/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/_game/PlatformEngine.ts":
/*!*************************************!*\
  !*** ./src/_game/PlatformEngine.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PlatformEngine = void 0;\r\nconst Engine_1 = __webpack_require__(/*! ../core/Engine */ \"./src/core/Engine.ts\");\r\nconst SceneManager_1 = __webpack_require__(/*! ./system/SceneManager */ \"./src/_game/system/SceneManager.ts\");\r\n/**\r\n * This is the engine override that will kick off our editor\r\n * or the game.\r\n */\r\nclass PlatformEngine extends Engine_1.Engine {\r\n    get sceneManager() {\r\n        return this._sceneManager;\r\n    }\r\n    constructor() {\r\n        super();\r\n        this._sceneManager = new SceneManager_1.SceneManager(this);\r\n    }\r\n    async initialize(root) {\r\n        await super.initialize(root);\r\n    }\r\n}\r\nexports.PlatformEngine = PlatformEngine;\r\n\n\n//# sourceURL=webpack://earthquest/./src/_game/PlatformEngine.ts?");

/***/ }),

/***/ "./src/_game/scenes/MainMenu.ts":
/*!**************************************!*\
  !*** ./src/_game/scenes/MainMenu.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.MainMenu = void 0;\r\nconst menu_png_1 = __importDefault(__webpack_require__(/*! ../assets/menu/menu.png */ \"./src/_game/assets/menu/menu.png\"));\r\nconst SceneComponent_1 = __webpack_require__(/*! ../../components/SceneComponent */ \"./src/components/SceneComponent.ts\");\r\nconst SpriteController_1 = __webpack_require__(/*! ../../graphics/SpriteController */ \"./src/graphics/SpriteController.ts\");\r\nconst Texture_1 = __webpack_require__(/*! ../../graphics/Texture */ \"./src/graphics/Texture.ts\");\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../../math/vec2 */ \"./src/math/vec2.ts\"));\r\nclass MainMenu extends SceneComponent_1.SceneComponent {\r\n    constructor(eng) {\r\n        super(eng);\r\n    }\r\n    async ShowScene() {\r\n        // set up the background image\r\n        this.background = new SpriteController_1.SpritController(this.eng);\r\n        const texture = new Texture_1.Texture(this.gl);\r\n        await texture.loadImage(menu_png_1.default);\r\n        this.background.initialize(texture, { tiles: [{ id: 'main', index: [0, 0] }], tileHeight: texture.height, tileWidth: texture.width });\r\n        const scaleX = this.eng.width / texture.width;\r\n        const scaleY = this.eng.height / texture.height;\r\n        this.background.setSpritePosition(0, 0, 0);\r\n        this.background.setSprite(0);\r\n        this.background.scale(new vec2_1.default(scaleX, scaleY));\r\n        this.background.viewOffset(new vec2_1.default(0, 0));\r\n        // show the dialog\r\n        this.eng.dialogManager.showDialog(\"Start Game\", { x: 200, y: 20, width: 300, height: 200 }, (d) => {\r\n            console.debug(\"selected \" + d.selectedOption);\r\n            if (d.selectedOption == 'New Game') {\r\n                this.eng.sceneManager.changeScene('level1');\r\n            }\r\n            return true;\r\n        }, [\"New Game\", \"Load\", \"Edit Level\"]);\r\n    }\r\n    HideScene() {\r\n    }\r\n    update(dt) {\r\n        this.background.update(dt);\r\n    }\r\n}\r\nexports.MainMenu = MainMenu;\r\n\n\n//# sourceURL=webpack://earthquest/./src/_game/scenes/MainMenu.ts?");

/***/ }),

/***/ "./src/_game/scenes/SceneFactory.ts":
/*!******************************************!*\
  !*** ./src/_game/scenes/SceneFactory.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SceneFactory = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../../core/Component */ \"./src/core/Component.ts\");\r\nconst MainMenu_1 = __webpack_require__(/*! ./MainMenu */ \"./src/_game/scenes/MainMenu.ts\");\r\n/**\r\n * Used to create scenes\r\n */\r\nclass SceneFactory extends Component_1.Component {\r\n    constructor(eng) {\r\n        super(eng);\r\n    }\r\n    createScene(type) {\r\n        switch (type) {\r\n            case 'main.menu':\r\n                return new MainMenu_1.MainMenu(this.eng);\r\n        }\r\n    }\r\n}\r\nexports.SceneFactory = SceneFactory;\r\n\n\n//# sourceURL=webpack://earthquest/./src/_game/scenes/SceneFactory.ts?");

/***/ }),

/***/ "./src/_game/system/SceneManager.ts":
/*!******************************************!*\
  !*** ./src/_game/system/SceneManager.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SceneManager = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../../core/Component */ \"./src/core/Component.ts\");\r\nconst SceneFactory_1 = __webpack_require__(/*! ../scenes/SceneFactory */ \"./src/_game/scenes/SceneFactory.ts\");\r\nclass SceneManager extends Component_1.Component {\r\n    get scene() {\r\n        return this._activeScene;\r\n    }\r\n    constructor(eng) {\r\n        super(eng);\r\n        this._sceneFactory = new SceneFactory_1.SceneFactory(eng);\r\n    }\r\n    async initialize() {\r\n        await this.changeScene(\"main.menu\");\r\n    }\r\n    /**\r\n     * Switch to a different scene.\r\n     * @param newScene\r\n     */\r\n    async changeScene(type) {\r\n        const newScene = this._sceneFactory.createScene(type);\r\n        if (!newScene) {\r\n            console.error(\"failed to change scene to \" + type);\r\n            return false;\r\n        }\r\n        if (this._activeScene) {\r\n            this._activeScene.HideScene();\r\n        }\r\n        this._lastScene = this._activeScene;\r\n        this._activeScene = newScene;\r\n        await this._activeScene.ShowScene();\r\n    }\r\n    /**\r\n     * Restore last scene\r\n     * @returns\r\n     */\r\n    restoreLastScene() {\r\n        if (!this._lastScene) {\r\n            return;\r\n        }\r\n        const newScene = this._lastScene;\r\n        if (this._activeScene) {\r\n            this._activeScene.HideScene();\r\n        }\r\n        this._lastScene = null;\r\n        this._activeScene = newScene;\r\n        this._activeScene.ShowScene();\r\n    }\r\n    /**\r\n     * Called every frame\r\n     * @param dt\r\n     */\r\n    update(dt) {\r\n        this._activeScene.update(dt);\r\n    }\r\n    /**\r\n     * When the window is resized\r\n     */\r\n    resize(width, height) { }\r\n    /**\r\n     * Dispose the scene\r\n     */\r\n    dispose() { }\r\n}\r\nexports.SceneManager = SceneManager;\r\n\n\n//# sourceURL=webpack://earthquest/./src/_game/system/SceneManager.ts?");

/***/ }),

/***/ "./src/components/SceneComponent.ts":
/*!******************************************!*\
  !*** ./src/components/SceneComponent.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SceneComponent = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\n/**\r\n * This is a base class for a scene\r\n */\r\nclass SceneComponent extends Component_1.Component {\r\n    /**\r\n     * constructor\r\n     * @param eng\r\n     */\r\n    constructor(eng) {\r\n        super(eng);\r\n    }\r\n    /**\r\n     * Initialize the scene\r\n     * @param options\r\n     */\r\n    async initialize(options) { }\r\n    /**\r\n     * Handles user input. The logic goes through a chain of commands\r\n     *    1) Main menu\r\n     *    2) pause menu\r\n     *    3) battle menu\r\n     *    4) dialog menu\r\n     *    5) player in the environment\r\n     * @param action the action from keyboard or gamepad\r\n     * @returns True if the action was handled else false\r\n     */\r\n    handleUserAction(action) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Called every frame\r\n     * @param dt\r\n     */\r\n    update(dt) { }\r\n    /**\r\n     * Show scene is called when a SceneManager changes to a new scene.\r\n     */\r\n    async ShowScene() { }\r\n    /**\r\n     * Hide scene is called when a SceneManager changes to a new scene.\r\n     */\r\n    HideScene() { }\r\n    /**\r\n     * When the window is resized\r\n     */\r\n    resize(width, height) { }\r\n    /**\r\n     * Dispose the scene\r\n     */\r\n    dispose() { }\r\n}\r\nexports.SceneComponent = SceneComponent;\r\n\n\n//# sourceURL=webpack://earthquest/./src/components/SceneComponent.ts?");

/***/ }),

/***/ "./src/core/CanvasController.ts":
/*!**************************************!*\
  !*** ./src/core/CanvasController.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.CanvasController = void 0;\r\nconst Component_1 = __webpack_require__(/*! ./Component */ \"./src/core/Component.ts\");\r\n/**\r\n * This controller manages the canvas\r\n */\r\nclass CanvasController extends Component_1.Component {\r\n    get gl() {\r\n        return this._glContext;\r\n    }\r\n    constructor(eng) {\r\n        super(eng);\r\n        this._container = document.createElement('div');\r\n        this._container.classList.add('canvas-container');\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 800;\r\n        canvas.height = 600;\r\n        canvas.classList.add('canvas');\r\n        this._container.append(canvas);\r\n        window.addEventListener('resize', (e) => {\r\n            this.eng.resize(canvas.width, canvas.height);\r\n        });\r\n        if (false) {}\r\n        else {\r\n            this._glContext = canvas.getContext('webgl2');\r\n        }\r\n        // Only continue if WebGL is available and working\r\n        if (this.gl === null) {\r\n            console.error('Unable to initialize WebGL2. Your browser or machine may not support it.');\r\n            return;\r\n        }\r\n    }\r\n    initialize(rootElement) {\r\n        rootElement.append(this._container);\r\n    }\r\n    logGlError(error, functionName, args) {\r\n        console.error('GL error: ' +\r\n            error +\r\n            ' in gl.' +\r\n            functionName +\r\n            '(' +\r\n            // @ts-ignore\r\n            WebGLDebugUtils.glFunctionArgsToString(functionName, args) +\r\n            ')');\r\n    }\r\n    logGLCall(functionName, args) {\r\n        /*\r\n        console.log(\r\n          'gl.' +\r\n            functionName +\r\n            '(' +\r\n            // @ts-ignore\r\n            (WebGLDebugUtils as any).glFunctionArgsToString(functionName, args) +\r\n            ')'\r\n        );\r\n        */\r\n    }\r\n}\r\nexports.CanvasController = CanvasController;\r\n\n\n//# sourceURL=webpack://earthquest/./src/core/CanvasController.ts?");

/***/ }),

/***/ "./src/core/Component.ts":
/*!*******************************!*\
  !*** ./src/core/Component.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Component = void 0;\r\n/**\r\n * A component is something that is part of the game engine and has a reference\r\n * to the game engine and all the subsystems like text managers, collision and raise events.\r\n */\r\nclass Component {\r\n    /**\r\n     * Give components easier access to gl\r\n     */\r\n    get gl() {\r\n        return this.eng.gl;\r\n    }\r\n    constructor(eng) {\r\n        this.eng = eng;\r\n    }\r\n}\r\nexports.Component = Component;\r\n\n\n//# sourceURL=webpack://earthquest/./src/core/Component.ts?");

/***/ }),

/***/ "./src/core/Engine.ts":
/*!****************************!*\
  !*** ./src/core/Engine.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Engine = void 0;\r\nconst FpsController_1 = __webpack_require__(/*! ./FpsController */ \"./src/core/FpsController.ts\");\r\nconst SpritePerspectiveShader_1 = __webpack_require__(/*! ../shaders/SpritePerspectiveShader */ \"./src/shaders/SpritePerspectiveShader.ts\");\r\nconst AssetManager_1 = __webpack_require__(/*! ../systems/AssetManager */ \"./src/systems/AssetManager.ts\");\r\nconst GameManager_1 = __webpack_require__(/*! ../systems/GameManager */ \"./src/systems/GameManager.ts\");\r\nconst TextManager_1 = __webpack_require__(/*! ../systems/TextManager */ \"./src/systems/TextManager.ts\");\r\nconst ViewManager_1 = __webpack_require__(/*! ../systems/ViewManager */ \"./src/systems/ViewManager.ts\");\r\nconst Random_1 = __webpack_require__(/*! ../utilities/Random */ \"./src/utilities/Random.ts\");\r\nconst CanvasController_1 = __webpack_require__(/*! ./CanvasController */ \"./src/core/CanvasController.ts\");\r\nconst InputHandler_1 = __webpack_require__(/*! ./InputHandler */ \"./src/core/InputHandler.ts\");\r\nconst SoundManager_1 = __webpack_require__(/*! ../systems/SoundManager */ \"./src/systems/SoundManager.ts\");\r\nconst DialogManager_1 = __webpack_require__(/*! ../systems/DialogManager */ \"./src/systems/DialogManager.ts\");\r\nconst UserAction_1 = __webpack_require__(/*! ./UserAction */ \"./src/core/UserAction.ts\");\r\n/**\r\n * The engine for this game. There is one instance of this\r\n * that is passed to every component. From there each component\r\n * can access the engine.\r\n */\r\nclass Engine {\r\n    get width() {\r\n        return this.gl.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.gl.canvas.height;\r\n    }\r\n    get gl() {\r\n        return this.canvasController.gl;\r\n    }\r\n    constructor() {\r\n        // create the canvas with the gl context so everything downstream can now use it\r\n        this.canvasController = new CanvasController_1.CanvasController(this);\r\n        this.random = new Random_1.Random(1001);\r\n        this.gameManager = new GameManager_1.GameManager(this);\r\n        this.input = new InputHandler_1.InputHandler(this);\r\n        this.dialogManager = new DialogManager_1.DialogManager(this);\r\n        this.soundManager = new SoundManager_1.SoundManager();\r\n        this.viewManager = new ViewManager_1.ViewManager(this);\r\n        this.textManager = new TextManager_1.TextManager(this);\r\n        this.fps = new FpsController_1.FpsController(this);\r\n        this.assetManager = new AssetManager_1.AssetManager(this);\r\n        this.spritePerspectiveShader = new SpritePerspectiveShader_1.SpritePerspectiveShader(this.gl, \"spritePerspectiveShader\");\r\n    }\r\n    async initialize(root) {\r\n        if (!root) {\r\n            console.error(\"cannot find root element\");\r\n        }\r\n        this.canvasController.initialize(root);\r\n        // Browsers copy pixels from the loaded image in top-to-bottom order —\r\n        // from the top-left corner; but WebGL wants the pixels in bottom-to-top\r\n        // order — starting from the bottom-left corner. So in order to prevent\r\n        // the resulting image texture from having the wrong orientation when\r\n        // rendered, we need to make the following call, to cause the pixels to\r\n        // be flipped into the bottom-to-top order that WebGL expects.\r\n        // See jameshfisher.com/2020/10/22/why-is-my-webgl-texture-upside-down\r\n        // NOTE, this must be done before any textures are loaded\r\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        //await this.gameManager.initialize();\r\n        await this.assetManager.initialize();\r\n        await this.textManager.initialize();\r\n        await this.dialogManager.initialize();\r\n        await this.sceneManager.initialize();\r\n        // some gl setup\r\n        this.gl.enable(this.gl.CULL_FACE);\r\n        this.gl.cullFace(this.gl.BACK);\r\n        this.gl.enable(this.gl.BLEND);\r\n        this.gl.blendFuncSeparate(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA, this.gl.ONE, this.gl.ZERO);\r\n        this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\r\n        this.gl.enable(this.gl.DEPTH_TEST); // Enable depth testing\r\n        this.gl.depthFunc(this.gl.LEQUAL); // Near things obscure far things\r\n    }\r\n    handleUserAction(state) {\r\n        return this.dialogManager.handleUserAction(state);\r\n    }\r\n    update(dt) {\r\n        // handle gamepad polling\r\n        this.input.preUpdate(dt);\r\n        // update the fps\r\n        this.fps.update(dt);\r\n        // handle input\r\n        if (this.input.action != UserAction_1.UserAction.None) {\r\n            this.soundManager.UserReady();\r\n            const inputState = { action: this.input.action, touchPoint: this.input.touchPoint };\r\n            // handle dialog input first\r\n            this.handleUserAction(inputState);\r\n        }\r\n        // clear the buffers\r\n        this.gl.clearColor(0.9, 0.3, 0.3, 1.0); // Clear to black, fully opaque\r\n        this.gl.clearDepth(1.0); // Clear everything\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n        this.sceneManager.update(dt);\r\n        this.dialogManager.update(dt);\r\n        this.textManager.update(dt);\r\n        this.input.postUpdate(dt);\r\n    }\r\n    resize(width, height) { }\r\n    dispose() { }\r\n}\r\nexports.Engine = Engine;\r\n\n\n//# sourceURL=webpack://earthquest/./src/core/Engine.ts?");

/***/ }),

/***/ "./src/core/FpsController.ts":
/*!***********************************!*\
  !*** ./src/core/FpsController.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.FpsController = void 0;\r\nconst Component_1 = __webpack_require__(/*! ./Component */ \"./src/core/Component.ts\");\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../math/vec2 */ \"./src/math/vec2.ts\"));\r\nconst vec4_1 = __importDefault(__webpack_require__(/*! ../math/vec4 */ \"./src/math/vec4.ts\"));\r\n/**\r\n * Shows the FPS\r\n */\r\nclass FpsController extends Component_1.Component {\r\n    constructor(eng) {\r\n        super(eng);\r\n        /** The frames per second (float) */\r\n        this.fps = 0;\r\n        /** Just a counter for displaying FPS to the console */\r\n        this.delayCounter = 0;\r\n        /** Show the FPS every second */\r\n        this.displayInterval = 1000;\r\n    }\r\n    /**\r\n     * Calculate the FPS\r\n     * @param {float} dt delta time in ms\r\n     */\r\n    update(dt) {\r\n        this.fps = 1000.0 / dt;\r\n        this.delayCounter += dt;\r\n        if (this.delayCounter >= this.displayInterval) {\r\n            //console.debug('ms ' + dt.toFixed(2) + ' FPS: ' + this.fps.toFixed(2));\r\n            this.eng.textManager.setTextBlock({\r\n                id: 'FPS',\r\n                text: 'FPS: ' + this.fps.toFixed(2),\r\n                position: new vec2_1.default([700, 580]),\r\n                color: new vec4_1.default([0.1, 0.5, 0.8, 1.0]),\r\n                depth: -1,\r\n                scale: 0.5,\r\n            });\r\n            this.delayCounter = 0;\r\n        }\r\n    }\r\n}\r\nexports.FpsController = FpsController;\r\n\n\n//# sourceURL=webpack://earthquest/./src/core/FpsController.ts?");

/***/ }),

/***/ "./src/core/InputHandler.ts":
/*!**********************************!*\
  !*** ./src/core/InputHandler.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.InputHandler = void 0;\r\nconst Component_1 = __webpack_require__(/*! ./Component */ \"./src/core/Component.ts\");\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../math/vec2 */ \"./src/math/vec2.ts\"));\r\nconst UserAction_1 = __webpack_require__(/*! ./UserAction */ \"./src/core/UserAction.ts\");\r\n/**\r\n * Translates keyboard and gamepad events to game actions\r\n */\r\nclass InputHandler extends Component_1.Component {\r\n    constructor(eng) {\r\n        super(eng);\r\n        this.action = UserAction_1.UserAction.None;\r\n        this.hasGamePad = 'getGamepads' in navigator;\r\n        console.debug('initializing input:');\r\n        if (this.hasGamePad) {\r\n            console.debug(' gamepad supported');\r\n            window.addEventListener('gamepadconnected', (e) => {\r\n                this.connectGamepad(e);\r\n            });\r\n            window.addEventListener('gamepaddisconnected', (e) => {\r\n                this.disconnectGamepad(e);\r\n            });\r\n        }\r\n        else {\r\n            console.warn('gamepad not supported!');\r\n        }\r\n        window.addEventListener('keydown', (e) => {\r\n            this.keydown(e);\r\n        });\r\n        window.addEventListener('keyup', (e) => {\r\n            this.keyup(e);\r\n        });\r\n        if (!this.isTouchEnabled()) {\r\n            console.debug(' mouse enabled');\r\n            window.addEventListener('mouseup', (e) => {\r\n                this.action = this.action | UserAction_1.UserAction.Tap;\r\n                this.touchPoint = new vec2_1.default(e.offsetX, e.offsetY);\r\n                console.debug('mouse ' + this.touchPoint.x + ', ' + this.touchPoint.y);\r\n            });\r\n        }\r\n        else {\r\n            console.debug(' touch enabled');\r\n            window.addEventListener('touchstart', (e) => {\r\n                if (e.touches.length > 0 && e.touches[0].target === eng.gl.canvas) {\r\n                    this.action = this.action | UserAction_1.UserAction.Tap;\r\n                    const t = e.touches[0].target;\r\n                    this.touchPoint = new vec2_1.default(e.touches[0].pageX - t.clientTop, e.touches[0].screenY);\r\n                    console.debug('touch ' + this.touchPoint.x + ', ' + this.touchPoint.y, e);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    isTouchEnabled() {\r\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\r\n    }\r\n    keydown(e) {\r\n        //console.log('keyboard down', e);\r\n        if (e.key == 'ArrowRight') {\r\n            this.action = this.action | UserAction_1.UserAction.Right;\r\n        }\r\n        if (e.key == 'ArrowLeft') {\r\n            this.action = this.action | UserAction_1.UserAction.Left;\r\n        }\r\n        if (e.key == 'ArrowUp') {\r\n            this.action = this.action | UserAction_1.UserAction.Up;\r\n        }\r\n        if (e.key == 'ArrowDown') {\r\n            this.action = this.action | UserAction_1.UserAction.Down;\r\n        }\r\n        if (e.key == ' ') {\r\n            this.action = this.action | UserAction_1.UserAction.Action;\r\n        }\r\n        if (e.key == 'Enter') {\r\n            this.action = this.action | UserAction_1.UserAction.Menu;\r\n        }\r\n        if (e.key == 'Backspace') {\r\n            this.action = this.action | UserAction_1.UserAction.Cancel;\r\n        }\r\n    }\r\n    keyup(e) {\r\n        //console.log('keyboard up ', e);\r\n        if (e.key == 'ArrowRight') {\r\n            this.action = this.action & ~UserAction_1.UserAction.Right;\r\n            this.action = this.action | UserAction_1.UserAction.RightPressed;\r\n        }\r\n        if (e.key == 'ArrowLeft') {\r\n            this.action = this.action & ~UserAction_1.UserAction.Left;\r\n            this.action = this.action | UserAction_1.UserAction.LeftPressed;\r\n        }\r\n        if (e.key == 'ArrowUp') {\r\n            this.action = this.action & ~UserAction_1.UserAction.Up;\r\n            this.action = this.action | UserAction_1.UserAction.UpPressed;\r\n        }\r\n        if (e.key == 'ArrowDown') {\r\n            this.action = this.action & ~UserAction_1.UserAction.Down;\r\n            this.action = this.action | UserAction_1.UserAction.DownPressed;\r\n        }\r\n        if (e.key == ' ') {\r\n            this.action = this.action & ~UserAction_1.UserAction.Action;\r\n            this.action = this.action | UserAction_1.UserAction.ActionPressed;\r\n        }\r\n        if (e.key == 'Enter') {\r\n            this.action = this.action & ~UserAction_1.UserAction.Menu;\r\n            this.action = this.action | UserAction_1.UserAction.MenuPressed;\r\n        }\r\n        if (e.key == 'Backspace') {\r\n            this.action = this.action & ~UserAction_1.UserAction.Cancel;\r\n            this.action = this.action | UserAction_1.UserAction.CancelPressed;\r\n        }\r\n    }\r\n    preUpdate(dt) {\r\n        // Always call `navigator.getGamepads()` inside of\r\n        // the game loop, not outside.\r\n        const gamepads = navigator.getGamepads();\r\n        for (const gamepad of gamepads) {\r\n            // Disregard empty slots.\r\n            if (!gamepad) {\r\n                continue;\r\n            }\r\n            //TODO capture state from game pads\r\n        }\r\n    }\r\n    postUpdate(dt) {\r\n        // reset press actions\r\n        this.action = this.action & ~UserAction_1.UserAction.LeftPressed;\r\n        this.action = this.action & ~UserAction_1.UserAction.RightPressed;\r\n        this.action = this.action & ~UserAction_1.UserAction.UpPressed;\r\n        this.action = this.action & ~UserAction_1.UserAction.DownPressed;\r\n        this.action = this.action & ~UserAction_1.UserAction.ActionPressed;\r\n        this.action = this.action & ~UserAction_1.UserAction.CancelPressed;\r\n        this.action = this.action & ~UserAction_1.UserAction.MenuPressed;\r\n        // reset tap\r\n        this.action = this.action & ~UserAction_1.UserAction.Tap;\r\n    }\r\n    connectGamepad(e) {\r\n        console.log('✅ 🎮 A gamepad was connected:', e.gamepad);\r\n    }\r\n    disconnectGamepad(e) {\r\n        console.debug('Gamepad disconnected', e.gamepad);\r\n    }\r\n}\r\nexports.InputHandler = InputHandler;\r\n\n\n//# sourceURL=webpack://earthquest/./src/core/InputHandler.ts?");

/***/ }),

/***/ "./src/core/UserAction.ts":
/*!********************************!*\
  !*** ./src/core/UserAction.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.UserAction = void 0;\r\n/**\r\n * User input action.\r\n */\r\nvar UserAction;\r\n(function (UserAction) {\r\n    UserAction[UserAction[\"None\"] = 0] = \"None\";\r\n    UserAction[UserAction[\"Right\"] = 1] = \"Right\";\r\n    UserAction[UserAction[\"Left\"] = 2] = \"Left\";\r\n    UserAction[UserAction[\"Up\"] = 4] = \"Up\";\r\n    UserAction[UserAction[\"Down\"] = 8] = \"Down\";\r\n    UserAction[UserAction[\"UpRight\"] = 5] = \"UpRight\";\r\n    UserAction[UserAction[\"UpLeft\"] = 6] = \"UpLeft\";\r\n    UserAction[UserAction[\"DownRight\"] = 9] = \"DownRight\";\r\n    UserAction[UserAction[\"DownLeft\"] = 10] = \"DownLeft\";\r\n    UserAction[UserAction[\"Menu\"] = 16] = \"Menu\";\r\n    UserAction[UserAction[\"Action\"] = 32] = \"Action\";\r\n    UserAction[UserAction[\"Cancel\"] = 64] = \"Cancel\";\r\n    // press actions. This happens when the buttons is released\r\n    // and reset for the next frame.\r\n    UserAction[UserAction[\"RightPressed\"] = 128] = \"RightPressed\";\r\n    UserAction[UserAction[\"LeftPressed\"] = 256] = \"LeftPressed\";\r\n    UserAction[UserAction[\"UpPressed\"] = 512] = \"UpPressed\";\r\n    UserAction[UserAction[\"DownPressed\"] = 1024] = \"DownPressed\";\r\n    UserAction[UserAction[\"MenuPressed\"] = 2048] = \"MenuPressed\";\r\n    UserAction[UserAction[\"ActionPressed\"] = 4096] = \"ActionPressed\";\r\n    UserAction[UserAction[\"CancelPressed\"] = 8192] = \"CancelPressed\";\r\n    UserAction[UserAction[\"Tap\"] = 16384] = \"Tap\";\r\n})(UserAction = exports.UserAction || (exports.UserAction = {}));\r\n\n\n//# sourceURL=webpack://earthquest/./src/core/UserAction.ts?");

/***/ }),

/***/ "./src/data/GameData.ts":
/*!******************************!*\
  !*** ./src/data/GameData.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GameData = void 0;\r\nconst PlayerData_1 = __webpack_require__(/*! ./PlayerData */ \"./src/data/PlayerData.ts\");\r\nclass GameData {\r\n    constructor() {\r\n        this.player = new PlayerData_1.PlayerData();\r\n    }\r\n}\r\nexports.GameData = GameData;\r\n\n\n//# sourceURL=webpack://earthquest/./src/data/GameData.ts?");

/***/ }),

/***/ "./src/data/PlayerData.ts":
/*!********************************!*\
  !*** ./src/data/PlayerData.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PlayerData = void 0;\r\n/**\r\n * Data for the player\r\n */\r\nclass PlayerData {\r\n    constructor() {\r\n        this.gold = 0;\r\n        this.timePlayed = { h: 0, m: 0, s: 0 };\r\n    }\r\n}\r\nexports.PlayerData = PlayerData;\r\n\n\n//# sourceURL=webpack://earthquest/./src/data/PlayerData.ts?");

/***/ }),

/***/ "./src/editor/AnimationEditor.ts":
/*!***************************************!*\
  !*** ./src/editor/AnimationEditor.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AnimationEditor = void 0;\r\n/**\r\n * The main entry point for the animation editor\r\n */\r\nclass AnimationEditor {\r\n    constructor() {\r\n        this.frames = ['./data/001-000.png', './data/001-001.png'];\r\n        this.counter = 0;\r\n        this.frameIndex = 0;\r\n    }\r\n    initialize(root) {\r\n        this.image = new Image();\r\n        this.image.src = this.frames[0];\r\n        root.append(this.image);\r\n        window.requestAnimationFrame(this.frame.bind(this));\r\n    }\r\n    frame(timestamp) {\r\n        // save the start time\r\n        if (this.previousTimeStamp === undefined) {\r\n            this.previousTimeStamp = timestamp;\r\n        }\r\n        // calculate the elapsed\r\n        const elapsed = timestamp - this.previousTimeStamp;\r\n        // update the scene\r\n        this.update(elapsed);\r\n        // request a new frame\r\n        this.previousTimeStamp = timestamp;\r\n        window.requestAnimationFrame(this.frame.bind(this));\r\n    }\r\n    update(dt) {\r\n        this.counter += dt;\r\n        if (this.counter > 1000) {\r\n            this.frameIndex++;\r\n            this.image.src = this.frames[this.frameIndex % 2];\r\n            this.counter = 0;\r\n        }\r\n    }\r\n}\r\nexports.AnimationEditor = AnimationEditor;\r\n\n\n//# sourceURL=webpack://earthquest/./src/editor/AnimationEditor.ts?");

/***/ }),

/***/ "./src/graphics/GlBuffer.ts":
/*!**********************************!*\
  !*** ./src/graphics/GlBuffer.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GlBuffer = void 0;\r\n/**\r\n * Creates a buffer of a quad.\r\n */\r\nclass GlBuffer {\r\n    /** were the buffers created */\r\n    get buffersCreated() {\r\n        return this.vertArrayBuffer != 0;\r\n    }\r\n    /**\r\n     * Constructor\r\n     * @param {WebGL2RenderingContext} gl\r\n     */\r\n    constructor(gl) {\r\n        this.gl = gl;\r\n        this.vertBuffer = 0;\r\n        this.indexBuffer = 0;\r\n        this.indexCount = 0;\r\n        this.vertArrayBuffer = 0;\r\n    }\r\n    /**\r\n     * Creates the buffers\r\n     */\r\n    createBuffer() {\r\n        this.dispose();\r\n        // create vert array buffer\r\n        this.vertArrayBuffer = this.gl.createVertexArray();\r\n        // position buffer\r\n        this.vertBuffer = this.gl.createBuffer();\r\n        // index buffer\r\n        this.indexBuffer = this.gl.createBuffer();\r\n    }\r\n    /**\r\n     * Create the buffer\r\n     * @param quads A array of quads that will be added to this buffer\r\n     * @param isStatic Is this buffer static\r\n     * @returns\r\n     */\r\n    setBuffers(quads, isStatic = true, bufferIndex = 0) {\r\n        // Now create an array of positions for the square.\r\n        const verts = [];\r\n        const index = [];\r\n        // check if we have buffer\r\n        if (!this.vertBuffer || !this.indexBuffer) {\r\n            this.createBuffer();\r\n        }\r\n        // reset counters\r\n        this.indexCount = 0;\r\n        //               Building a quad\r\n        //\r\n        //    Pos[-1, 1]                Texture [0,1]\r\n        //   p0---------p1 (max)      p0 ---------p1 (max)\r\n        //   |        / |              |        / |\r\n        //   |      /   |              |      /   |\r\n        //   |    /     |              |    /     |\r\n        //   |  /       |              |  /       |\r\n        //   p3---------p2             p3---------p2\r\n        //  (min)                      (min)\r\n        //\r\n        let vertCount = 0;\r\n        quads.forEach((quad) => {\r\n            verts.push(quad.min[0], quad.min[1], quad.min[2]);\r\n            verts.push(quad.minTex[0], quad.maxTex[1]);\r\n            verts.push(quad.max[0], quad.min[1], quad.min[2]);\r\n            verts.push(quad.maxTex[0], quad.maxTex[1]);\r\n            verts.push(quad.max[0], quad.max[1], quad.max[2]);\r\n            verts.push(quad.maxTex[0], quad.minTex[1]);\r\n            verts.push(quad.min[0], quad.max[1], quad.max[2]);\r\n            verts.push(quad.minTex[0], quad.minTex[1]);\r\n            index.push(vertCount + 0);\r\n            index.push(vertCount + 1);\r\n            index.push(vertCount + 3);\r\n            index.push(vertCount + 1);\r\n            index.push(vertCount + 2);\r\n            index.push(vertCount + 3);\r\n            vertCount += 4;\r\n        });\r\n        // save the index count for rendering\r\n        this.indexCount = index.length;\r\n        // bind the array buffer\r\n        this.gl.bindVertexArray(this.vertArrayBuffer);\r\n        // Create a buffer for positions.\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertBuffer);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(verts), isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW, bufferIndex);\r\n        // in order for this to work the vertex shader will\r\n        // need to have position\r\n        //  vec3 aPos;\r\n        //  vec2 aTex;\r\n        //\r\n        const positionAttribute = 0;\r\n        const textureAttribute = 1;\r\n        // Tell WebGL how to pull out the positions from the position\r\n        // buffer into the vertexPosition attribute\r\n        {\r\n            const numComponents = 3; // position x, y, z\r\n            const type = this.gl.FLOAT;\r\n            const normalize = false;\r\n            const stride = 5 * 4; // pos(x,y,x) + tex(u,v) * 4 byte float\r\n            const offset = 0;\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertBuffer);\r\n            this.gl.vertexAttribPointer(positionAttribute, numComponents, type, normalize, stride, offset);\r\n            this.gl.enableVertexAttribArray(positionAttribute);\r\n        }\r\n        // Tell WebGL how to pull out the texture coordinates from\r\n        // the texture coordinate buffer into the textureCoord attribute.\r\n        {\r\n            const numComponents = 2;\r\n            const type = this.gl.FLOAT;\r\n            const normalize = false;\r\n            const stride = 5 * 4; // pos(x,y,x) + tex(u,v) * 4 byte float\r\n            const offset = 3 * 4; // start after the position\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertBuffer);\r\n            this.gl.vertexAttribPointer(textureAttribute, numComponents, type, normalize, stride, offset);\r\n            this.gl.enableVertexAttribArray(textureAttribute);\r\n        }\r\n        // index buffer\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(index), isStatic ? this.gl.STATIC_DRAW : this.gl.DYNAMIC_DRAW, bufferIndex);\r\n    }\r\n    /**\r\n     * Enable vertex attributes and element buffer\r\n     */\r\n    enable() {\r\n        if (!this.buffersCreated) {\r\n            console.error('buffers were not created!');\r\n        }\r\n        else {\r\n            // the vertex and index buffer are grouped with this so we only need\r\n            // to enable this array buffer\r\n            this.gl.bindVertexArray(this.vertArrayBuffer);\r\n        }\r\n    }\r\n    /**\r\n     * Clean up buffer\r\n     */\r\n    dispose() {\r\n        if (this.vertBuffer) {\r\n            this.gl.deleteBuffer(this.vertBuffer);\r\n            this.vertBuffer = 0;\r\n        }\r\n        if (this.indexBuffer) {\r\n            this.gl.deleteBuffer(this.indexBuffer);\r\n            this.indexBuffer = 0;\r\n        }\r\n        if (this.vertArrayBuffer) {\r\n            this.gl.deleteVertexArray(this.vertArrayBuffer);\r\n        }\r\n    }\r\n    draw() { }\r\n}\r\nexports.GlBuffer = GlBuffer;\r\n\n\n//# sourceURL=webpack://earthquest/./src/graphics/GlBuffer.ts?");

/***/ }),

/***/ "./src/graphics/ShaderController.ts":
/*!******************************************!*\
  !*** ./src/graphics/ShaderController.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ShaderController = void 0;\r\n/**\r\n * Manages one shader program\r\n */\r\nclass ShaderController {\r\n    /**\r\n     * Creates the shader controller\r\n     * @param {WebGL2RenderingContext} gl GL Context\r\n     * @param {string} shaderName The name of the shader. This is just a way to id different shader for debugging\r\n     */\r\n    constructor(gl, shaderName) {\r\n        this.gl = gl;\r\n        this.shaderName = shaderName;\r\n    }\r\n    /**\r\n     * Initialize a shader program, so WebGL knows how to draw our data\r\n     * @param {*} vsSource\r\n     * @param {*} fsSource\r\n     * @returns\r\n     */\r\n    initShaderProgram(vsSource, fsSource) {\r\n        const vertexShader = this._loadShader(this.gl.VERTEX_SHADER, vsSource);\r\n        const fragmentShader = this._loadShader(this.gl.FRAGMENT_SHADER, fsSource);\r\n        // Create the shader program\r\n        this.shaderProgram = this.gl.createProgram();\r\n        this.gl.attachShader(this.shaderProgram, vertexShader);\r\n        this.gl.attachShader(this.shaderProgram, fragmentShader);\r\n        // set the attribute locations\r\n        // not these must exist in the shader so that\r\n        // the buffer maps to the correct locations.\r\n        this.gl.bindAttribLocation(this.shaderProgram, 0, 'aPos');\r\n        this.gl.bindAttribLocation(this.shaderProgram, 1, 'aTex');\r\n        // link the program\r\n        this.gl.linkProgram(this.shaderProgram);\r\n        // needed for get program parameter\r\n        this.gl.useProgram(this.shaderProgram);\r\n        // If creating the shader program failed, alert\r\n        if (!this.gl.getProgramParameter(this.shaderProgram, this.gl.LINK_STATUS)) {\r\n            console.error(`Unable to initialize the shader program: ${this.gl.getProgramInfoLog(this.shaderProgram)}`);\r\n        }\r\n    }\r\n    /**\r\n     * Get a shader attribute location\r\n     * @param {string} name Name of the attribute\r\n     * @return {number} The attribute location\r\n     */\r\n    getAttribute(name) {\r\n        this.gl.useProgram(this.shaderProgram);\r\n        const loc = this.gl.getAttribLocation(this.shaderProgram, name);\r\n        if (loc === null) {\r\n            console.error('can not find attribute: ' + name + ' in shader ' + this.shaderName);\r\n        }\r\n        return loc;\r\n    }\r\n    /**\r\n     * Get a shader attribute location\r\n     * @param {string} name Name of the attribute\r\n     * @return {number} The attribute location\r\n     */\r\n    getUniform(name) {\r\n        this.gl.useProgram(this.shaderProgram);\r\n        const loc = this.gl.getUniformLocation(this.shaderProgram, name);\r\n        if (loc === null) {\r\n            console.error('can not find uniform: ' + name + ' in shader ' + this.shaderName);\r\n        }\r\n        return loc;\r\n    }\r\n    /**\r\n     * Sets a uniform for a vec4\r\n     * @param loc\r\n     * @param value\r\n     */\r\n    setVec4(loc, value) {\r\n        this.gl.uniform4f(loc, value.x, value.y, value.z, value.w);\r\n    }\r\n    /**\r\n     * Set the mat 4\r\n     * @param loc\r\n     * @param value\r\n     */\r\n    setMat4(loc, value) {\r\n        this.gl.uniformMatrix4fv(loc, false, value.getValues());\r\n    }\r\n    /**\r\n     * Sets a uniform for a vec3\r\n     * @param loc\r\n     * @param value\r\n     */\r\n    setVec3(loc, value) {\r\n        this.gl.uniform3f(loc, value.x, value.y, value.z);\r\n    }\r\n    /**\r\n     * Enable the shader\r\n     */\r\n    enable() {\r\n        // Tell WebGL to use our program when drawing\r\n        this.gl.useProgram(this.shaderProgram);\r\n    }\r\n    /**\r\n     * creates a shader of the given type, uploads the source and\r\n     * compiles it.\r\n     * @param {*} gl\r\n     * @param {*} type\r\n     * @param {*} source\r\n     * @returns\r\n     */\r\n    _loadShader(type, source) {\r\n        const shader = this.gl.createShader(type);\r\n        // Send the source to the shader object\r\n        this.gl.shaderSource(shader, source);\r\n        // Compile the shader program\r\n        this.gl.compileShader(shader);\r\n        // See if it compiled successfully\r\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n            const typeString = type == this.gl.VERTEX_SHADER ? 'vertex' : 'fragment';\r\n            console.error(`An error occurred compiling the ${typeString} shaders in ${this.shaderName}: ${this.gl.getShaderInfoLog(shader)}`);\r\n            this.gl.deleteShader(shader);\r\n            return null;\r\n        }\r\n        return shader;\r\n    }\r\n}\r\nexports.ShaderController = ShaderController;\r\n\n\n//# sourceURL=webpack://earthquest/./src/graphics/ShaderController.ts?");

/***/ }),

/***/ "./src/graphics/Sprite.ts":
/*!********************************!*\
  !*** ./src/graphics/Sprite.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Sprite = exports.SpriteFlip = void 0;\r\nconst mat2_1 = __importDefault(__webpack_require__(/*! ../math/mat2 */ \"./src/math/mat2.ts\"));\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../math/vec2 */ \"./src/math/vec2.ts\"));\r\nconst MathConst = __importStar(__webpack_require__(/*! ../math/constants */ \"./src/math/constants.ts\"));\r\nvar SpriteFlip;\r\n(function (SpriteFlip) {\r\n    SpriteFlip[SpriteFlip[\"None\"] = 0] = \"None\";\r\n    SpriteFlip[SpriteFlip[\"XFlip\"] = 1] = \"XFlip\";\r\n    SpriteFlip[SpriteFlip[\"YFlip\"] = 2] = \"YFlip\";\r\n    SpriteFlip[SpriteFlip[\"Both\"] = 3] = \"Both\";\r\n})(SpriteFlip = exports.SpriteFlip || (exports.SpriteFlip = {}));\r\n/**\r\n * This is a utility class that is used to create a IQuadModel that\r\n * is used to create a GLBuffer.\r\n */\r\nclass Sprite {\r\n    get tag() {\r\n        return this._tag;\r\n    }\r\n    /**\r\n     * Get the position in pixels.\r\n     */\r\n    get position() {\r\n        return this._position;\r\n    }\r\n    get depth() {\r\n        return this._depth;\r\n    }\r\n    get rotation() {\r\n        return this._spriteRotate;\r\n    }\r\n    getSpriteWidth() {\r\n        return this._spriteLoc.width * this._scale.x;\r\n    }\r\n    getSpriteHeight() {\r\n        return this._spriteLoc.height * this._scale.y;\r\n    }\r\n    get quad() {\r\n        return this._quad;\r\n    }\r\n    constructor(tag) {\r\n        this._tag = tag;\r\n        this.initialize({ width: 0, height: 0 }, 800, 600);\r\n    }\r\n    /**\r\n     * Setup the sprite with a sprite sheet and screen size. All calculations are done in\r\n     * pixels.\r\n     * @param spriteSheet\r\n     * @param screenWidth\r\n     * @param screenHeight\r\n     */\r\n    initialize(spriteSheetSize, screenWidth, screenHeight) {\r\n        this._quad = {\r\n            min: [-1, -1, -1],\r\n            max: [1, 1, 1],\r\n            minTex: [0, 0],\r\n            maxTex: [1, 1],\r\n        };\r\n        this._position = { x: 0, y: 0 };\r\n        this._spriteLoc = { x: 0, y: 0, width: 0, height: 0 };\r\n        this._spriteSheetSize = {\r\n            width: spriteSheetSize.width,\r\n            height: spriteSheetSize.height,\r\n        };\r\n        this._screenSize = { width: screenWidth, height: screenHeight };\r\n        this._spriteFlip = SpriteFlip.None;\r\n        this._spriteRotate = 0;\r\n        this._scale = { x: 1.0, y: 1.0 };\r\n        this._depth = 0;\r\n        this._positionOffset = { x: 0, y: 0 };\r\n    }\r\n    /**\r\n     * This function is used to select a sprite from the sprite sheet\r\n     */\r\n    setSprite(opt) {\r\n        this._spriteLoc.x = opt.pixelXOffset;\r\n        this._spriteLoc.y = opt.pixelYOffset;\r\n        this._spriteLoc.width = opt.spriteWidth;\r\n        this._spriteLoc.height = opt.spriteHeight;\r\n        this.calculateQuad();\r\n    }\r\n    setSpriteFlip(spriteFlip) {\r\n        this._spriteFlip = spriteFlip ?? SpriteFlip.None;\r\n        this.calculateQuad();\r\n    }\r\n    /**\r\n     * Scale can be set uniform as one number or as separate components (x,y).\r\n     * @param scale a number or {x: number, y: number}\r\n     */\r\n    setSpriteScale(scale) {\r\n        if (typeof scale === 'number') {\r\n            this._scale = { x: scale, y: scale };\r\n        }\r\n        else {\r\n            this._scale.x = scale.x;\r\n            this._scale.y = scale.y;\r\n        }\r\n        this.calculateQuad();\r\n    }\r\n    /**\r\n     * Sets an offset for the position based on what the image is.\r\n     * This allows sprites to be position in the cells correctly.\r\n     * @param x in pixels\r\n     * @param y in pixels\r\n     */\r\n    setSpritePositionOffset(x, y) {\r\n        this._positionOffset.x = x;\r\n        this._positionOffset.y = y;\r\n    }\r\n    /**\r\n     * Set the rotate of the sprite\r\n     * @param rotation rotation in degrees\r\n     */\r\n    setSpriteRotate(rotation = 1.0) {\r\n        this._spriteRotate = rotation;\r\n        this.calculateQuad();\r\n    }\r\n    /**\r\n     * Set  x and y in pixels and depth in screen space\r\n     * @param x\r\n     * @param y\r\n     * @param depth screen space [-1, 1]. 1 is far -1 is close\r\n     */\r\n    setPosition(x, y, depth) {\r\n        this._position.x = x;\r\n        this._position.y = y;\r\n        if (depth != undefined) {\r\n            this._depth = depth;\r\n        }\r\n        this.calculateQuad();\r\n    }\r\n    /**\r\n     * Builds a IQuadModel\r\n     */\r\n    calculateQuad() {\r\n        const sheetW = this._spriteSheetSize.width;\r\n        const sheetH = this._spriteSheetSize.height;\r\n        let minX = this._spriteLoc.x / sheetW;\r\n        let minY = 1.0 - this._spriteLoc.y / sheetH;\r\n        let maxX = (this._spriteLoc.x + this._spriteLoc.width) / sheetW;\r\n        let maxY = 1.0 - (this._spriteLoc.y + this._spriteLoc.height) / sheetH;\r\n        if (this._spriteFlip == SpriteFlip.XFlip) {\r\n            this._quad.minTex = [maxX, minY];\r\n            this._quad.maxTex = [minX, maxY];\r\n        }\r\n        else if (this._spriteFlip == SpriteFlip.YFlip) {\r\n            this._quad.minTex = [minX, maxY];\r\n            this._quad.maxTex = [maxX, minY];\r\n        }\r\n        else if (this._spriteFlip == SpriteFlip.Both) {\r\n            this._quad.minTex = [maxX, maxY];\r\n            this._quad.maxTex = [minX, minY];\r\n        }\r\n        else {\r\n            this._quad.minTex = [minX, minY];\r\n            this._quad.maxTex = [maxX, maxY];\r\n        }\r\n        // convert to screen space, min is the top left corner\r\n        this._quad.min = [\r\n            this._position.x + this._positionOffset.x,\r\n            this._position.y + this._positionOffset.y,\r\n            this._depth,\r\n        ];\r\n        const spriteWidth = this._spriteLoc.width * this._scale.x;\r\n        const spriteHeight = this._spriteLoc.height * this._scale.y;\r\n        // max is the bottom right\r\n        this._quad.max = [\r\n            this._quad.min[0] + spriteWidth,\r\n            this._quad.min[1] + spriteHeight,\r\n            this._depth,\r\n        ];\r\n        // if we have some rotation then apply it\r\n        if (!MathConst.equals(this._spriteRotate, 0.0)) {\r\n            let minTmp = new vec2_1.default([-this._quad.min[0], -this._quad.min[1]]);\r\n            let maxTmp = new vec2_1.default([-this._quad.max[0], -this._quad.max[1]]);\r\n            const rotation = new mat2_1.default();\r\n            rotation.setIdentity();\r\n            rotation.rotate(MathConst.toRadian(this._spriteRotate));\r\n            minTmp.multiplyMat2(rotation);\r\n            maxTmp.multiplyMat2(rotation);\r\n            this._quad.min[0] = minTmp.x + this._quad.min[0];\r\n            this._quad.min[1] = minTmp.y + this._quad.min[1];\r\n            this._quad.max[0] = maxTmp.x + this._quad.max[0];\r\n            this._quad.max[1] = maxTmp.y + this._quad.max[1];\r\n        }\r\n    }\r\n}\r\nexports.Sprite = Sprite;\r\n\n\n//# sourceURL=webpack://earthquest/./src/graphics/Sprite.ts?");

/***/ }),

/***/ "./src/graphics/SpriteBaseController.ts":
/*!**********************************************!*\
  !*** ./src/graphics/SpriteBaseController.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SpritBaseController = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nconst GlBuffer_1 = __webpack_require__(/*! ./GlBuffer */ \"./src/graphics/GlBuffer.ts\");\r\n/**\r\n * This class controls a sprite's position and scale\r\n * given a sprite sheet and some json data that holds the\r\n * sprite offset and size in pixels.\r\n */\r\nclass SpritBaseController extends Component_1.Component {\r\n    get rotation() {\r\n        return this.sprite.rotation;\r\n    }\r\n    get buffer() {\r\n        return this._buffer;\r\n    }\r\n    get selectedSpriteIndex() {\r\n        return this._selectedSpriteIndex;\r\n    }\r\n    get selectedSpriteId() {\r\n        return this._selectedSpriteId;\r\n    }\r\n    get spriteCount() {\r\n        return this._spriteData.tiles.length;\r\n    }\r\n    constructor(eng) {\r\n        super(eng);\r\n        this._spriteData;\r\n        this._indexLookup = new Map();\r\n        this._selectedSpriteIndex = 0;\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * setup the sprite\r\n     * @param texture\r\n     * @param spriteData\r\n     */\r\n    initialize(texture, spriteData, defaultSprite) {\r\n        // save the data\r\n        this._spriteData = spriteData;\r\n        // cache the indices\r\n        this._indexLookup.clear();\r\n        this._spriteData.tiles.forEach((val, i) => {\r\n            this._indexLookup.set(val.id, i);\r\n        });\r\n        // create the gl buffers for this sprite\r\n        this._buffer = new GlBuffer_1.GlBuffer(this.gl);\r\n        // setup the shader for the sprite\r\n        this._spriteTexture = texture;\r\n        // needs to be committed to buffer when update is called\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Gets the list of all the sprites\r\n     * @returns\r\n     */\r\n    getSpriteList() {\r\n        const idList = [];\r\n        this._spriteData.tiles.forEach((sprite) => idList.push(sprite.id));\r\n        return idList;\r\n    }\r\n    /**\r\n     * Sets the sprites position\r\n     * @param x in screen pixels\r\n     * @param y in screen pixels\r\n     * @param scale multiplied by the sprite width and height\r\n     * @param depth is depth buffer space (-1 to 1) 1 is far -1 is near\r\n     */\r\n    setSpritePosition(x, y, depth) {\r\n        this.sprite.setPosition(x, y, depth);\r\n        this._dirty = true;\r\n    }\r\n    spriteWidth() {\r\n        return this.sprite.getSpriteWidth();\r\n    }\r\n    spriteHeight() {\r\n        return this.sprite.getSpriteHeight();\r\n    }\r\n    /**\r\n     * Scale the image default is 1.0\r\n     * @param scale uniform scale or separate components (x,y)\r\n     */\r\n    scale(scale) {\r\n        this.sprite.setSpriteScale(scale);\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Flip the image.\r\n     * @param flipDirection\r\n     */\r\n    flip(flipDirection) {\r\n        this.sprite.setSpriteFlip(flipDirection);\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Rotate the angle in degrees\r\n     * @param angle In Degrees\r\n     */\r\n    rotate(angle) {\r\n        this.sprite.setSpriteRotate(angle);\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Sets the view offset for the projection. If undefined it will use the\r\n     * offset from ViewManager\r\n     * @param offset\r\n     */\r\n    viewOffset(offset) {\r\n        this._viewOffset = offset;\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Sets a view scale for the projection. If undefined it will use the\r\n     * offset from ViewManager\r\n     * @param scale\r\n     */\r\n    viewScale(scale) {\r\n        this._viewScale = scale;\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Select a sprite\r\n     * @param id the id in the sprite sheet\r\n     */\r\n    setSprite(id) {\r\n        // find the sprite of a given id\r\n        let index = 0;\r\n        // number or look up\r\n        if (typeof id === 'number') {\r\n            index = id;\r\n        }\r\n        else {\r\n            index = this._indexLookup.get(id);\r\n        }\r\n        const sprite = this._spriteData.tiles[index ?? 0];\r\n        if (sprite) {\r\n            // does the id match or if the id is null just pick the first one or if id is a\r\n            // number does the index match\r\n            this._selectedSpriteIndex = index;\r\n            this._selectedSpriteId = sprite.id;\r\n            const xOffset = sprite.offset ? sprite.offset[0] : 0;\r\n            const yOffset = sprite.offset ? sprite.offset[1] : 0;\r\n            this.sprite.setSpritePositionOffset(xOffset, yOffset);\r\n            // use sprite loc\r\n            if (sprite.loc) {\r\n                this.sprite.setSprite({\r\n                    pixelXOffset: sprite.loc[0],\r\n                    pixelYOffset: sprite.loc[1],\r\n                    spriteWidth: sprite.loc[2],\r\n                    spriteHeight: sprite.loc[3],\r\n                });\r\n            }\r\n            else {\r\n                // use index\r\n                const pixelX = this._spriteData.tileWidth * sprite.index[0];\r\n                const pixelY = this._spriteData.tileHeight * sprite.index[1];\r\n                this.sprite.setSprite({\r\n                    pixelXOffset: pixelX,\r\n                    pixelYOffset: pixelY,\r\n                    spriteWidth: this._spriteData.tileWidth,\r\n                    spriteHeight: this._spriteData.tileHeight,\r\n                });\r\n            }\r\n            this._dirty = true;\r\n        }\r\n        else {\r\n            console.error('cannot find sprite ' + id);\r\n        }\r\n    }\r\n    /**\r\n     * Draw the sprite\r\n     * @param dt\r\n     */\r\n    update(dt) {\r\n        // only commit to buffer if something changed\r\n        if (this._dirty) {\r\n            this.commitToBuffer();\r\n            this._dirty = false;\r\n        }\r\n        if (!this._buffer.buffersCreated) {\r\n            console.error('buffers are not created. Call commitToBuffers() first.');\r\n        }\r\n        else {\r\n            this._buffer.enable();\r\n            this.eng.spritePerspectiveShader.setSpriteSheet(this._spriteTexture);\r\n            this.eng.spritePerspectiveShader.enable();\r\n            const view = this.eng.viewManager;\r\n            let projection = view.projection;\r\n            if (this._viewOffset && this._viewScale) {\r\n                projection = view.calculateProjection(this._viewOffset, this._viewScale);\r\n            }\r\n            // set the project\r\n            this.eng.spritePerspectiveShader.setProj(projection);\r\n            this.render();\r\n        }\r\n    }\r\n}\r\nexports.SpritBaseController = SpritBaseController;\r\n\n\n//# sourceURL=webpack://earthquest/./src/graphics/SpriteBaseController.ts?");

/***/ }),

/***/ "./src/graphics/SpriteBatchController.ts":
/*!***********************************************!*\
  !*** ./src/graphics/SpriteBatchController.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SpritBatchController = void 0;\r\nconst Sprite_1 = __webpack_require__(/*! ../graphics/Sprite */ \"./src/graphics/Sprite.ts\");\r\nconst SpriteBaseController_1 = __webpack_require__(/*! ./SpriteBaseController */ \"./src/graphics/SpriteBaseController.ts\");\r\n/**\r\n * This class controls a sprite's position and scale\r\n * given a sprite sheet and some json data that holds the\r\n * sprite offset and size in pixels.\r\n */\r\nclass SpritBatchController extends SpriteBaseController_1.SpritBaseController {\r\n    /** The sprite */\r\n    get sprite() {\r\n        return this.getSprite(this._activeSprite);\r\n    }\r\n    /**\r\n     * Get the number of sprites\r\n     */\r\n    get spriteCount() {\r\n        return this._spriteData.tiles.length;\r\n    }\r\n    constructor(eng) {\r\n        super(eng);\r\n        this._sprites = new Map();\r\n    }\r\n    /**\r\n     * setup the sprite\r\n     * @param texture\r\n     * @param spriteData\r\n     */\r\n    initialize(texture, spriteData, defaultSprite) {\r\n        super.initialize(texture, spriteData, defaultSprite);\r\n    }\r\n    /**\r\n     * A way of keeping track of our sprites\r\n     * @param id\r\n     * @returns\r\n     */\r\n    getSprite(id) {\r\n        let sprite = this._sprites.get(id);\r\n        if (!this._sprites.has(id)) {\r\n            // create new sprite and initialize it\r\n            sprite = new Sprite_1.Sprite(id);\r\n            sprite.initialize({\r\n                width: this._spriteTexture.width,\r\n                height: this._spriteTexture.height,\r\n            }, this.gl.canvas.width, this.gl.canvas.height);\r\n            this._sprites.set(id, sprite);\r\n        }\r\n        return sprite;\r\n    }\r\n    /**\r\n     * Do we have a sprite with this id\r\n     * @param id\r\n     * @returns\r\n     */\r\n    hasSprite(id) {\r\n        return this._sprites.has(id);\r\n    }\r\n    /**\r\n     * clear all sprites\r\n     */\r\n    clearAllSprites() {\r\n        this._sprites.clear();\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Sets an active sprite\r\n     * @param spriteId\r\n     */\r\n    activeSprite(spriteId) {\r\n        this._activeSprite = spriteId;\r\n    }\r\n    /**\r\n     * remove a sprite. You will need to call Commit for the\r\n     * sprite to be removed.\r\n     * @param spriteId\r\n     * @returns\r\n     */\r\n    removeSprite(spriteId) {\r\n        this._dirty = true;\r\n        return this._sprites.delete(spriteId);\r\n    }\r\n    /**\r\n     * Commit all sprites to the buffer\r\n     */\r\n    commitToBuffer() {\r\n        const quads = [];\r\n        //console.debug('Committing ' + this._sprites.size);\r\n        this._sprites.forEach((sprite) => {\r\n            quads.push(sprite.quad);\r\n        });\r\n        // update the buffer\r\n        this._buffer.setBuffers(quads, false);\r\n    }\r\n    render() {\r\n        const vertexCount = this._buffer.indexCount;\r\n        const type = this.gl.UNSIGNED_SHORT;\r\n        const offset = 0;\r\n        this.gl.drawElements(this.gl.TRIANGLES, vertexCount, type, offset);\r\n    }\r\n}\r\nexports.SpritBatchController = SpritBatchController;\r\n\n\n//# sourceURL=webpack://earthquest/./src/graphics/SpriteBatchController.ts?");

/***/ }),

/***/ "./src/graphics/SpriteController.ts":
/*!******************************************!*\
  !*** ./src/graphics/SpriteController.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SpritController = void 0;\r\nconst Sprite_1 = __webpack_require__(/*! ../graphics/Sprite */ \"./src/graphics/Sprite.ts\");\r\nconst SpriteBaseController_1 = __webpack_require__(/*! ./SpriteBaseController */ \"./src/graphics/SpriteBaseController.ts\");\r\n/**\r\n * This class controls a sprite's position and scale\r\n * given a sprite sheet and some json data that holds the\r\n * sprite offset and size in pixels.\r\n */\r\nclass SpritController extends SpriteBaseController_1.SpritBaseController {\r\n    get sprite() {\r\n        return this._sprite;\r\n    }\r\n    constructor(eng) {\r\n        super(eng);\r\n        this._sprite = new Sprite_1.Sprite();\r\n    }\r\n    /**\r\n     * setup the sprite\r\n     * @param texture\r\n     * @param spriteData\r\n     */\r\n    initialize(texture, spriteData, defaultSprite) {\r\n        super.initialize(texture, spriteData);\r\n        // set up the sprite\r\n        this.sprite.initialize({ width: texture.width, height: texture.height }, this.gl.canvas.width, this.gl.canvas.height);\r\n        // set a default sprite\r\n        this.setSprite(defaultSprite);\r\n        // set the position of the sprite on the screen\r\n        this.sprite.setPosition(0, 0, 0);\r\n    }\r\n    commitToBuffer() {\r\n        this._buffer.setBuffers([this._sprite.quad], false);\r\n    }\r\n    render() {\r\n        const vertexCount = this._buffer.indexCount;\r\n        const type = this.gl.UNSIGNED_SHORT;\r\n        const offset = 0;\r\n        this.gl.drawElements(this.gl.TRIANGLES, vertexCount, type, offset);\r\n    }\r\n}\r\nexports.SpritController = SpritController;\r\n\n\n//# sourceURL=webpack://earthquest/./src/graphics/SpriteController.ts?");

/***/ }),

/***/ "./src/graphics/TextController.ts":
/*!****************************************!*\
  !*** ./src/graphics/TextController.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TextController = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nconst GlBuffer_1 = __webpack_require__(/*! ./GlBuffer */ \"./src/graphics/GlBuffer.ts\");\r\nclass TextController extends Component_1.Component {\r\n    constructor(eng, fontData) {\r\n        super(eng);\r\n        this.fontData = fontData;\r\n        // Create a new buffer\r\n        this.buffer = new GlBuffer_1.GlBuffer(this.gl);\r\n    }\r\n    /**\r\n     * Initialize a new text block\r\n     * @param block Text properties\r\n     * @param lineHeight The height of the tallest character in pixels\r\n     */\r\n    initialize(block, lineHeight) {\r\n        const screenHeight = this.eng.height;\r\n        const screenWidth = this.eng.width;\r\n        const originX = block.position.x;\r\n        const originY = this.eng.height - block.position.y;\r\n        let offsetX = originX;\r\n        let offsetY = originY;\r\n        let xpos1 = offsetX;\r\n        let ypos1 = offsetY;\r\n        let xpos2 = offsetX;\r\n        let ypos2 = offsetY;\r\n        this.color = block.color;\r\n        const zpos = block.depth;\r\n        let charCount = 0;\r\n        const text = block.text;\r\n        // if the text is empty there is nothing to do\r\n        if (!text) {\r\n            return;\r\n        }\r\n        const quads = [];\r\n        // loop over all the characters in the text block\r\n        // and create geometry for them.\r\n        for (let i = 0; i < text.length; i++) {\r\n            // get the character\r\n            let ch = text.charAt(i);\r\n            // check for new line and out of range\r\n            if (ch == '\\n') {\r\n                offsetY -= lineHeight;\r\n                offsetX = originX;\r\n                continue;\r\n            }\r\n            else if (ch < ' ' || ch > '~') {\r\n                ch = '?';\r\n            }\r\n            const font = this.fontData.find((value) => value.ch == ch);\r\n            if (!font) {\r\n                console.warn(\"Don't have data for ch: \" + ch);\r\n            }\r\n            xpos1 = offsetX + font.bearingX;\r\n            ypos1 = offsetY - (font.sizeY - font.bearingY); // bottom of the letter\r\n            xpos2 = offsetX + block.scale * font.advance;\r\n            ypos2 = offsetY + block.scale * font.bearingY; // top of the letter\r\n            // set for the next letter\r\n            offsetX = xpos2;\r\n            const tu1 = font.u1;\r\n            const tv1 = 1 - font.v2;\r\n            const tu2 = font.u2;\r\n            const tv2 = 1 - font.v1;\r\n            const quad = {\r\n                min: [(xpos1 / screenWidth) * 2 - 1.0, (ypos1 / screenHeight) * 2 - 1.0, zpos],\r\n                max: [(xpos2 / screenWidth) * 2 - 1.0, (ypos2 / screenHeight) * 2 - 1.0, zpos],\r\n                minTex: [tu1, tv2],\r\n                maxTex: [tu2, tv1],\r\n            };\r\n            charCount++;\r\n            quads.push(quad);\r\n        }\r\n        this.buffer.setBuffers(quads, false);\r\n    }\r\n    /**\r\n     * Updates the text animations.\r\n     * @param {float} dt Delta time in ms\r\n     */\r\n    update(dt) {\r\n        if (this.buffer.buffersCreated) {\r\n            // enable the buffer\r\n            this.buffer.enable();\r\n            {\r\n                const vertexCount = this.buffer.indexCount;\r\n                const type = this.gl.UNSIGNED_SHORT;\r\n                const offset = 0;\r\n                this.gl.drawElements(this.gl.TRIANGLES, vertexCount, type, offset);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.TextController = TextController;\r\n\n\n//# sourceURL=webpack://earthquest/./src/graphics/TextController.ts?");

/***/ }),

/***/ "./src/graphics/Texture.ts":
/*!*********************************!*\
  !*** ./src/graphics/Texture.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Texture = void 0;\r\n/**\r\n * OpenGL texture\r\n */\r\nclass Texture {\r\n    constructor(gl) {\r\n        this.gl = gl;\r\n        this.glTexture = 0;\r\n    }\r\n    /**\r\n     * Enable this texture, activate the texture and set the uniform for the shader\r\n     */\r\n    enable(uniformIndex, slot = 0, activeTexture = this.gl.TEXTURE0) {\r\n        // Tell WebGL we want to affect texture unit\r\n        this.gl.activeTexture(activeTexture);\r\n        // Bind the texture to texture unit 0\r\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.glTexture);\r\n        // Tell the shader we bound the texture to texture unit\r\n        this.gl.uniform1i(uniformIndex, slot);\r\n    }\r\n    async loadImage(imagePath) {\r\n        return new Promise((resolve, reject) => {\r\n            this.texturePath = imagePath;\r\n            this.glTexture = this.gl.createTexture();\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, this.glTexture);\r\n            // Because images have to be download over the internet\r\n            // they might take a moment until they are ready.\r\n            // Until then put a single pixel in the texture so we can\r\n            // use it immediately. When the image has finished downloading\r\n            // we'll update the texture with the contents of the image.\r\n            const level = 0;\r\n            const internalFormat = this.gl.RGBA;\r\n            const width = 1;\r\n            const height = 1;\r\n            const border = 0;\r\n            const srcFormat = this.gl.RGBA;\r\n            const srcType = this.gl.UNSIGNED_BYTE;\r\n            const pixel = new Uint8Array([0, 0, 255, 255]); // opaque blue\r\n            this.gl.texImage2D(this.gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\r\n            const image = new Image();\r\n            image.onload = () => {\r\n                this.gl.bindTexture(this.gl.TEXTURE_2D, this.glTexture);\r\n                this.width = image.width;\r\n                this.height = image.height;\r\n                this.gl.texImage2D(this.gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\r\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.MIRRORED_REPEAT);\r\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.MIRRORED_REPEAT);\r\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\r\n                this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\r\n                this.gl.generateMipmap(this.gl.TEXTURE_2D);\r\n                return resolve();\r\n            };\r\n            image.onerror = (event) => {\r\n                console.error(event);\r\n                return reject();\r\n            };\r\n            image.src = imagePath;\r\n        });\r\n    }\r\n    isPowerOf2(value) {\r\n        return (value & (value - 1)) == 0;\r\n    }\r\n}\r\nexports.Texture = Texture;\r\n\n\n//# sourceURL=webpack://earthquest/./src/graphics/Texture.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n__webpack_require__(/*! ./css/canvas.css */ \"./src/css/canvas.css\");\r\nconst PlatformEngine_1 = __webpack_require__(/*! ./_game/PlatformEngine */ \"./src/_game/PlatformEngine.ts\");\r\nconst AnimationEditor_1 = __webpack_require__(/*! ./editor/AnimationEditor */ \"./src/editor/AnimationEditor.ts\");\r\nconst queryString = window.location.search;\r\nconst urlParams = new URLSearchParams(queryString);\r\nif (urlParams.get('animation')) {\r\n    const animation = new AnimationEditor_1.AnimationEditor();\r\n    animation.initialize(document.getElementById('rootContainer'));\r\n}\r\nelse {\r\n    /**\r\n     * Create the only instance of a canvas controller\r\n     */\r\n    const engine = new PlatformEngine_1.PlatformEngine();\r\n    /**\r\n     * Start the engine then request and animation frame\r\n     */\r\n    engine\r\n        .initialize(document.getElementById('rootContainer'))\r\n        .then(() => {\r\n        /** time tracking variables */\r\n        let previousTimeStamp;\r\n        // request the first frame\r\n        window.requestAnimationFrame((t) => {\r\n            function step(timestamp) {\r\n                // save the start time\r\n                if (previousTimeStamp === undefined) {\r\n                    previousTimeStamp = timestamp;\r\n                }\r\n                // calculate the elapsed\r\n                const elapsed = timestamp - previousTimeStamp;\r\n                // update the scene\r\n                engine.update(elapsed);\r\n                // request a new frame\r\n                previousTimeStamp = timestamp;\r\n                window.requestAnimationFrame(step);\r\n            }\r\n            step(t);\r\n        });\r\n    })\r\n        .catch((e) => {\r\n        console.error('Error initializing ', e);\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://earthquest/./src/index.ts?");

/***/ }),

/***/ "./src/math/Curve.ts":
/*!***************************!*\
  !*** ./src/math/Curve.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Curve = exports.CurveType = void 0;\r\nconst MathConst = __importStar(__webpack_require__(/*! ../math/constants */ \"./src/math/constants.ts\"));\r\nvar CurveType;\r\n(function (CurveType) {\r\n    CurveType[CurveType[\"discreet\"] = 0] = \"discreet\";\r\n    CurveType[CurveType[\"linear\"] = 1] = \"linear\";\r\n})(CurveType = exports.CurveType || (exports.CurveType = {}));\r\n/**\r\n * Class used to create an animation.\r\n */\r\nclass Curve {\r\n    isRunning() {\r\n        return this._running;\r\n    }\r\n    getValue() {\r\n        return this._position;\r\n    }\r\n    getTime() {\r\n        return this._time;\r\n    }\r\n    isDone() {\r\n        return this._isDone;\r\n    }\r\n    constructor() {\r\n        this._points = [];\r\n        this._position = 0;\r\n        this._time = 0;\r\n        this._reverse = false;\r\n        this._pingPong = false;\r\n        this._type = CurveType.discreet;\r\n        this._isDone = false;\r\n    }\r\n    start(restart, onDone, onUpdate) {\r\n        if (restart) {\r\n            this._time = 0;\r\n            this._position = 0;\r\n            this._isDone = false;\r\n            if (onDone) {\r\n                this.onDone = onDone;\r\n            }\r\n            if (onUpdate) {\r\n                this.onUpdate = onUpdate;\r\n            }\r\n            // if there are points use them\r\n            if (this._points.length > 0) {\r\n                // handle reverse\r\n                if (this._reverse) {\r\n                    this._time = this._points[this._points.length - 1].t;\r\n                    this._position = this._points[this._points.length - 1].p;\r\n                }\r\n                else {\r\n                    this._time = this._points[0].t;\r\n                    this._position = this._points[0].p;\r\n                }\r\n            }\r\n        }\r\n        this._running = true;\r\n        return this;\r\n    }\r\n    /**\r\n     * Pause the animation and set a custom position if wanted\r\n     * @param position\r\n     * @returns\r\n     */\r\n    pause(position) {\r\n        if (position != undefined) {\r\n            this._position = position;\r\n        }\r\n        this._running = false;\r\n        return this;\r\n    }\r\n    /**\r\n     * Repeat the curve.\r\n     * @param value How many times to repeat. -1 is forever\r\n     * @returns\r\n     */\r\n    repeat(value) {\r\n        this._repeat = value;\r\n        return this;\r\n    }\r\n    curve(type) {\r\n        this._type = type;\r\n        return this;\r\n    }\r\n    points(points) {\r\n        // make a copy and sort it by time\r\n        this._points = points.slice().sort((a, b) => a.t - b.t);\r\n        return this;\r\n    }\r\n    reverse(reverse) {\r\n        this._reverse = reverse;\r\n        return this;\r\n    }\r\n    pingPong(pingPong) {\r\n        this._pingPong = pingPong;\r\n        return this;\r\n    }\r\n    update(dt) {\r\n        // if it is running and not done calculate\r\n        // a new position\r\n        if (this._running && !this._isDone) {\r\n            // update time first.\r\n            if (this._reverse) {\r\n                this._time -= dt;\r\n            }\r\n            else {\r\n                this._time += dt;\r\n            }\r\n            // find the closest point\r\n            const indices = this.findClosetTimeIndices(this._time);\r\n            const isDone = (this._reverse && this._time <= 0) || (!this._reverse && this._time >= this._points[this._points.length - 1].t);\r\n            if (isDone) {\r\n                // if there are still more points or are we done\r\n                // set the position. We only have one point\r\n                // so this is easy.\r\n                this._position = this._points[indices[0]].p;\r\n                // handle update\r\n                if (this.onUpdate) {\r\n                    this.onUpdate(this._position, this);\r\n                }\r\n                // handle the repeat and ping pong\r\n                if (this._repeat > 0 || this._repeat == -1) {\r\n                    // if we are ping ponging\r\n                    if (this._pingPong) {\r\n                        this._reverse = !this._reverse;\r\n                    }\r\n                    else {\r\n                        // reset time\r\n                        this._time = 0;\r\n                    }\r\n                    if (this._repeat > 0) {\r\n                        this._repeat--;\r\n                    }\r\n                }\r\n                else {\r\n                    // we are done. Set flag.\r\n                    this._isDone = true;\r\n                    // raise event as needed\r\n                    if (this.onDone) {\r\n                        this.onDone(this);\r\n                    }\r\n                }\r\n                // no more calculations we hit the last point\r\n                return;\r\n            }\r\n            if (indices[0] < 0 || indices[0] > this._points.length - 1) {\r\n                console.debug('noooo');\r\n            }\r\n            let p0 = this._points[indices[0]].p;\r\n            let p1 = this._points[indices[1]].p;\r\n            // calculate the position\r\n            if (this._type == CurveType.linear) {\r\n                const t0 = this._points[indices[0]].t;\r\n                const t1 = this._points[indices[1]].t;\r\n                const t = MathConst.clamp((this._time - t0) / (t1 - t0), 0, 1.0);\r\n                this._position = p0 + t * (p1 - p0);\r\n            }\r\n            else if (this._type == CurveType.discreet) {\r\n                this._position = p0;\r\n            }\r\n            if (this.onUpdate) {\r\n                this.onUpdate(this._position, this);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Finds the index closest to the given time value.\r\n     * @param time\r\n     * @returns\r\n     */\r\n    findClosetTimeIndices(time) {\r\n        let startIndex = 0;\r\n        const clip = this._points;\r\n        let endIndex = clip.length - 1;\r\n        let startTime = clip[startIndex].t;\r\n        let lastTime = clip[endIndex].t;\r\n        // check time bounds\r\n        if (time <= startTime) {\r\n            return [startIndex, startIndex];\r\n        }\r\n        else if (time >= lastTime) {\r\n            return [endIndex, endIndex];\r\n        }\r\n        while (true) {\r\n            // if the current is the time we are looking for\r\n            // or the startIndex is one less then endIndex\r\n            // then we are done.\r\n            if (time == startTime || startIndex >= endIndex - 1) {\r\n                if (startIndex < endIndex) {\r\n                    return [startIndex, startIndex + 1];\r\n                }\r\n                else {\r\n                    return [startIndex, startIndex];\r\n                }\r\n            }\r\n            const midIndex = Math.floor((startIndex + endIndex) / 2.0);\r\n            const midFrame = clip[midIndex].t;\r\n            if (time > midFrame) {\r\n                startIndex = midIndex;\r\n            }\r\n            else if (time < midFrame) {\r\n                endIndex = midIndex;\r\n            }\r\n            else {\r\n                // found it in the middle\r\n                if (this._reverse) {\r\n                    return [midIndex, midIndex - 1];\r\n                }\r\n                else {\r\n                    return [midIndex, midIndex + 1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Curve = Curve;\r\n\n\n//# sourceURL=webpack://earthquest/./src/math/Curve.ts?");

/***/ }),

/***/ "./src/math/constants.ts":
/*!*******************************!*\
  !*** ./src/math/constants.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.clamp = exports.equals = exports.toRadian = exports.degree = exports.round = exports.RANDOM = exports.epsilon = void 0;\r\nexports.epsilon = 0.00001;\r\n//\r\n// Custom math functions\r\n//\r\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n// Configuration Constants\r\nexports.RANDOM = Math.random;\r\n/**\r\n * Symmetric round\r\n * see https://www.npmjs.com/package/round-half-up-symmetric#user-content-detailed-background\r\n *\r\n * @param {Number} a value to round\r\n */\r\nfunction round(a) {\r\n    if (a >= 0)\r\n        return Math.round(a);\r\n    return a % 0.5 === 0 ? Math.floor(a) : Math.round(a);\r\n}\r\nexports.round = round;\r\nexports.degree = Math.PI / 180;\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nfunction toRadian(a) {\r\n    return a * exports.degree;\r\n}\r\nexports.toRadian = toRadian;\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nfunction equals(a, b) {\r\n    return Math.abs(a - b) <= exports.epsilon * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}\r\nexports.equals = equals;\r\n/**\r\n * Clamp a number between values\r\n * @param num\r\n * @param min\r\n * @param max\r\n * @returns\r\n */\r\nfunction clamp(num, min, max) {\r\n    let val = num < min ? min : num > max ? max : num;\r\n    return val;\r\n}\r\nexports.clamp = clamp;\r\n\n\n//# sourceURL=webpack://earthquest/./src/math/constants.ts?");

/***/ }),

/***/ "./src/math/mat2.ts":
/*!**************************!*\
  !*** ./src/math/mat2.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ./vec2 */ \"./src/math/vec2.ts\"));\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\r\nclass mat2 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(4);\r\n        if (values !== undefined) {\r\n            this.init(values);\r\n        }\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    init(values) {\r\n        for (let i = 0; i < 4; i++) {\r\n            this.values[i] = values[i];\r\n        }\r\n        return this;\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 4; i++) {\r\n            this.values[i] = 0;\r\n        }\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new mat2();\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            dest.values[i] = this.values[i];\r\n        }\r\n        return dest;\r\n    }\r\n    all() {\r\n        const data = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            data[i] = this.values[i];\r\n        }\r\n        return data;\r\n    }\r\n    row(index) {\r\n        return [\r\n            this.values[index * 2 + 0],\r\n            this.values[index * 2 + 1],\r\n        ];\r\n    }\r\n    col(index) {\r\n        return [\r\n            this.values[index],\r\n            this.values[index + 2],\r\n        ];\r\n    }\r\n    equals(matrix, threshold = constants_1.epsilon) {\r\n        for (let i = 0; i < 4; i++) {\r\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    determinant() {\r\n        return this.values[0] * this.values[3] - this.values[2] * this.values[1];\r\n    }\r\n    setIdentity() {\r\n        this.values[0] = 1;\r\n        this.values[1] = 0;\r\n        this.values[2] = 0;\r\n        this.values[3] = 1;\r\n        return this;\r\n    }\r\n    transpose() {\r\n        const temp = this.values[1];\r\n        this.values[1] = this.values[2];\r\n        this.values[2] = temp;\r\n        return this;\r\n    }\r\n    inverse() {\r\n        let det = this.determinant();\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        const a11 = this.values[0];\r\n        this.values[0] = det * (this.values[3]);\r\n        this.values[1] = det * (-this.values[1]);\r\n        this.values[2] = det * (-this.values[2]);\r\n        this.values[3] = det * a11;\r\n        return this;\r\n    }\r\n    multiply(matrix) {\r\n        const a11 = this.values[0];\r\n        const a12 = this.values[1];\r\n        const a21 = this.values[2];\r\n        const a22 = this.values[3];\r\n        this.values[0] = a11 * matrix.at(0) + a12 * matrix.at(2);\r\n        this.values[1] = a11 * matrix.at(1) + a12 * matrix.at(3);\r\n        this.values[2] = a21 * matrix.at(0) + a22 * matrix.at(2);\r\n        this.values[3] = a21 * matrix.at(1) + a22 * matrix.at(3);\r\n        return this;\r\n    }\r\n    rotate(angle) {\r\n        const a11 = this.values[0];\r\n        const a12 = this.values[1];\r\n        const a21 = this.values[2];\r\n        const a22 = this.values[3];\r\n        const sin = Math.sin(angle);\r\n        const cos = Math.cos(angle);\r\n        this.values[0] = a11 * cos + a12 * sin;\r\n        this.values[1] = a11 * -sin + a12 * cos;\r\n        this.values[2] = a21 * cos + a22 * sin;\r\n        this.values[3] = a21 * -sin + a22 * cos;\r\n        return this;\r\n    }\r\n    multiplyVec2(vector, result) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        if (result) {\r\n            result.xy = [\r\n                x * this.values[0] + y * this.values[1],\r\n                x * this.values[2] + y * this.values[3],\r\n            ];\r\n            return result;\r\n        }\r\n        else {\r\n            return new vec2_1.default([\r\n                x * this.values[0] + y * this.values[1],\r\n                x * this.values[2] + y * this.values[3],\r\n            ]);\r\n        }\r\n    }\r\n    scale(vector) {\r\n        const a11 = this.values[0];\r\n        const a12 = this.values[1];\r\n        const a21 = this.values[2];\r\n        const a22 = this.values[3];\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        this.values[0] = a11 * x;\r\n        this.values[1] = a12 * y;\r\n        this.values[2] = a21 * x;\r\n        this.values[3] = a22 * y;\r\n        return this;\r\n    }\r\n    static product(m1, m2, result) {\r\n        const a11 = m1.at(0);\r\n        const a12 = m1.at(1);\r\n        const a21 = m1.at(2);\r\n        const a22 = m1.at(3);\r\n        if (result) {\r\n            result.init([\r\n                a11 * m2.at(0) + a12 * m2.at(2),\r\n                a11 * m2.at(1) + a12 * m2.at(3),\r\n                a21 * m2.at(0) + a22 * m2.at(2),\r\n                a21 * m2.at(1) + a22 * m2.at(3),\r\n            ]);\r\n            return result;\r\n        }\r\n        else {\r\n            return new mat2([\r\n                a11 * m2.at(0) + a12 * m2.at(2),\r\n                a11 * m2.at(1) + a12 * m2.at(3),\r\n                a21 * m2.at(0) + a22 * m2.at(2),\r\n                a21 * m2.at(1) + a22 * m2.at(3),\r\n            ]);\r\n        }\r\n    }\r\n}\r\nexports[\"default\"] = mat2;\r\nmat2.identity = new mat2().setIdentity();\r\n\n\n//# sourceURL=webpack://earthquest/./src/math/mat2.ts?");

/***/ }),

/***/ "./src/math/mat3.ts":
/*!**************************!*\
  !*** ./src/math/mat3.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst mat4_1 = __importDefault(__webpack_require__(/*! ./mat4 */ \"./src/math/mat4.ts\"));\r\nconst quat_1 = __importDefault(__webpack_require__(/*! ./quat */ \"./src/math/quat.ts\"));\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ./vec2 */ \"./src/math/vec2.ts\"));\r\nconst vec3_1 = __importDefault(__webpack_require__(/*! ./vec3 */ \"./src/math/vec3.ts\"));\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\r\nclass mat3 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(9);\r\n        if (values !== undefined) {\r\n            this.init(values);\r\n        }\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    init(values) {\r\n        for (let i = 0; i < 9; i++) {\r\n            this.values[i] = values[i];\r\n        }\r\n        return this;\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 9; i++) {\r\n            this.values[i] = 0;\r\n        }\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new mat3();\r\n        }\r\n        for (let i = 0; i < 9; i++) {\r\n            dest.values[i] = this.values[i];\r\n        }\r\n        return dest;\r\n    }\r\n    all() {\r\n        const data = [];\r\n        for (let i = 0; i < 9; i++) {\r\n            data[i] = this.values[i];\r\n        }\r\n        return data;\r\n    }\r\n    row(index) {\r\n        return [\r\n            this.values[index * 3 + 0],\r\n            this.values[index * 3 + 1],\r\n            this.values[index * 3 + 2],\r\n        ];\r\n    }\r\n    col(index) {\r\n        return [\r\n            this.values[index],\r\n            this.values[index + 3],\r\n            this.values[index + 6],\r\n        ];\r\n    }\r\n    equals(matrix, threshold = constants_1.epsilon) {\r\n        for (let i = 0; i < 9; i++) {\r\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    determinant() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[3];\r\n        const a11 = this.values[4];\r\n        const a12 = this.values[5];\r\n        const a20 = this.values[6];\r\n        const a21 = this.values[7];\r\n        const a22 = this.values[8];\r\n        const det01 = a22 * a11 - a12 * a21;\r\n        const det11 = -a22 * a10 + a12 * a20;\r\n        const det21 = a21 * a10 - a11 * a20;\r\n        return a00 * det01 + a01 * det11 + a02 * det21;\r\n    }\r\n    setIdentity() {\r\n        this.values[0] = 1;\r\n        this.values[1] = 0;\r\n        this.values[2] = 0;\r\n        this.values[3] = 0;\r\n        this.values[4] = 1;\r\n        this.values[5] = 0;\r\n        this.values[6] = 0;\r\n        this.values[7] = 0;\r\n        this.values[8] = 1;\r\n        return this;\r\n    }\r\n    transpose() {\r\n        const temp01 = this.values[1];\r\n        const temp02 = this.values[2];\r\n        const temp12 = this.values[5];\r\n        this.values[1] = this.values[3];\r\n        this.values[2] = this.values[6];\r\n        this.values[3] = temp01;\r\n        this.values[5] = this.values[7];\r\n        this.values[6] = temp02;\r\n        this.values[7] = temp12;\r\n        return this;\r\n    }\r\n    inverse() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[3];\r\n        const a11 = this.values[4];\r\n        const a12 = this.values[5];\r\n        const a20 = this.values[6];\r\n        const a21 = this.values[7];\r\n        const a22 = this.values[8];\r\n        const det01 = a22 * a11 - a12 * a21;\r\n        const det11 = -a22 * a10 + a12 * a20;\r\n        const det21 = a21 * a10 - a11 * a20;\r\n        let det = a00 * det01 + a01 * det11 + a02 * det21;\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        this.values[0] = det01 * det;\r\n        this.values[1] = (-a22 * a01 + a02 * a21) * det;\r\n        this.values[2] = (a12 * a01 - a02 * a11) * det;\r\n        this.values[3] = det11 * det;\r\n        this.values[4] = (a22 * a00 - a02 * a20) * det;\r\n        this.values[5] = (-a12 * a00 + a02 * a10) * det;\r\n        this.values[6] = det21 * det;\r\n        this.values[7] = (-a21 * a00 + a01 * a20) * det;\r\n        this.values[8] = (a11 * a00 - a01 * a10) * det;\r\n        return this;\r\n    }\r\n    multiply(matrix) {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[3];\r\n        const a11 = this.values[4];\r\n        const a12 = this.values[5];\r\n        const a20 = this.values[6];\r\n        const a21 = this.values[7];\r\n        const a22 = this.values[8];\r\n        const b00 = matrix.at(0);\r\n        const b01 = matrix.at(1);\r\n        const b02 = matrix.at(2);\r\n        const b10 = matrix.at(3);\r\n        const b11 = matrix.at(4);\r\n        const b12 = matrix.at(5);\r\n        const b20 = matrix.at(6);\r\n        const b21 = matrix.at(7);\r\n        const b22 = matrix.at(8);\r\n        this.values[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n        this.values[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n        this.values[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n        this.values[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n        this.values[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n        this.values[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n        this.values[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n        this.values[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n        this.values[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n        return this;\r\n    }\r\n    multiplyVec2(vector, result) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        if (result) {\r\n            result.xy = [\r\n                x * this.values[0] + y * this.values[3] + this.values[6],\r\n                x * this.values[1] + y * this.values[4] + this.values[7],\r\n            ];\r\n            return result;\r\n        }\r\n        else {\r\n            return new vec2_1.default([\r\n                x * this.values[0] + y * this.values[3] + this.values[6],\r\n                x * this.values[1] + y * this.values[4] + this.values[7],\r\n            ]);\r\n        }\r\n    }\r\n    multiplyVec3(vector, result) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        if (result) {\r\n            result.xyz = [\r\n                x * this.values[0] + y * this.values[3] + z * this.values[6],\r\n                x * this.values[1] + y * this.values[4] + z * this.values[7],\r\n                x * this.values[2] + y * this.values[5] + z * this.values[8],\r\n            ];\r\n            return result;\r\n        }\r\n        else {\r\n            return new vec3_1.default([\r\n                x * this.values[0] + y * this.values[3] + z * this.values[6],\r\n                x * this.values[1] + y * this.values[4] + z * this.values[7],\r\n                x * this.values[2] + y * this.values[5] + z * this.values[8],\r\n            ]);\r\n        }\r\n    }\r\n    toMat4(result) {\r\n        if (result) {\r\n            result.init([\r\n                this.values[0],\r\n                this.values[1],\r\n                this.values[2],\r\n                0,\r\n                this.values[3],\r\n                this.values[4],\r\n                this.values[5],\r\n                0,\r\n                this.values[6],\r\n                this.values[7],\r\n                this.values[8],\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                1,\r\n            ]);\r\n            return result;\r\n        }\r\n        else {\r\n            return new mat4_1.default([\r\n                this.values[0],\r\n                this.values[1],\r\n                this.values[2],\r\n                0,\r\n                this.values[3],\r\n                this.values[4],\r\n                this.values[5],\r\n                0,\r\n                this.values[6],\r\n                this.values[7],\r\n                this.values[8],\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                1,\r\n            ]);\r\n        }\r\n    }\r\n    toQuat() {\r\n        const m00 = this.values[0];\r\n        const m01 = this.values[1];\r\n        const m02 = this.values[2];\r\n        const m10 = this.values[3];\r\n        const m11 = this.values[4];\r\n        const m12 = this.values[5];\r\n        const m20 = this.values[6];\r\n        const m21 = this.values[7];\r\n        const m22 = this.values[8];\r\n        const fourXSquaredMinus1 = m00 - m11 - m22;\r\n        const fourYSquaredMinus1 = m11 - m00 - m22;\r\n        const fourZSquaredMinus1 = m22 - m00 - m11;\r\n        const fourWSquaredMinus1 = m00 + m11 + m22;\r\n        let biggestIndex = 0;\r\n        let fourBiggestSquaredMinus1 = fourWSquaredMinus1;\r\n        if (fourXSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourXSquaredMinus1;\r\n            biggestIndex = 1;\r\n        }\r\n        if (fourYSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourYSquaredMinus1;\r\n            biggestIndex = 2;\r\n        }\r\n        if (fourZSquaredMinus1 > fourBiggestSquaredMinus1) {\r\n            fourBiggestSquaredMinus1 = fourZSquaredMinus1;\r\n            biggestIndex = 3;\r\n        }\r\n        const biggestVal = Math.sqrt(fourBiggestSquaredMinus1 + 1) * 0.5;\r\n        const mult = 0.25 / biggestVal;\r\n        const result = new quat_1.default();\r\n        switch (biggestIndex) {\r\n            case 0:\r\n                result.w = biggestVal;\r\n                result.x = (m12 - m21) * mult;\r\n                result.y = (m20 - m02) * mult;\r\n                result.z = (m01 - m10) * mult;\r\n                break;\r\n            case 1:\r\n                result.w = (m12 - m21) * mult;\r\n                result.x = biggestVal;\r\n                result.y = (m01 + m10) * mult;\r\n                result.z = (m20 + m02) * mult;\r\n                break;\r\n            case 2:\r\n                result.w = (m20 - m02) * mult;\r\n                result.x = (m01 + m10) * mult;\r\n                result.y = biggestVal;\r\n                result.z = (m12 + m21) * mult;\r\n                break;\r\n            case 3:\r\n                result.w = (m01 - m10) * mult;\r\n                result.x = (m20 + m02) * mult;\r\n                result.y = (m12 + m21) * mult;\r\n                result.z = biggestVal;\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    rotate(angle, axis) {\r\n        let x = axis.x;\r\n        let y = axis.y;\r\n        let z = axis.z;\r\n        let length = Math.sqrt(x * x + y * y + z * z);\r\n        if (!length) {\r\n            return null;\r\n        }\r\n        if (length !== 1) {\r\n            length = 1 / length;\r\n            x *= length;\r\n            y *= length;\r\n            z *= length;\r\n        }\r\n        const s = Math.sin(angle);\r\n        const c = Math.cos(angle);\r\n        const t = 1.0 - c;\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const b00 = x * x * t + c;\r\n        const b01 = y * x * t + z * s;\r\n        const b02 = z * x * t - y * s;\r\n        const b10 = x * y * t - z * s;\r\n        const b11 = y * y * t + c;\r\n        const b12 = z * y * t + x * s;\r\n        const b20 = x * z * t + y * s;\r\n        const b21 = y * z * t - x * s;\r\n        const b22 = z * z * t + c;\r\n        this.values[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        this.values[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        this.values[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        this.values[3] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        this.values[4] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        this.values[5] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        this.values[6] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        this.values[7] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        this.values[8] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        return this;\r\n    }\r\n    static product(m1, m2, result) {\r\n        const a00 = m1.at(0);\r\n        const a01 = m1.at(1);\r\n        const a02 = m1.at(2);\r\n        const a10 = m1.at(3);\r\n        const a11 = m1.at(4);\r\n        const a12 = m1.at(5);\r\n        const a20 = m1.at(6);\r\n        const a21 = m1.at(7);\r\n        const a22 = m1.at(8);\r\n        const b00 = m2.at(0);\r\n        const b01 = m2.at(1);\r\n        const b02 = m2.at(2);\r\n        const b10 = m2.at(3);\r\n        const b11 = m2.at(4);\r\n        const b12 = m2.at(5);\r\n        const b20 = m2.at(6);\r\n        const b21 = m2.at(7);\r\n        const b22 = m2.at(8);\r\n        if (result) {\r\n            result.init([\r\n                b00 * a00 + b01 * a10 + b02 * a20,\r\n                b00 * a01 + b01 * a11 + b02 * a21,\r\n                b00 * a02 + b01 * a12 + b02 * a22,\r\n                b10 * a00 + b11 * a10 + b12 * a20,\r\n                b10 * a01 + b11 * a11 + b12 * a21,\r\n                b10 * a02 + b11 * a12 + b12 * a22,\r\n                b20 * a00 + b21 * a10 + b22 * a20,\r\n                b20 * a01 + b21 * a11 + b22 * a21,\r\n                b20 * a02 + b21 * a12 + b22 * a22,\r\n            ]);\r\n            return result;\r\n        }\r\n        else {\r\n            return new mat3([\r\n                b00 * a00 + b01 * a10 + b02 * a20,\r\n                b00 * a01 + b01 * a11 + b02 * a21,\r\n                b00 * a02 + b01 * a12 + b02 * a22,\r\n                b10 * a00 + b11 * a10 + b12 * a20,\r\n                b10 * a01 + b11 * a11 + b12 * a21,\r\n                b10 * a02 + b11 * a12 + b12 * a22,\r\n                b20 * a00 + b21 * a10 + b22 * a20,\r\n                b20 * a01 + b21 * a11 + b22 * a21,\r\n                b20 * a02 + b21 * a12 + b22 * a22,\r\n            ]);\r\n        }\r\n    }\r\n}\r\nexports[\"default\"] = mat3;\r\nmat3.identity = new mat3().setIdentity();\r\n\n\n//# sourceURL=webpack://earthquest/./src/math/mat3.ts?");

/***/ }),

/***/ "./src/math/mat4.ts":
/*!**************************!*\
  !*** ./src/math/mat4.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst mat3_1 = __importDefault(__webpack_require__(/*! ./mat3 */ \"./src/math/mat3.ts\"));\r\nconst vec3_1 = __importDefault(__webpack_require__(/*! ./vec3 */ \"./src/math/vec3.ts\"));\r\nconst vec4_1 = __importDefault(__webpack_require__(/*! ./vec4 */ \"./src/math/vec4.ts\"));\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\r\nclass mat4 {\r\n    constructor(values) {\r\n        this.values = new Float32Array(16);\r\n        if (values !== undefined) {\r\n            this.init(values);\r\n        }\r\n    }\r\n    getValues() {\r\n        return this.values;\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    init(values) {\r\n        for (let i = 0; i < 16; i++) {\r\n            this.values[i] = values[i];\r\n        }\r\n        return this;\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 16; i++) {\r\n            this.values[i] = 0;\r\n        }\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new mat4();\r\n        }\r\n        for (let i = 0; i < 16; i++) {\r\n            dest.values[i] = this.values[i];\r\n        }\r\n        return dest;\r\n    }\r\n    all() {\r\n        const data = [];\r\n        for (let i = 0; i < 16; i++) {\r\n            data[i] = this.values[i];\r\n        }\r\n        return data;\r\n    }\r\n    row(index) {\r\n        return [\r\n            this.values[index * 4 + 0],\r\n            this.values[index * 4 + 1],\r\n            this.values[index * 4 + 2],\r\n            this.values[index * 4 + 3],\r\n        ];\r\n    }\r\n    col(index) {\r\n        return [this.values[index], this.values[index + 4], this.values[index + 8], this.values[index + 12]];\r\n    }\r\n    equals(matrix, threshold = constants_1.epsilon) {\r\n        for (let i = 0; i < 16; i++) {\r\n            if (Math.abs(this.values[i] - matrix.at(i)) > threshold) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    determinant() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const a30 = this.values[12];\r\n        const a31 = this.values[13];\r\n        const a32 = this.values[14];\r\n        const a33 = this.values[15];\r\n        const det00 = a00 * a11 - a01 * a10;\r\n        const det01 = a00 * a12 - a02 * a10;\r\n        const det02 = a00 * a13 - a03 * a10;\r\n        const det03 = a01 * a12 - a02 * a11;\r\n        const det04 = a01 * a13 - a03 * a11;\r\n        const det05 = a02 * a13 - a03 * a12;\r\n        const det06 = a20 * a31 - a21 * a30;\r\n        const det07 = a20 * a32 - a22 * a30;\r\n        const det08 = a20 * a33 - a23 * a30;\r\n        const det09 = a21 * a32 - a22 * a31;\r\n        const det10 = a21 * a33 - a23 * a31;\r\n        const det11 = a22 * a33 - a23 * a32;\r\n        return det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06;\r\n    }\r\n    setIdentity() {\r\n        this.values[0] = 1;\r\n        this.values[1] = 0;\r\n        this.values[2] = 0;\r\n        this.values[3] = 0;\r\n        this.values[4] = 0;\r\n        this.values[5] = 1;\r\n        this.values[6] = 0;\r\n        this.values[7] = 0;\r\n        this.values[8] = 0;\r\n        this.values[9] = 0;\r\n        this.values[10] = 1;\r\n        this.values[11] = 0;\r\n        this.values[12] = 0;\r\n        this.values[13] = 0;\r\n        this.values[14] = 0;\r\n        this.values[15] = 1;\r\n        return this;\r\n    }\r\n    transpose() {\r\n        const temp01 = this.values[1];\r\n        const temp02 = this.values[2];\r\n        const temp03 = this.values[3];\r\n        const temp12 = this.values[6];\r\n        const temp13 = this.values[7];\r\n        const temp23 = this.values[11];\r\n        this.values[1] = this.values[4];\r\n        this.values[2] = this.values[8];\r\n        this.values[3] = this.values[12];\r\n        this.values[4] = temp01;\r\n        this.values[6] = this.values[9];\r\n        this.values[7] = this.values[13];\r\n        this.values[8] = temp02;\r\n        this.values[9] = temp12;\r\n        this.values[11] = this.values[14];\r\n        this.values[12] = temp03;\r\n        this.values[13] = temp13;\r\n        this.values[14] = temp23;\r\n        return this;\r\n    }\r\n    inverse() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const a30 = this.values[12];\r\n        const a31 = this.values[13];\r\n        const a32 = this.values[14];\r\n        const a33 = this.values[15];\r\n        const det00 = a00 * a11 - a01 * a10;\r\n        const det01 = a00 * a12 - a02 * a10;\r\n        const det02 = a00 * a13 - a03 * a10;\r\n        const det03 = a01 * a12 - a02 * a11;\r\n        const det04 = a01 * a13 - a03 * a11;\r\n        const det05 = a02 * a13 - a03 * a12;\r\n        const det06 = a20 * a31 - a21 * a30;\r\n        const det07 = a20 * a32 - a22 * a30;\r\n        const det08 = a20 * a33 - a23 * a30;\r\n        const det09 = a21 * a32 - a22 * a31;\r\n        const det10 = a21 * a33 - a23 * a31;\r\n        const det11 = a22 * a33 - a23 * a32;\r\n        let det = det00 * det11 - det01 * det10 + det02 * det09 + det03 * det08 - det04 * det07 + det05 * det06;\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        this.values[0] = (a11 * det11 - a12 * det10 + a13 * det09) * det;\r\n        this.values[1] = (-a01 * det11 + a02 * det10 - a03 * det09) * det;\r\n        this.values[2] = (a31 * det05 - a32 * det04 + a33 * det03) * det;\r\n        this.values[3] = (-a21 * det05 + a22 * det04 - a23 * det03) * det;\r\n        this.values[4] = (-a10 * det11 + a12 * det08 - a13 * det07) * det;\r\n        this.values[5] = (a00 * det11 - a02 * det08 + a03 * det07) * det;\r\n        this.values[6] = (-a30 * det05 + a32 * det02 - a33 * det01) * det;\r\n        this.values[7] = (a20 * det05 - a22 * det02 + a23 * det01) * det;\r\n        this.values[8] = (a10 * det10 - a11 * det08 + a13 * det06) * det;\r\n        this.values[9] = (-a00 * det10 + a01 * det08 - a03 * det06) * det;\r\n        this.values[10] = (a30 * det04 - a31 * det02 + a33 * det00) * det;\r\n        this.values[11] = (-a20 * det04 + a21 * det02 - a23 * det00) * det;\r\n        this.values[12] = (-a10 * det09 + a11 * det07 - a12 * det06) * det;\r\n        this.values[13] = (a00 * det09 - a01 * det07 + a02 * det06) * det;\r\n        this.values[14] = (-a30 * det03 + a31 * det01 - a32 * det00) * det;\r\n        this.values[15] = (a20 * det03 - a21 * det01 + a22 * det00) * det;\r\n        return this;\r\n    }\r\n    multiply(matrix) {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const a30 = this.values[12];\r\n        const a31 = this.values[13];\r\n        const a32 = this.values[14];\r\n        const a33 = this.values[15];\r\n        let b0 = matrix.at(0);\r\n        let b1 = matrix.at(1);\r\n        let b2 = matrix.at(2);\r\n        let b3 = matrix.at(3);\r\n        this.values[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = matrix.at(4);\r\n        b1 = matrix.at(5);\r\n        b2 = matrix.at(6);\r\n        b3 = matrix.at(7);\r\n        this.values[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = matrix.at(8);\r\n        b1 = matrix.at(9);\r\n        b2 = matrix.at(10);\r\n        b3 = matrix.at(11);\r\n        this.values[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        b0 = matrix.at(12);\r\n        b1 = matrix.at(13);\r\n        b2 = matrix.at(14);\r\n        b3 = matrix.at(15);\r\n        this.values[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this.values[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this.values[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this.values[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return this;\r\n    }\r\n    multiplyVec3(vector) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        return new vec3_1.default([\r\n            this.values[0] * x + this.values[4] * y + this.values[8] * z + this.values[12],\r\n            this.values[1] * x + this.values[5] * y + this.values[9] * z + this.values[13],\r\n            this.values[2] * x + this.values[6] * y + this.values[10] * z + this.values[14],\r\n        ]);\r\n    }\r\n    multiplyVec4(vector, dest) {\r\n        if (!dest) {\r\n            dest = new vec4_1.default();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const w = vector.w;\r\n        dest.x = this.values[0] * x + this.values[4] * y + this.values[8] * z + this.values[12] * w;\r\n        dest.y = this.values[1] * x + this.values[5] * y + this.values[9] * z + this.values[13] * w;\r\n        dest.z = this.values[2] * x + this.values[6] * y + this.values[10] * z + this.values[14] * w;\r\n        dest.w = this.values[3] * x + this.values[7] * y + this.values[11] * z + this.values[15] * w;\r\n        return dest;\r\n    }\r\n    toMat3() {\r\n        return new mat3_1.default([\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n            this.values[4],\r\n            this.values[5],\r\n            this.values[6],\r\n            this.values[8],\r\n            this.values[9],\r\n            this.values[10],\r\n        ]);\r\n    }\r\n    toInverseMat3() {\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const det01 = a22 * a11 - a12 * a21;\r\n        const det11 = -a22 * a10 + a12 * a20;\r\n        const det21 = a21 * a10 - a11 * a20;\r\n        let det = a00 * det01 + a01 * det11 + a02 * det21;\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n        return new mat3_1.default([\r\n            det01 * det,\r\n            (-a22 * a01 + a02 * a21) * det,\r\n            (a12 * a01 - a02 * a11) * det,\r\n            det11 * det,\r\n            (a22 * a00 - a02 * a20) * det,\r\n            (-a12 * a00 + a02 * a10) * det,\r\n            det21 * det,\r\n            (-a21 * a00 + a01 * a20) * det,\r\n            (a11 * a00 - a01 * a10) * det,\r\n        ]);\r\n    }\r\n    translate(vector) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        this.values[12] += this.values[0] * x + this.values[4] * y + this.values[8] * z;\r\n        this.values[13] += this.values[1] * x + this.values[5] * y + this.values[9] * z;\r\n        this.values[14] += this.values[2] * x + this.values[6] * y + this.values[10] * z;\r\n        this.values[15] += this.values[3] * x + this.values[7] * y + this.values[11] * z;\r\n        return this;\r\n    }\r\n    scale(vector) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        this.values[0] *= x;\r\n        this.values[1] *= x;\r\n        this.values[2] *= x;\r\n        this.values[3] *= x;\r\n        this.values[4] *= y;\r\n        this.values[5] *= y;\r\n        this.values[6] *= y;\r\n        this.values[7] *= y;\r\n        this.values[8] *= z;\r\n        this.values[9] *= z;\r\n        this.values[10] *= z;\r\n        this.values[11] *= z;\r\n        return this;\r\n    }\r\n    rotate(angle, axis) {\r\n        let x = axis.x;\r\n        let y = axis.y;\r\n        let z = axis.z;\r\n        let length = Math.sqrt(x * x + y * y + z * z);\r\n        if (!length) {\r\n            return null;\r\n        }\r\n        if (length !== 1) {\r\n            length = 1 / length;\r\n            x *= length;\r\n            y *= length;\r\n            z *= length;\r\n        }\r\n        const s = Math.sin(angle);\r\n        const c = Math.cos(angle);\r\n        const t = 1.0 - c;\r\n        const a00 = this.values[0];\r\n        const a01 = this.values[1];\r\n        const a02 = this.values[2];\r\n        const a03 = this.values[3];\r\n        const a10 = this.values[4];\r\n        const a11 = this.values[5];\r\n        const a12 = this.values[6];\r\n        const a13 = this.values[7];\r\n        const a20 = this.values[8];\r\n        const a21 = this.values[9];\r\n        const a22 = this.values[10];\r\n        const a23 = this.values[11];\r\n        const b00 = x * x * t + c;\r\n        const b01 = y * x * t + z * s;\r\n        const b02 = z * x * t - y * s;\r\n        const b10 = x * y * t - z * s;\r\n        const b11 = y * y * t + c;\r\n        const b12 = z * y * t + x * s;\r\n        const b20 = x * z * t + y * s;\r\n        const b21 = y * z * t - x * s;\r\n        const b22 = z * z * t + c;\r\n        this.values[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        this.values[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        this.values[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        this.values[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        this.values[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        this.values[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        this.values[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        this.values[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        this.values[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        this.values[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        this.values[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        this.values[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n        return this;\r\n    }\r\n    static frustum(left, right, bottom, top, near, far) {\r\n        const rl = right - left;\r\n        const tb = top - bottom;\r\n        const fn = far - near;\r\n        return new mat4([\r\n            (near * 2) / rl,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            (near * 2) / tb,\r\n            0,\r\n            0,\r\n            (right + left) / rl,\r\n            (top + bottom) / tb,\r\n            -(far + near) / fn,\r\n            -1,\r\n            0,\r\n            0,\r\n            -(far * near * 2) / fn,\r\n            0,\r\n        ]);\r\n    }\r\n    static perspective(fov, aspect, near, far) {\r\n        const top = near * Math.tan((fov * Math.PI) / 360.0);\r\n        const right = top * aspect;\r\n        return mat4.frustum(-right, right, -top, top, near, far);\r\n    }\r\n    static orthographic(left, right, bottom, top, near, far) {\r\n        const rl = right - left;\r\n        const tb = top - bottom;\r\n        const fn = far - near;\r\n        return new mat4([\r\n            2 / rl,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            2 / tb,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            -2 / fn,\r\n            0,\r\n            -(left + right) / rl,\r\n            -(top + bottom) / tb,\r\n            -(far + near) / fn,\r\n            1,\r\n        ]);\r\n    }\r\n    static lookAt(position, target, up = vec3_1.default.up) {\r\n        if (position.equals(target)) {\r\n            return this.identity;\r\n        }\r\n        const z = vec3_1.default.difference(position, target).normalize();\r\n        const x = vec3_1.default.cross(up, z).normalize();\r\n        const y = vec3_1.default.cross(z, x).normalize();\r\n        return new mat4([\r\n            x.x,\r\n            y.x,\r\n            z.x,\r\n            0,\r\n            x.y,\r\n            y.y,\r\n            z.y,\r\n            0,\r\n            x.z,\r\n            y.z,\r\n            z.z,\r\n            0,\r\n            -vec3_1.default.dot(x, position),\r\n            -vec3_1.default.dot(y, position),\r\n            -vec3_1.default.dot(z, position),\r\n            1,\r\n        ]);\r\n    }\r\n    static product(m1, m2, result) {\r\n        const a00 = m1.at(0);\r\n        const a01 = m1.at(1);\r\n        const a02 = m1.at(2);\r\n        const a03 = m1.at(3);\r\n        const a10 = m1.at(4);\r\n        const a11 = m1.at(5);\r\n        const a12 = m1.at(6);\r\n        const a13 = m1.at(7);\r\n        const a20 = m1.at(8);\r\n        const a21 = m1.at(9);\r\n        const a22 = m1.at(10);\r\n        const a23 = m1.at(11);\r\n        const a30 = m1.at(12);\r\n        const a31 = m1.at(13);\r\n        const a32 = m1.at(14);\r\n        const a33 = m1.at(15);\r\n        const b00 = m2.at(0);\r\n        const b01 = m2.at(1);\r\n        const b02 = m2.at(2);\r\n        const b03 = m2.at(3);\r\n        const b10 = m2.at(4);\r\n        const b11 = m2.at(5);\r\n        const b12 = m2.at(6);\r\n        const b13 = m2.at(7);\r\n        const b20 = m2.at(8);\r\n        const b21 = m2.at(9);\r\n        const b22 = m2.at(10);\r\n        const b23 = m2.at(11);\r\n        const b30 = m2.at(12);\r\n        const b31 = m2.at(13);\r\n        const b32 = m2.at(14);\r\n        const b33 = m2.at(15);\r\n        if (result) {\r\n            result.init([\r\n                b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n                b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n                b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n                b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n                b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n                b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n                b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n                b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n                b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n                b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n                b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n                b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n                b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n                b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n                b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n                b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n            ]);\r\n            return result;\r\n        }\r\n        else {\r\n            return new mat4([\r\n                b00 * a00 + b01 * a10 + b02 * a20 + b03 * a30,\r\n                b00 * a01 + b01 * a11 + b02 * a21 + b03 * a31,\r\n                b00 * a02 + b01 * a12 + b02 * a22 + b03 * a32,\r\n                b00 * a03 + b01 * a13 + b02 * a23 + b03 * a33,\r\n                b10 * a00 + b11 * a10 + b12 * a20 + b13 * a30,\r\n                b10 * a01 + b11 * a11 + b12 * a21 + b13 * a31,\r\n                b10 * a02 + b11 * a12 + b12 * a22 + b13 * a32,\r\n                b10 * a03 + b11 * a13 + b12 * a23 + b13 * a33,\r\n                b20 * a00 + b21 * a10 + b22 * a20 + b23 * a30,\r\n                b20 * a01 + b21 * a11 + b22 * a21 + b23 * a31,\r\n                b20 * a02 + b21 * a12 + b22 * a22 + b23 * a32,\r\n                b20 * a03 + b21 * a13 + b22 * a23 + b23 * a33,\r\n                b30 * a00 + b31 * a10 + b32 * a20 + b33 * a30,\r\n                b30 * a01 + b31 * a11 + b32 * a21 + b33 * a31,\r\n                b30 * a02 + b31 * a12 + b32 * a22 + b33 * a32,\r\n                b30 * a03 + b31 * a13 + b32 * a23 + b33 * a33,\r\n            ]);\r\n        }\r\n    }\r\n}\r\nexports[\"default\"] = mat4;\r\nmat4.identity = new mat4().setIdentity();\r\n\n\n//# sourceURL=webpack://earthquest/./src/math/mat4.ts?");

/***/ }),

/***/ "./src/math/quat.ts":
/*!**************************!*\
  !*** ./src/math/quat.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst mat3_1 = __importDefault(__webpack_require__(/*! ./mat3 */ \"./src/math/mat3.ts\"));\r\nconst mat4_1 = __importDefault(__webpack_require__(/*! ./mat4 */ \"./src/math/mat4.ts\"));\r\nconst vec3_1 = __importDefault(__webpack_require__(/*! ./vec3 */ \"./src/math/vec3.ts\"));\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\r\nclass quat {\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get z() {\r\n        return this.values[2];\r\n    }\r\n    get w() {\r\n        return this.values[3];\r\n    }\r\n    get xy() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n        ];\r\n    }\r\n    get xyz() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n        ];\r\n    }\r\n    get xyzw() {\r\n        return [\r\n            this.values[0],\r\n            this.values[1],\r\n            this.values[2],\r\n            this.values[3],\r\n        ];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set z(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set w(value) {\r\n        this.values[3] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set xyz(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    set xyzw(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n        this.values[3] = values[3];\r\n    }\r\n    constructor(values) {\r\n        this.values = new Float32Array(4);\r\n        if (values !== undefined) {\r\n            this.xyzw = values;\r\n        }\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        for (let i = 0; i < 4; i++) {\r\n            this.values[i] = 0;\r\n        }\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            dest.values[i] = this.values[i];\r\n        }\r\n        return dest;\r\n    }\r\n    roll() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return Math.atan2(2.0 * (x * y + w * z), w * w + x * x - y * y - z * z);\r\n    }\r\n    pitch() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return Math.atan2(2.0 * (y * z + w * x), w * w - x * x - y * y + z * z);\r\n    }\r\n    yaw() {\r\n        return Math.asin(2.0 * (this.x * this.z - this.w * this.y));\r\n    }\r\n    equals(vector, threshold = constants_1.epsilon) {\r\n        for (let i = 0; i < 4; i++) {\r\n            if (Math.abs(this.values[i] - vector.at(i)) > threshold) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    setIdentity() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 1;\r\n        return this;\r\n    }\r\n    calculateW() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        this.w = -(Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z)));\r\n        return this;\r\n    }\r\n    inverse() {\r\n        const dot = quat.dot(this, this);\r\n        if (!dot) {\r\n            this.xyzw = [0, 0, 0, 0];\r\n            return this;\r\n        }\r\n        const invDot = dot ? 1.0 / dot : 0;\r\n        this.x *= -invDot;\r\n        this.y *= -invDot;\r\n        this.z *= -invDot;\r\n        this.w *= invDot;\r\n        return this;\r\n    }\r\n    conjugate() {\r\n        this.values[0] *= -1;\r\n        this.values[1] *= -1;\r\n        this.values[2] *= -1;\r\n        return this;\r\n    }\r\n    length() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return Math.sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        let length = Math.sqrt(x * x + y * y + z * z + w * w);\r\n        if (!length) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            dest.z = 0;\r\n            dest.w = 0;\r\n            return dest;\r\n        }\r\n        length = 1 / length;\r\n        dest.x = x * length;\r\n        dest.y = y * length;\r\n        dest.z = z * length;\r\n        dest.w = w * length;\r\n        return dest;\r\n    }\r\n    add(other) {\r\n        for (let i = 0; i < 4; i++) {\r\n            this.values[i] += other.at(i);\r\n        }\r\n        return this;\r\n    }\r\n    multiply(other) {\r\n        const q1x = this.values[0];\r\n        const q1y = this.values[1];\r\n        const q1z = this.values[2];\r\n        const q1w = this.values[3];\r\n        const q2x = other.x;\r\n        const q2y = other.y;\r\n        const q2z = other.z;\r\n        const q2w = other.w;\r\n        this.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;\r\n        this.y = q1y * q2w + q1w * q2y + q1z * q2x - q1x * q2z;\r\n        this.z = q1z * q2w + q1w * q2z + q1x * q2y - q1y * q2x;\r\n        this.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\r\n        return this;\r\n    }\r\n    multiplyVec3(vector, dest) {\r\n        if (!dest) {\r\n            dest = new vec3_1.default();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const qx = this.x;\r\n        const qy = this.y;\r\n        const qz = this.z;\r\n        const qw = this.w;\r\n        const ix = qw * x + qy * z - qz * y;\r\n        const iy = qw * y + qz * x - qx * z;\r\n        const iz = qw * z + qx * y - qy * x;\r\n        const iw = -qx * x - qy * y - qz * z;\r\n        dest.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        dest.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        dest.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n        return dest;\r\n    }\r\n    toMat3(dest) {\r\n        if (!dest) {\r\n            dest = new mat3_1.default();\r\n        }\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n        dest.init([\r\n            1 - (yy + zz),\r\n            xy + wz,\r\n            xz - wy,\r\n            xy - wz,\r\n            1 - (xx + zz),\r\n            yz + wx,\r\n            xz + wy,\r\n            yz - wx,\r\n            1 - (xx + yy),\r\n        ]);\r\n        return dest;\r\n    }\r\n    toMat4(dest) {\r\n        if (!dest) {\r\n            dest = new mat4_1.default();\r\n        }\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        const x2 = x + x;\r\n        const y2 = y + y;\r\n        const z2 = z + z;\r\n        const xx = x * x2;\r\n        const xy = x * y2;\r\n        const xz = x * z2;\r\n        const yy = y * y2;\r\n        const yz = y * z2;\r\n        const zz = z * z2;\r\n        const wx = w * x2;\r\n        const wy = w * y2;\r\n        const wz = w * z2;\r\n        dest.init([\r\n            1 - (yy + zz),\r\n            xy + wz,\r\n            xz - wy,\r\n            0,\r\n            xy - wz,\r\n            1 - (xx + zz),\r\n            yz + wx,\r\n            0,\r\n            xz + wy,\r\n            yz - wx,\r\n            1 - (xx + yy),\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n        ]);\r\n        return dest;\r\n    }\r\n    static dot(q1, q2) {\r\n        return q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\r\n    }\r\n    static sum(q1, q2, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        dest.x = q1.x + q2.x;\r\n        dest.y = q1.y + q2.y;\r\n        dest.z = q1.z + q2.z;\r\n        dest.w = q1.w + q2.w;\r\n        return dest;\r\n    }\r\n    static product(q1, q2, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        const q1x = q1.x;\r\n        const q1y = q1.y;\r\n        const q1z = q1.z;\r\n        const q1w = q1.w;\r\n        const q2x = q2.x;\r\n        const q2y = q2.y;\r\n        const q2z = q2.z;\r\n        const q2w = q2.w;\r\n        dest.x = q1x * q2w + q1w * q2x + q1y * q2z - q1z * q2y;\r\n        dest.y = q1y * q2w + q1w * q2y + q1z * q2x - q1x * q2z;\r\n        dest.z = q1z * q2w + q1w * q2z + q1x * q2y - q1y * q2x;\r\n        dest.w = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\r\n        return dest;\r\n    }\r\n    static cross(q1, q2, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        const q1x = q1.x;\r\n        const q1y = q1.y;\r\n        const q1z = q1.z;\r\n        const q1w = q1.w;\r\n        const q2x = q2.x;\r\n        const q2y = q2.y;\r\n        const q2z = q2.z;\r\n        const q2w = q2.w;\r\n        dest.x = q1w * q2z + q1z * q2w + q1x * q2y - q1y * q2x;\r\n        dest.y = q1w * q2w - q1x * q2x - q1y * q2y - q1z * q2z;\r\n        dest.z = q1w * q2x + q1x * q2w + q1y * q2z - q1z * q2y;\r\n        dest.w = q1w * q2y + q1y * q2w + q1z * q2x - q1x * q2z;\r\n        return dest;\r\n    }\r\n    static shortMix(q1, q2, time, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        if (time <= 0.0) {\r\n            dest.xyzw = q1.xyzw;\r\n            return dest;\r\n        }\r\n        else if (time >= 1.0) {\r\n            dest.xyzw = q2.xyzw;\r\n            return dest;\r\n        }\r\n        let cos = quat.dot(q1, q2);\r\n        const q2a = q2.copy();\r\n        if (cos < 0.0) {\r\n            q2a.inverse();\r\n            cos = -cos;\r\n        }\r\n        let k0;\r\n        let k1;\r\n        if (cos > 0.9999) {\r\n            k0 = 1 - time;\r\n            k1 = 0 + time;\r\n        }\r\n        else {\r\n            const sin = Math.sqrt(1 - cos * cos);\r\n            const angle = Math.atan2(sin, cos);\r\n            const oneOverSin = 1 / sin;\r\n            k0 = Math.sin((1 - time) * angle) * oneOverSin;\r\n            k1 = Math.sin((0 + time) * angle) * oneOverSin;\r\n        }\r\n        dest.x = k0 * q1.x + k1 * q2a.x;\r\n        dest.y = k0 * q1.y + k1 * q2a.y;\r\n        dest.z = k0 * q1.z + k1 * q2a.z;\r\n        dest.w = k0 * q1.w + k1 * q2a.w;\r\n        return dest;\r\n    }\r\n    static mix(q1, q2, time, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        const cosHalfTheta = q1.x * q2.x + q1.y * q2.y + q1.z * q2.z + q1.w * q2.w;\r\n        if (Math.abs(cosHalfTheta) >= 1.0) {\r\n            dest.xyzw = q1.xyzw;\r\n            return dest;\r\n        }\r\n        const halfTheta = Math.acos(cosHalfTheta);\r\n        const sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\r\n        if (Math.abs(sinHalfTheta) < 0.001) {\r\n            dest.x = q1.x * 0.5 + q2.x * 0.5;\r\n            dest.y = q1.y * 0.5 + q2.y * 0.5;\r\n            dest.z = q1.z * 0.5 + q2.z * 0.5;\r\n            dest.w = q1.w * 0.5 + q2.w * 0.5;\r\n            return dest;\r\n        }\r\n        const ratioA = Math.sin((1 - time) * halfTheta) / sinHalfTheta;\r\n        const ratioB = Math.sin(time * halfTheta) / sinHalfTheta;\r\n        dest.x = q1.x * ratioA + q2.x * ratioB;\r\n        dest.y = q1.y * ratioA + q2.y * ratioB;\r\n        dest.z = q1.z * ratioA + q2.z * ratioB;\r\n        dest.w = q1.w * ratioA + q2.w * ratioB;\r\n        return dest;\r\n    }\r\n    static fromAxisAngle(axis, angle, dest) {\r\n        if (!dest) {\r\n            dest = new quat();\r\n        }\r\n        angle *= 0.5;\r\n        const sin = Math.sin(angle);\r\n        dest.x = axis.x * sin;\r\n        dest.y = axis.y * sin;\r\n        dest.z = axis.z * sin;\r\n        dest.w = Math.cos(angle);\r\n        return dest;\r\n    }\r\n}\r\nexports[\"default\"] = quat;\r\nquat.identity = new quat().setIdentity();\r\n\n\n//# sourceURL=webpack://earthquest/./src/math/quat.ts?");

/***/ }),

/***/ "./src/math/vec2.ts":
/*!**************************!*\
  !*** ./src/math/vec2.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst vec3_1 = __importDefault(__webpack_require__(/*! ./vec3 */ \"./src/math/vec3.ts\"));\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\r\nclass vec2 {\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get xy() {\r\n        return [this.values[0], this.values[1]];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    constructor(values, y) {\r\n        this.values = new Float32Array(2);\r\n        if (values !== undefined) {\r\n            if (typeof values === 'number') {\r\n                this.values[0] = values;\r\n            }\r\n            else if (Array.isArray(values)) {\r\n                this.xy = values;\r\n            }\r\n            if (y !== undefined) {\r\n                this.values[1] = y;\r\n            }\r\n        }\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = this.x;\r\n        dest.y = this.y;\r\n        return dest;\r\n    }\r\n    negate(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x = -this.x;\r\n        dest.y = -this.y;\r\n        return dest;\r\n    }\r\n    equals(vector, threshold = constants_1.epsilon) {\r\n        if (Math.abs(this.x - vector.x) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.y - vector.y) > threshold) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    length() {\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        return x * x + y * y;\r\n    }\r\n    add(vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        return this;\r\n    }\r\n    subtract(vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        return this;\r\n    }\r\n    multiply(vector) {\r\n        this.x *= vector.x;\r\n        this.y *= vector.y;\r\n        return this;\r\n    }\r\n    divide(vector) {\r\n        this.x /= vector.x;\r\n        this.y /= vector.y;\r\n        return this;\r\n    }\r\n    scale(value, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x *= value;\r\n        dest.y *= value;\r\n        return dest;\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        let length = this.length();\r\n        if (length === 1) {\r\n            return this;\r\n        }\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            return dest;\r\n        }\r\n        length = 1.0 / length;\r\n        dest.x *= length;\r\n        dest.y *= length;\r\n        return dest;\r\n    }\r\n    multiplyMat2(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec2(this, dest);\r\n    }\r\n    multiplyMat3(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec2(this, dest);\r\n    }\r\n    static cross(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3_1.default();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        const z = x * y2 - y * x2;\r\n        dest.x = 0;\r\n        dest.y = 0;\r\n        dest.z = z;\r\n        return dest;\r\n    }\r\n    static dot(vector, vector2) {\r\n        return vector.x * vector2.x + vector.y * vector2.y;\r\n    }\r\n    static distance(vector, vector2) {\r\n        return Math.sqrt(this.squaredDistance(vector, vector2));\r\n    }\r\n    static squaredDistance(vector, vector2) {\r\n        const x = vector2.x - vector.x;\r\n        const y = vector2.y - vector.y;\r\n        return x * x + y * y;\r\n    }\r\n    static direction(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        const x = vector.x - vector2.x;\r\n        const y = vector.y - vector2.y;\r\n        let length = Math.sqrt(x * x + y * y);\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            return dest;\r\n        }\r\n        length = 1 / length;\r\n        dest.x = x * length;\r\n        dest.y = y * length;\r\n        return dest;\r\n    }\r\n    static mix(vector, vector2, time, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        dest.x = x + time * (x2 - x);\r\n        dest.y = y + time * (y2 - y);\r\n        return dest;\r\n    }\r\n    static sum(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x + vector2.x;\r\n        dest.y = vector.y + vector2.y;\r\n        return dest;\r\n    }\r\n    static difference(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x - vector2.x;\r\n        dest.y = vector.y - vector2.y;\r\n        return dest;\r\n    }\r\n    static product(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x * vector2.x;\r\n        dest.y = vector.y * vector2.y;\r\n        return dest;\r\n    }\r\n    static quotient(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec2();\r\n        }\r\n        dest.x = vector.x / vector2.x;\r\n        dest.y = vector.y / vector2.y;\r\n        return dest;\r\n    }\r\n    toString() {\r\n        return this.x.toFixed(5) + ', ' + this.y.toFixed(5);\r\n    }\r\n}\r\nexports[\"default\"] = vec2;\r\nvec2.zero = new vec2([0, 0]);\r\nvec2.one = new vec2([1, 1]);\r\n\n\n//# sourceURL=webpack://earthquest/./src/math/vec2.ts?");

/***/ }),

/***/ "./src/math/vec3.ts":
/*!**************************!*\
  !*** ./src/math/vec3.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst quat_1 = __importDefault(__webpack_require__(/*! ./quat */ \"./src/math/quat.ts\"));\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\r\nclass vec3 {\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get z() {\r\n        return this.values[2];\r\n    }\r\n    get xy() {\r\n        return [this.values[0], this.values[1]];\r\n    }\r\n    get xyz() {\r\n        return [this.values[0], this.values[1], this.values[2]];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set z(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set xyz(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    constructor(values, y, z) {\r\n        this.values = new Float32Array(3);\r\n        if (values !== undefined) {\r\n            if (typeof values === 'number') {\r\n                this.values[0] = values;\r\n            }\r\n            else if (Array.isArray(values)) {\r\n                this.xyz = values;\r\n            }\r\n            if (y !== undefined) {\r\n                this.values[1] = y;\r\n            }\r\n            if (y !== undefined) {\r\n                this.values[2] = z;\r\n            }\r\n        }\r\n        else {\r\n            this.xyz = [0, 0, 0];\r\n        }\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = this.x;\r\n        dest.y = this.y;\r\n        dest.z = this.z;\r\n        return dest;\r\n    }\r\n    negate(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x = -this.x;\r\n        dest.y = -this.y;\r\n        dest.z = -this.z;\r\n        return dest;\r\n    }\r\n    equals(vector, threshold = constants_1.epsilon) {\r\n        if (Math.abs(this.x - vector.x) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.y - vector.y) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.z - vector.z) > threshold) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    length() {\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n    add(vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        this.z += vector.z;\r\n        return this;\r\n    }\r\n    subtract(vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        this.z -= vector.z;\r\n        return this;\r\n    }\r\n    multiply(vector) {\r\n        this.x *= vector.x;\r\n        this.y *= vector.y;\r\n        this.z *= vector.z;\r\n        return this;\r\n    }\r\n    divide(vector) {\r\n        this.x /= vector.x;\r\n        this.y /= vector.y;\r\n        this.z /= vector.z;\r\n        return this;\r\n    }\r\n    scale(value, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x *= value;\r\n        dest.y *= value;\r\n        dest.z *= value;\r\n        return dest;\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        let length = this.length();\r\n        if (length === 1) {\r\n            return this;\r\n        }\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            dest.z = 0;\r\n            return dest;\r\n        }\r\n        length = 1.0 / length;\r\n        dest.x *= length;\r\n        dest.y *= length;\r\n        dest.z *= length;\r\n        return dest;\r\n    }\r\n    multiplyByMat3(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec3(this, dest);\r\n    }\r\n    multiplyByQuat(quaternion, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return quaternion.multiplyVec3(this, dest);\r\n    }\r\n    toQuat(dest) {\r\n        if (!dest) {\r\n            dest = new quat_1.default();\r\n        }\r\n        const c = new vec3();\r\n        const s = new vec3();\r\n        c.x = Math.cos(this.x * 0.5);\r\n        s.x = Math.sin(this.x * 0.5);\r\n        c.y = Math.cos(this.y * 0.5);\r\n        s.y = Math.sin(this.y * 0.5);\r\n        c.z = Math.cos(this.z * 0.5);\r\n        s.z = Math.sin(this.z * 0.5);\r\n        dest.x = s.x * c.y * c.z - c.x * s.y * s.z;\r\n        dest.y = c.x * s.y * c.z + s.x * c.y * s.z;\r\n        dest.z = c.x * c.y * s.z - s.x * s.y * c.z;\r\n        dest.w = c.x * c.y * c.z + s.x * s.y * s.z;\r\n        return dest;\r\n    }\r\n    static cross(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        const z2 = vector2.z;\r\n        dest.x = y * z2 - z * y2;\r\n        dest.y = z * x2 - x * z2;\r\n        dest.z = x * y2 - y * x2;\r\n        return dest;\r\n    }\r\n    static dot(vector, vector2) {\r\n        const x = vector.x;\r\n        const y = vector.y;\r\n        const z = vector.z;\r\n        const x2 = vector2.x;\r\n        const y2 = vector2.y;\r\n        const z2 = vector2.z;\r\n        return x * x2 + y * y2 + z * z2;\r\n    }\r\n    static distance(vector, vector2) {\r\n        const x = vector2.x - vector.x;\r\n        const y = vector2.y - vector.y;\r\n        const z = vector2.z - vector.z;\r\n        return Math.sqrt(this.squaredDistance(vector, vector2));\r\n    }\r\n    static squaredDistance(vector, vector2) {\r\n        const x = vector2.x - vector.x;\r\n        const y = vector2.y - vector.y;\r\n        const z = vector2.z - vector.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n    static direction(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        const x = vector.x - vector2.x;\r\n        const y = vector.y - vector2.y;\r\n        const z = vector.z - vector2.z;\r\n        let length = Math.sqrt(x * x + y * y + z * z);\r\n        if (length === 0) {\r\n            dest.x = 0;\r\n            dest.y = 0;\r\n            dest.z = 0;\r\n            return dest;\r\n        }\r\n        length = 1 / length;\r\n        dest.x = x * length;\r\n        dest.y = y * length;\r\n        dest.z = z * length;\r\n        return dest;\r\n    }\r\n    static mix(vector, vector2, time, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x + time * (vector2.x - vector.x);\r\n        dest.y = vector.y + time * (vector2.y - vector.y);\r\n        dest.z = vector.z + time * (vector2.z - vector.z);\r\n        return dest;\r\n    }\r\n    static sum(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x + vector2.x;\r\n        dest.y = vector.y + vector2.y;\r\n        dest.z = vector.z + vector2.z;\r\n        return dest;\r\n    }\r\n    static difference(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x - vector2.x;\r\n        dest.y = vector.y - vector2.y;\r\n        dest.z = vector.z - vector2.z;\r\n        return dest;\r\n    }\r\n    static product(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x * vector2.x;\r\n        dest.y = vector.y * vector2.y;\r\n        dest.z = vector.z * vector2.z;\r\n        return dest;\r\n    }\r\n    static quotient(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec3();\r\n        }\r\n        dest.x = vector.x / vector2.x;\r\n        dest.y = vector.y / vector2.y;\r\n        dest.z = vector.z / vector2.z;\r\n        return dest;\r\n    }\r\n    toString() {\r\n        return this.x.toFixed(5) + ', ' + this.y.toFixed(5) + ', ' + this.z.toFixed(5);\r\n    }\r\n}\r\nexports[\"default\"] = vec3;\r\nvec3.zero = new vec3([0, 0, 0]);\r\nvec3.one = new vec3([1, 1, 1]);\r\nvec3.up = new vec3([0, 1, 0]);\r\nvec3.right = new vec3([1, 0, 0]);\r\nvec3.forward = new vec3([0, 0, 1]);\r\n\n\n//# sourceURL=webpack://earthquest/./src/math/vec3.ts?");

/***/ }),

/***/ "./src/math/vec4.ts":
/*!**************************!*\
  !*** ./src/math/vec4.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./src/math/constants.ts\");\r\nclass vec4 {\r\n    get x() {\r\n        return this.values[0];\r\n    }\r\n    get y() {\r\n        return this.values[1];\r\n    }\r\n    get z() {\r\n        return this.values[2];\r\n    }\r\n    get w() {\r\n        return this.values[3];\r\n    }\r\n    get xy() {\r\n        return [this.values[0], this.values[1]];\r\n    }\r\n    get xyz() {\r\n        return [this.values[0], this.values[1], this.values[2]];\r\n    }\r\n    get xyzw() {\r\n        return [this.values[0], this.values[1], this.values[2], this.values[3]];\r\n    }\r\n    set x(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set y(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set z(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set w(value) {\r\n        this.values[3] = value;\r\n    }\r\n    set xy(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set xyz(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    set xyzw(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n        this.values[3] = values[3];\r\n    }\r\n    get r() {\r\n        return this.values[0];\r\n    }\r\n    get g() {\r\n        return this.values[1];\r\n    }\r\n    get b() {\r\n        return this.values[2];\r\n    }\r\n    get a() {\r\n        return this.values[3];\r\n    }\r\n    get rg() {\r\n        return [this.values[0], this.values[1]];\r\n    }\r\n    get rgb() {\r\n        return [this.values[0], this.values[1], this.values[2]];\r\n    }\r\n    get rgba() {\r\n        return [this.values[0], this.values[1], this.values[2], this.values[3]];\r\n    }\r\n    set r(value) {\r\n        this.values[0] = value;\r\n    }\r\n    set g(value) {\r\n        this.values[1] = value;\r\n    }\r\n    set b(value) {\r\n        this.values[2] = value;\r\n    }\r\n    set a(value) {\r\n        this.values[3] = value;\r\n    }\r\n    set rg(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n    }\r\n    set rgb(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n    }\r\n    set rgba(values) {\r\n        this.values[0] = values[0];\r\n        this.values[1] = values[1];\r\n        this.values[2] = values[2];\r\n        this.values[3] = values[3];\r\n    }\r\n    constructor(values) {\r\n        this.values = new Float32Array(4);\r\n        if (values !== undefined) {\r\n            this.xyzw = values;\r\n        }\r\n    }\r\n    at(index) {\r\n        return this.values[index];\r\n    }\r\n    reset() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 0;\r\n    }\r\n    copy(dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = this.x;\r\n        dest.y = this.y;\r\n        dest.z = this.z;\r\n        dest.w = this.w;\r\n        return dest;\r\n    }\r\n    negate(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x = -this.x;\r\n        dest.y = -this.y;\r\n        dest.z = -this.z;\r\n        dest.w = -this.w;\r\n        return dest;\r\n    }\r\n    equals(vector, threshold = constants_1.epsilon) {\r\n        if (Math.abs(this.x - vector.x) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.y - vector.y) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.z - vector.z) > threshold) {\r\n            return false;\r\n        }\r\n        if (Math.abs(this.w - vector.w) > threshold) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    length() {\r\n        return Math.sqrt(this.squaredLength());\r\n    }\r\n    squaredLength() {\r\n        const x = this.x;\r\n        const y = this.y;\r\n        const z = this.z;\r\n        const w = this.w;\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n    add(vector) {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n        this.z += vector.z;\r\n        this.w += vector.w;\r\n        return this;\r\n    }\r\n    subtract(vector) {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n        this.z -= vector.z;\r\n        this.w -= vector.w;\r\n        return this;\r\n    }\r\n    multiply(vector) {\r\n        this.x *= vector.x;\r\n        this.y *= vector.y;\r\n        this.z *= vector.z;\r\n        this.w *= vector.w;\r\n        return this;\r\n    }\r\n    divide(vector) {\r\n        this.x /= vector.x;\r\n        this.y /= vector.y;\r\n        this.z /= vector.z;\r\n        this.w /= vector.w;\r\n        return this;\r\n    }\r\n    scale(value, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        dest.x *= value;\r\n        dest.y *= value;\r\n        dest.z *= value;\r\n        dest.w *= value;\r\n        return dest;\r\n    }\r\n    normalize(dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        let length = this.length();\r\n        if (length === 1) {\r\n            return this;\r\n        }\r\n        if (length === 0) {\r\n            dest.x *= 0;\r\n            dest.y *= 0;\r\n            dest.z *= 0;\r\n            dest.w *= 0;\r\n            return dest;\r\n        }\r\n        length = 1.0 / length;\r\n        dest.x *= length;\r\n        dest.y *= length;\r\n        dest.z *= length;\r\n        dest.w *= length;\r\n        return dest;\r\n    }\r\n    multiplyMat4(matrix, dest) {\r\n        if (!dest) {\r\n            dest = this;\r\n        }\r\n        return matrix.multiplyVec4(this, dest);\r\n    }\r\n    static mix(vector, vector2, time, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x + time * (vector2.x - vector.x);\r\n        dest.y = vector.y + time * (vector2.y - vector.y);\r\n        dest.z = vector.z + time * (vector2.z - vector.z);\r\n        dest.w = vector.w + time * (vector2.w - vector.w);\r\n        return dest;\r\n    }\r\n    static sum(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x + vector2.x;\r\n        dest.y = vector.y + vector2.y;\r\n        dest.z = vector.z + vector2.z;\r\n        dest.w = vector.w + vector2.w;\r\n        return dest;\r\n    }\r\n    static difference(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x - vector2.x;\r\n        dest.y = vector.y - vector2.y;\r\n        dest.z = vector.z - vector2.z;\r\n        dest.w = vector.w - vector2.w;\r\n        return dest;\r\n    }\r\n    static product(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x * vector2.x;\r\n        dest.y = vector.y * vector2.y;\r\n        dest.z = vector.z * vector2.z;\r\n        dest.w = vector.w * vector2.w;\r\n        return dest;\r\n    }\r\n    static quotient(vector, vector2, dest) {\r\n        if (!dest) {\r\n            dest = new vec4();\r\n        }\r\n        dest.x = vector.x / vector2.x;\r\n        dest.y = vector.y / vector2.y;\r\n        dest.z = vector.z / vector2.z;\r\n        dest.w = vector.w / vector2.w;\r\n        return dest;\r\n    }\r\n    toString() {\r\n        return (this.x.toFixed(5) +\r\n            ', ' +\r\n            this.y.toFixed(5) +\r\n            ', ' +\r\n            this.z.toFixed(5) +\r\n            ', ' +\r\n            this.a.toFixed(5));\r\n    }\r\n}\r\nexports[\"default\"] = vec4;\r\nvec4.zero = new vec4([0, 0, 0, 1]);\r\nvec4.one = new vec4([1, 1, 1, 1]);\r\n\n\n//# sourceURL=webpack://earthquest/./src/math/vec4.ts?");

/***/ }),

/***/ "./src/menus/DialogBuilder.ts":
/*!************************************!*\
  !*** ./src/menus/DialogBuilder.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DialogBuilder = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../math/vec2 */ \"./src/math/vec2.ts\"));\r\n/**\r\n * This class is used to build the visual dialog box\r\n */\r\nclass DialogBuilder extends Component_1.Component {\r\n    constructor(eng) {\r\n        super(eng);\r\n        this.continueIconX = 350;\r\n        this.continueIconY = 75;\r\n        this.tileWidth = 64;\r\n        this.tileHeight = 64;\r\n        this.iconScale = 1;\r\n        this.minWidth = 20;\r\n        this.minHeight = 20;\r\n    }\r\n    /**\r\n     * Set the sprite controller\r\n     * @param spriteController\r\n     */\r\n    initialize(spriteController) {\r\n        this._spriteController = spriteController;\r\n    }\r\n    /**\r\n     * Hides all the dialog box\r\n     * @param dialogId\r\n     */\r\n    hideDialog(dialogId) {\r\n        this._spriteController.removeSprite(dialogId + 'menu.left.top');\r\n        this._spriteController.removeSprite(dialogId + 'menu.right.top');\r\n        this._spriteController.removeSprite(dialogId + 'menu.right.bottom');\r\n        this._spriteController.removeSprite(dialogId + 'menu.left.bottom');\r\n        this._spriteController.removeSprite(dialogId + 'menu.center.top');\r\n        this._spriteController.removeSprite(dialogId + 'menu.center.bottom');\r\n        this._spriteController.removeSprite(dialogId + 'menu.left.middle');\r\n        this._spriteController.removeSprite(dialogId + 'menu.right.middle');\r\n        this._spriteController.removeSprite(dialogId + 'menu.center.middle');\r\n    }\r\n    /**\r\n     * Creates and positions a dialog box\r\n     * @param dialogId\r\n     * @param spriteController\r\n     * @param p\r\n     */\r\n    buildDialog(dialogId, p) {\r\n        // inner y is like the bottom corner of the text filed.\r\n        // p.yPos is pixels from the top of the screen\r\n        const innerTopLeft = new vec2_1.default(p.x + this.tileWidth * this.iconScale, p.y + this.tileWidth * this.iconScale);\r\n        const innerTopRight = new vec2_1.default(p.x + (p.width - this.tileWidth * this.iconScale), p.y + this.tileHeight * this.iconScale);\r\n        const innerBottomRight = new vec2_1.default(p.x + (p.width - this.tileWidth * this.iconScale), p.height + p.y - this.tileHeight * this.iconScale);\r\n        const innerBottomLeft = new vec2_1.default(p.x + this.tileWidth * this.iconScale, p.height + p.y - this.tileHeight * this.iconScale);\r\n        const bottomRight = new vec2_1.default(p.x + (p.width - this.tileWidth * this.iconScale), p.height + p.y);\r\n        const bottomLeft = new vec2_1.default(p.x + this.tileWidth * this.iconScale, p.height + p.y);\r\n        // top left corner\r\n        this._spriteController.activeSprite(dialogId + 'menu.left.top');\r\n        this._spriteController.scale(this.iconScale);\r\n        this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n        this._spriteController.viewScale(1.0);\r\n        this._spriteController.setSpritePosition(p.x, this.eng.height - innerTopLeft.y, p.depth);\r\n        this._spriteController.setSprite('menu.left.top');\r\n        // top right corner\r\n        this._spriteController.activeSprite(dialogId + 'menu.right.top');\r\n        this._spriteController.scale(this.iconScale);\r\n        this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n        this._spriteController.viewScale(1.0);\r\n        this._spriteController.setSpritePosition(innerTopRight.x, this.eng.height - innerTopRight.y, p.depth);\r\n        this._spriteController.setSprite('menu.right.top');\r\n        // bottom right corner\r\n        this._spriteController.activeSprite(dialogId + 'menu.right.bottom');\r\n        this._spriteController.scale(this.iconScale);\r\n        this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n        this._spriteController.viewScale(1.0);\r\n        this._spriteController.setSpritePosition(innerTopRight.x, this.eng.height - bottomRight.y, p.depth);\r\n        this._spriteController.setSprite('menu.right.bottom');\r\n        // bottom left corner\r\n        this._spriteController.activeSprite(dialogId + 'menu.left.bottom');\r\n        this._spriteController.scale(this.iconScale);\r\n        this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n        this._spriteController.viewScale(1.0);\r\n        this._spriteController.setSpritePosition(p.x, this.eng.height - bottomLeft.y, p.depth);\r\n        this._spriteController.setSprite('menu.left.bottom');\r\n        // position the edges\r\n        const topEdgeScale = (innerTopRight.x - innerTopLeft.x) / this.tileWidth;\r\n        const rightEdgeScale = (innerBottomRight.y - innerTopRight.y) / this.tileHeight;\r\n        // top edge\r\n        this._spriteController.activeSprite(dialogId + 'menu.center.top');\r\n        this._spriteController.scale({ x: topEdgeScale, y: this.iconScale });\r\n        this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n        this._spriteController.viewScale(1.0);\r\n        this._spriteController.setSpritePosition(innerTopLeft.x, this.eng.height - innerTopRight.y, p.depth);\r\n        this._spriteController.setSprite('menu.center.top');\r\n        // bottom edge\r\n        this._spriteController.activeSprite(dialogId + 'menu.center.bottom');\r\n        this._spriteController.scale({ x: topEdgeScale, y: this.iconScale });\r\n        this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n        this._spriteController.viewScale(1.0);\r\n        this._spriteController.setSpritePosition(innerTopLeft.x, this.eng.height - bottomRight.y, p.depth);\r\n        this._spriteController.setSprite('menu.center.bottom');\r\n        // left edge\r\n        this._spriteController.activeSprite(dialogId + 'menu.left.middle');\r\n        this._spriteController.scale({ x: this.iconScale, y: rightEdgeScale });\r\n        this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n        this._spriteController.viewScale(1.0);\r\n        this._spriteController.setSpritePosition(p.x, this.eng.height - innerBottomRight.y, p.depth);\r\n        this._spriteController.setSprite('menu.left.middle');\r\n        // right edge\r\n        this._spriteController.activeSprite(dialogId + 'menu.right.middle');\r\n        this._spriteController.scale({ x: this.iconScale, y: rightEdgeScale });\r\n        this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n        this._spriteController.viewScale(1.0);\r\n        this._spriteController.setSpritePosition(innerTopRight.x, this.eng.height - innerBottomRight.y, p.depth);\r\n        this._spriteController.setSprite('menu.right.middle');\r\n        // center\r\n        this._spriteController.activeSprite(dialogId + 'menu.center.middle');\r\n        this._spriteController.scale({ x: topEdgeScale, y: rightEdgeScale });\r\n        this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n        this._spriteController.viewScale(1.0);\r\n        this._spriteController.setSpritePosition(innerTopLeft.x, this.eng.height - innerBottomRight.y, p.depth);\r\n        this._spriteController.setSprite('menu.center.middle');\r\n    }\r\n}\r\nexports.DialogBuilder = DialogBuilder;\r\n\n\n//# sourceURL=webpack://earthquest/./src/menus/DialogBuilder.ts?");

/***/ }),

/***/ "./src/menus/DialogComponent.ts":
/*!**************************************!*\
  !*** ./src/menus/DialogComponent.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DialogComponent = void 0;\r\nconst Curve_1 = __webpack_require__(/*! ../math/Curve */ \"./src/math/Curve.ts\");\r\nconst PanelComponent_1 = __webpack_require__(/*! ./PanelComponent */ \"./src/menus/PanelComponent.ts\");\r\nconst UserAction_1 = __webpack_require__(/*! ../core/UserAction */ \"./src/core/UserAction.ts\");\r\nconst DialogCursor_1 = __webpack_require__(/*! ./DialogCursor */ \"./src/menus/DialogCursor.ts\");\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../math/vec2 */ \"./src/math/vec2.ts\"));\r\nconst vec4_1 = __importDefault(__webpack_require__(/*! ../math/vec4 */ \"./src/math/vec4.ts\"));\r\n/**\r\n * A dialog component that can be sized and display text in the game.\r\n * There is also an onHide event to handle user input\r\n */\r\nclass DialogComponent extends PanelComponent_1.PanelComponent {\r\n    get selectedOption() {\r\n        return this._selectedOption;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n    constructor(eng, dialogBuild) {\r\n        super(eng, 'dialog1', dialogBuild);\r\n        this._expandAnimation = new Curve_1.Curve();\r\n        this._expandAnimation.curve(Curve_1.CurveType.linear);\r\n        this._expandAnimation.points([\r\n            { t: 0, p: 0 },\r\n            { t: 250, p: 1 },\r\n            { t: 500, p: 2 },\r\n        ]);\r\n        this._cursor = new DialogCursor_1.DialogCursor(eng);\r\n    }\r\n    /**\r\n     * Options are use to allow the user to select something from the dialog box\r\n     * @param options\r\n     */\r\n    setOptions(options) {\r\n        this._options = options;\r\n    }\r\n    /**\r\n     * Handle user interaction with the dialog\r\n     * @param state\r\n     * @returns\r\n     */\r\n    handleUserAction(state) {\r\n        const active = this.visible;\r\n        if (active && (state.action & UserAction_1.UserAction.ActionPressed) > 0) {\r\n            let canHide = true;\r\n            if (this.onClosing) {\r\n                canHide = this.onClosing(this);\r\n            }\r\n            this._cursor.select();\r\n            if (canHide) {\r\n                this.hide();\r\n                if (this.onClosed) {\r\n                    this.onClosed(this);\r\n                }\r\n            }\r\n        }\r\n        if (this._options?.length > 0) {\r\n            // select next option\r\n            if ((state.action & UserAction_1.UserAction.DownPressed) > 0) {\r\n                if (this._cursor.index < this._cursor.indexCount - 1) {\r\n                    this._cursor.index++;\r\n                }\r\n                else {\r\n                    this._cursor.index = 0;\r\n                }\r\n                this._cursor.select();\r\n            }\r\n            // select previous option\r\n            if ((state.action & UserAction_1.UserAction.UpPressed) > 0) {\r\n                if (this._cursor.index > 0) {\r\n                    this._cursor.index--;\r\n                }\r\n                else {\r\n                    this._cursor.index = this._cursor.indexCount - 1;\r\n                }\r\n                this._cursor.select();\r\n            }\r\n        }\r\n        return active;\r\n    }\r\n    show() {\r\n        super.show();\r\n        if (this._options?.length > 0) {\r\n            this._cursor.show(0);\r\n        }\r\n    }\r\n    hide() {\r\n        super.hide();\r\n        this.eng.textManager.hideText(this.id);\r\n        this._dialogBuild.hideDialog(this.id);\r\n        this._cursor.hide();\r\n        for (let i = 0; i < this._options?.length; i++) {\r\n            this.eng.textManager.hideText(this.id + '_' + this._options[i]);\r\n        }\r\n    }\r\n    redraw() {\r\n        super.redraw();\r\n        if (this.visible) {\r\n            // add the cursor and the positions it can be placed at\r\n            if (this._options?.length > 0) {\r\n                const { width, height } = this.eng.textManager.getTextSize(this._text);\r\n                const optionIndent = 60;\r\n                const optionsHeightPadding = 20;\r\n                let yOffset = height + optionsHeightPadding;\r\n                let optionXPosition = optionIndent + this._pos.x + this._textOffset.x;\r\n                const optionPositions = [];\r\n                // add the text for all the options\r\n                for (let i = 0; i < this._options.length; i++) {\r\n                    const option = this._options[i];\r\n                    const x = optionXPosition;\r\n                    const y = yOffset + this._textOffset.y + this._pos.y;\r\n                    const textPos = new vec2_1.default(x, y);\r\n                    this.eng.textManager.setTextBlock({\r\n                        id: this.id + '_' + option,\r\n                        text: option,\r\n                        position: textPos,\r\n                        color: new vec4_1.default([0.9, 0.9, 1.0, 1.0]),\r\n                        depth: this._depth - 0.01,\r\n                        scale: 1.0,\r\n                    });\r\n                    optionPositions.push(new vec2_1.default(x - optionIndent, y + this.eng.textManager.lineHeight * 0.5));\r\n                    yOffset += this.eng.textManager.lineHeight;\r\n                }\r\n                // update the cursor with the latest options\r\n                this._cursor.initialize(this.id + '.cursor', this._spriteController, optionPositions, (index) => {\r\n                    this._selectedIndex = index;\r\n                    this._selectedOption = this._options[this._selectedIndex];\r\n                }, this._depth - 0.01 // set the depth just in front of this dialog box\r\n                );\r\n                // select will set the _selectedOption to to the activeIndex\r\n                this._cursor.select();\r\n            }\r\n        }\r\n        else {\r\n            this._cursor.hide();\r\n            for (let i = 0; i < this._options?.length; i++) {\r\n                this.eng.textManager.hideText(this.id + '_' + this._options[i]);\r\n            }\r\n        }\r\n    }\r\n    update(dt) {\r\n        super.update(dt);\r\n        this._expandAnimation.update(dt);\r\n        this._cursor.update(dt);\r\n    }\r\n}\r\nexports.DialogComponent = DialogComponent;\r\n\n\n//# sourceURL=webpack://earthquest/./src/menus/DialogComponent.ts?");

/***/ }),

/***/ "./src/menus/DialogCursor.ts":
/*!***********************************!*\
  !*** ./src/menus/DialogCursor.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DialogCursor = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nconst Curve_1 = __webpack_require__(/*! ../math/Curve */ \"./src/math/Curve.ts\");\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../math/vec2 */ \"./src/math/vec2.ts\"));\r\n/**\r\n * A cursor used for player selection in menus and dialogs\r\n */\r\nclass DialogCursor extends Component_1.Component {\r\n    get index() {\r\n        return this._activeIndex;\r\n    }\r\n    get position() {\r\n        return this._activePosition;\r\n    }\r\n    set index(value) {\r\n        this._activeIndex = value;\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Number of positions this cursor can have\r\n     */\r\n    get indexCount() {\r\n        return this._positions.length;\r\n    }\r\n    constructor(eng) {\r\n        super(eng);\r\n        this._positions = [];\r\n        this._activeIndex = -1;\r\n        this._activePosition = new vec2_1.default(0, 0);\r\n        this._cursorCurve = new Curve_1.Curve();\r\n        this._cursorCurve.points([\r\n            {\r\n                p: 0,\r\n                t: 0,\r\n            },\r\n            {\r\n                p: 10,\r\n                t: 500,\r\n            },\r\n            {\r\n                p: 0,\r\n                t: 1000,\r\n            },\r\n        ]);\r\n        this._cursorCurve.curve(Curve_1.CurveType.linear);\r\n        this._cursorCurve.repeat(-1);\r\n        this._dirty = true;\r\n        this._visible = false;\r\n    }\r\n    initialize(id, spriteController, positions, onSelect, depth = -0.6) {\r\n        this._spriteController = spriteController;\r\n        this._positions = positions;\r\n        this._cursorId = id;\r\n        this._depth = depth;\r\n        this._onSelect = onSelect;\r\n    }\r\n    /**\r\n     * Selects the active index\r\n     */\r\n    select() {\r\n        // let the user handle the select change\r\n        if (this._onSelect) {\r\n            this._onSelect(this._activeIndex, this);\r\n        }\r\n    }\r\n    show(index) {\r\n        if (index != undefined) {\r\n            this._activeIndex = index;\r\n        }\r\n        this._visible = true;\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Cause the cursor to stop moving as the player selected something\r\n     */\r\n    lock() {\r\n        this._cursorCurve.pause(0);\r\n    }\r\n    /**\r\n     * Hide the cursor\r\n     */\r\n    hide() {\r\n        this._visible = false;\r\n        this._dirty = true;\r\n        if (this._spriteController) {\r\n            this._spriteController.removeSprite(this._cursorId);\r\n        }\r\n        this._onSelect = undefined;\r\n    }\r\n    redraw() {\r\n        if (!this._spriteController) {\r\n            return;\r\n        }\r\n        if (this._visible) {\r\n            const position = this._positions[this._activeIndex];\r\n            if (position) {\r\n                this._activePosition = position;\r\n                this._spriteController.activeSprite(this._cursorId);\r\n                this._spriteController.scale(0.9);\r\n                this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n                this._spriteController.viewScale(1.0);\r\n                this._spriteController.setSprite(\"cursor\");\r\n                this._spriteController.setSpritePosition(position.x, this.eng.height - position.y, this._depth);\r\n                this._cursorCurve.start(true, undefined, (val) => {\r\n                    this._spriteController.activeSprite(this._cursorId);\r\n                    this._spriteController.setSpritePosition(position.x + val, this.eng.height - position.y, this._depth);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this._spriteController.removeSprite(this._cursorId);\r\n        }\r\n    }\r\n    /**\r\n     * Updates the animation\r\n     * @param dt\r\n     */\r\n    update(dt) {\r\n        this._cursorCurve.update(dt);\r\n        if (this._dirty) {\r\n            this.redraw();\r\n            this._dirty = false;\r\n        }\r\n    }\r\n}\r\nexports.DialogCursor = DialogCursor;\r\n\n\n//# sourceURL=webpack://earthquest/./src/menus/DialogCursor.ts?");

/***/ }),

/***/ "./src/menus/GameMenuBuilder.ts":
/*!**************************************!*\
  !*** ./src/menus/GameMenuBuilder.ts ***!
  \**************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GameMenuBuilder = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nconst Curve_1 = __webpack_require__(/*! ../math/Curve */ \"./src/math/Curve.ts\");\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../math/vec2 */ \"./src/math/vec2.ts\"));\r\nclass GameMenuBuilder extends Component_1.Component {\r\n    constructor(eng) {\r\n        super(eng);\r\n        this._cursorCurve = new Curve_1.Curve();\r\n        this._cursorCurve.points([\r\n            {\r\n                p: 0,\r\n                t: 0,\r\n            },\r\n            {\r\n                p: 10,\r\n                t: 500,\r\n            },\r\n        ]);\r\n    }\r\n    /**\r\n     * Set the sprite controller\r\n     * @param spriteController\r\n     */\r\n    initialize(spriteController) {\r\n        this._spriteController = spriteController;\r\n    }\r\n    show() {\r\n        this._spriteController.activeSprite('gameMenu');\r\n        this._spriteController.scale(1);\r\n        this._spriteController.viewOffset(new vec2_1.default(0, 0));\r\n        this._spriteController.viewScale(1.0);\r\n        this._spriteController.setSprite('gameMenu');\r\n        this._spriteController.setSpritePosition(0, 0, -0.2);\r\n    }\r\n    hide() {\r\n        this._spriteController.removeSprite('gameMenu');\r\n        this._spriteController.commitToBuffer();\r\n    }\r\n}\r\nexports.GameMenuBuilder = GameMenuBuilder;\r\n\n\n//# sourceURL=webpack://earthquest/./src/menus/GameMenuBuilder.ts?");

/***/ }),

/***/ "./src/menus/GameMenuComponent.ts":
/*!****************************************!*\
  !*** ./src/menus/GameMenuComponent.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GameMenuComponent = void 0;\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../math/vec2 */ \"./src/math/vec2.ts\"));\r\nconst vec4_1 = __importDefault(__webpack_require__(/*! ../math/vec4 */ \"./src/math/vec4.ts\"));\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nconst UserAction_1 = __webpack_require__(/*! ../core/UserAction */ \"./src/core/UserAction.ts\");\r\nconst DialogCursor_1 = __webpack_require__(/*! ./DialogCursor */ \"./src/menus/DialogCursor.ts\");\r\n/**\r\n * The game menu. The player can equip, use items and see stats\r\n */\r\nclass GameMenuComponent extends Component_1.Component {\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n    constructor(eng, id, _dialogBuild) {\r\n        super(eng);\r\n        this._dialogBuild = _dialogBuild;\r\n        this._id = id;\r\n        this._visible = false;\r\n        this._pos = new vec2_1.default();\r\n        this._size = new vec2_1.default(300, 200);\r\n        this._textOffset = new vec2_1.default(50, 60);\r\n        this._dirty = false;\r\n        this._cursor = new DialogCursor_1.DialogCursor(eng);\r\n    }\r\n    initialize(spriteController) {\r\n        this._spriteController = spriteController;\r\n        this._dialogBuild.initialize(this._spriteController);\r\n        // menu options positions\r\n        const items = new vec2_1.default(30, 540);\r\n        const status = new vec2_1.default(30, 480);\r\n        const equip = new vec2_1.default(30, 430);\r\n        const map = new vec2_1.default(30, 370);\r\n        const save = new vec2_1.default(30, 320);\r\n        this._cursor.initialize('cursor.1', this._spriteController, [items, status, equip, map, save], (index) => {\r\n            switch (index) {\r\n                case 0:\r\n                    break;\r\n                case 1:\r\n                    break;\r\n                case 2:\r\n                    break;\r\n                case 3:\r\n                    break;\r\n                case 4:\r\n                    this.save();\r\n                    console.debug('saved!');\r\n                    break;\r\n            }\r\n            console.debug('selecting index ' + index);\r\n        });\r\n    }\r\n    save() {\r\n        this.eng.gameManager.save();\r\n    }\r\n    setPosition(x, y) {\r\n        this._pos.x = x;\r\n        this._pos.y = y;\r\n        this._dirty = true;\r\n    }\r\n    show() {\r\n        this._visible = true;\r\n        this._dirty = true;\r\n        this._cursor.show(0);\r\n    }\r\n    getFormattedTime() {\r\n        const t = this.eng.gameManager.data.player.timePlayed;\r\n        let time = t.h.toString().padStart(2, '0');\r\n        time += ':' + t.m.toString().padStart(2, '0');\r\n        time += ':' + t.s.toString().padStart(2, '0');\r\n        return time;\r\n    }\r\n    hide() {\r\n        this._visible = false;\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Handle user interaction with the dialog\r\n     * @param state\r\n     * @returns\r\n     */\r\n    handleUserAction(state) {\r\n        const active = this.visible;\r\n        if (active) {\r\n            if ((state.action & UserAction_1.UserAction.MenuPressed) > 0) {\r\n                let canHide = true;\r\n                // if there is an onHide event fire that\r\n                if (this.onHide) {\r\n                    canHide = this.onHide(this);\r\n                }\r\n                if (canHide) {\r\n                    this.hide();\r\n                }\r\n            }\r\n            // select next option\r\n            if ((state.action & UserAction_1.UserAction.DownPressed) > 0) {\r\n                if (this._cursor.index < this._cursor.indexCount - 1) {\r\n                    this._cursor.index++;\r\n                }\r\n                else {\r\n                    this._cursor.index = 0;\r\n                }\r\n            }\r\n            // select previous option\r\n            if ((state.action & UserAction_1.UserAction.UpPressed) > 0) {\r\n                if (this._cursor.index > 0) {\r\n                    this._cursor.index--;\r\n                }\r\n                else {\r\n                    this._cursor.index = this._cursor.indexCount - 1;\r\n                }\r\n            }\r\n            // accept the option\r\n            if ((state.action & UserAction_1.UserAction.ActionPressed) > 0) {\r\n                this._cursor.select();\r\n            }\r\n        }\r\n        return active;\r\n    }\r\n    redraw() {\r\n        if (this.visible) {\r\n            this._dialogBuild.show();\r\n            this._spriteController.commitToBuffer();\r\n            const gold = this.eng.gameManager.data.player.gold.toString();\r\n            this.eng.textManager.setTextBlock({\r\n                id: 'menu.gold',\r\n                text: gold.padStart(7, '0'),\r\n                position: new vec2_1.default([90, 370]),\r\n                color: new vec4_1.default([0.0, 0.0, 0.0, 1.0]),\r\n                depth: -1,\r\n                scale: 1.0,\r\n            });\r\n        }\r\n        else {\r\n            this._dialogBuild.hide();\r\n            this._cursor.hide();\r\n            this.eng.textManager.hideText('menu.gold');\r\n            this.eng.textManager.hideText('menu.time');\r\n        }\r\n    }\r\n    update(dt) {\r\n        if (this._dirty) {\r\n            this.redraw();\r\n            this._dirty = false;\r\n        }\r\n        // show the time updates\r\n        if (this.visible) {\r\n            if (this._formattedTime != this.getFormattedTime()) {\r\n                this._formattedTime = this.getFormattedTime();\r\n                this.eng.textManager.setTextBlock({\r\n                    id: 'menu.time',\r\n                    text: this._formattedTime,\r\n                    position: new vec2_1.default([90, 430]),\r\n                    color: new vec4_1.default([0.0, 0.0, 0.0, 1.0]),\r\n                    depth: -1,\r\n                    scale: 1.0,\r\n                });\r\n            }\r\n        }\r\n        this._cursor.update(dt);\r\n    }\r\n}\r\nexports.GameMenuComponent = GameMenuComponent;\r\n\n\n//# sourceURL=webpack://earthquest/./src/menus/GameMenuComponent.ts?");

/***/ }),

/***/ "./src/menus/PanelComponent.ts":
/*!*************************************!*\
  !*** ./src/menus/PanelComponent.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.PanelComponent = void 0;\r\nconst vec2_1 = __importDefault(__webpack_require__(/*! ../math/vec2 */ \"./src/math/vec2.ts\"));\r\nconst vec4_1 = __importDefault(__webpack_require__(/*! ../math/vec4 */ \"./src/math/vec4.ts\"));\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nclass PanelComponent extends Component_1.Component {\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get visible() {\r\n        return this._visible;\r\n    }\r\n    constructor(eng, id, _dialogBuild) {\r\n        super(eng);\r\n        this._dialogBuild = _dialogBuild;\r\n        this._id = id;\r\n        this._visible = false;\r\n        this._pos = new vec2_1.default();\r\n        this._size = new vec2_1.default(300, 200);\r\n        this._textOffset = new vec2_1.default(50, 60);\r\n        this._dirty = false;\r\n        this._depth = -0.5;\r\n    }\r\n    initialize(spriteController) {\r\n        this._spriteController = spriteController;\r\n        this._dialogBuild.initialize(this._spriteController);\r\n    }\r\n    setPosition(x, y) {\r\n        this._pos.x = x;\r\n        this._pos.y = y;\r\n        this._dirty = true;\r\n    }\r\n    /**\r\n     * Range 1 to -1 in screen space\r\n     * @param depth\r\n     */\r\n    setDepth(depth) {\r\n        this._depth = depth;\r\n    }\r\n    /**\r\n     * Sets the text for this panel\r\n     * @param text\r\n     */\r\n    setText(text) {\r\n        this._text = text;\r\n        this._dirty = true;\r\n    }\r\n    setSize(width, height) {\r\n        this._size.x = width;\r\n        this._size.y = height;\r\n        this._dirty = true;\r\n    }\r\n    show() {\r\n        this._visible = true;\r\n        this._dirty = true;\r\n    }\r\n    hide() {\r\n        this._visible = false;\r\n        this._dirty = true;\r\n    }\r\n    redraw() {\r\n        if (this.visible) {\r\n            const p = {\r\n                x: this._pos.x,\r\n                y: this._pos.y,\r\n                width: this._size.x,\r\n                height: this._size.y,\r\n                depth: this._depth,\r\n            };\r\n            this._dialogBuild.buildDialog(this.id, p);\r\n            const textPos = new vec2_1.default(this._pos.x + this._textOffset.x, p.y + this._textOffset.y);\r\n            this.eng.textManager.setTextBlock({\r\n                id: this.id,\r\n                text: this._text,\r\n                position: textPos,\r\n                color: new vec4_1.default([0.9, 0.9, 1.0, 1.0]),\r\n                depth: this._depth - 0.01,\r\n                scale: 1.0,\r\n            });\r\n        }\r\n        else {\r\n            this.eng.textManager.hideText(this.id);\r\n            this._dialogBuild.hideDialog(this.id);\r\n        }\r\n    }\r\n    update(dt) {\r\n        if (this._dirty) {\r\n            this.redraw();\r\n            this._dirty = false;\r\n        }\r\n    }\r\n}\r\nexports.PanelComponent = PanelComponent;\r\n\n\n//# sourceURL=webpack://earthquest/./src/menus/PanelComponent.ts?");

/***/ }),

/***/ "./src/shaders/SpritePerspectiveShader.ts":
/*!************************************************!*\
  !*** ./src/shaders/SpritePerspectiveShader.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SpritePerspectiveShader = void 0;\r\nconst ShaderController_1 = __webpack_require__(/*! ../graphics/ShaderController */ \"./src/graphics/ShaderController.ts\");\r\n//\r\n// Vertex Shader program\r\n//\r\nconst vsSource = `\nattribute vec3 aPos;\nattribute vec2 aTex;\nuniform mat4 uProj;\nvarying mediump vec2 vTex;\nvarying mediump vec3 depth;\n\nvoid main() {\n    vTex = aTex;\n    vec4 pos = uProj * vec4(aPos.xyz, 1.0);\n    gl_Position =  pos;\n    depth = vec3((pos.z + 1.0) *.5);\n}\n`;\r\n//\r\n// Fragment shader program\r\n//\r\nconst fsSource = `\nvarying mediump vec2 vTex;\nvarying mediump  vec3 depth;\nuniform sampler2D uSampler;\n\nvoid main() {\n  mediump vec4 color = texture2D(uSampler, vTex);\n    if(color.a < .001) {\n      discard;\n    } \n\n    // uncomment to show depth\n    //gl_FragColor = vec4(depth.xyz, 1.0);\n    gl_FragColor = color;\n  \n}\n`;\r\n/**\r\n * Shader for sprites\r\n */\r\nclass SpritePerspectiveShader {\r\n    constructor(gl, shaderId) {\r\n        this.gl = gl;\r\n        this._shader = new ShaderController_1.ShaderController(this.gl, shaderId);\r\n        this._shader.initShaderProgram(vsSource, fsSource);\r\n        // set the info\r\n        this._aPos = this._shader.getAttribute('aPos');\r\n        this._aTex = this._shader.getAttribute('aTex');\r\n        this._uSampler = this._shader.getUniform('uSampler');\r\n        this._uProj = this._shader.getUniform('uProj');\r\n    }\r\n    setProj(proj) {\r\n        this._shader.setMat4(this._uProj, proj);\r\n    }\r\n    setSpriteSheet(texture) {\r\n        this._texture = texture;\r\n    }\r\n    enable() {\r\n        this._shader.enable();\r\n        if (!this._texture) {\r\n            console.warn('texture is null. Call setSpriteSheet()');\r\n        }\r\n        else {\r\n            // Bind the texture to texture unit 0\r\n            this._texture.enable(this._uSampler);\r\n        }\r\n    }\r\n}\r\nexports.SpritePerspectiveShader = SpritePerspectiveShader;\r\n\n\n//# sourceURL=webpack://earthquest/./src/shaders/SpritePerspectiveShader.ts?");

/***/ }),

/***/ "./src/systems/AssetManager.ts":
/*!*************************************!*\
  !*** ./src/systems/AssetManager.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.AssetManager = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nconst font_png_1 = __importDefault(__webpack_require__(/*! ../assets/font.png */ \"./src/assets/font.png\"));\r\nconst font_json_1 = __importDefault(__webpack_require__(/*! ../assets/font.json */ \"./src/assets/font.json\"));\r\nconst menu_png_1 = __importDefault(__webpack_require__(/*! ../assets/menu.png */ \"./src/assets/menu.png\"));\r\nconst menu_json_1 = __importDefault(__webpack_require__(/*! ../assets/menu.json */ \"./src/assets/menu.json\"));\r\nconst Texture_1 = __webpack_require__(/*! ../graphics/Texture */ \"./src/graphics/Texture.ts\");\r\n/**\r\n * Manages texture assets\r\n */\r\nclass AssetManager extends Component_1.Component {\r\n    get font() {\r\n        return { texture: this._font, data: font_json_1.default };\r\n    }\r\n    get menu() {\r\n        return { texture: this._menu, data: menu_json_1.default };\r\n    }\r\n    constructor(eng) {\r\n        super(eng);\r\n    }\r\n    async initialize() {\r\n        this._font = new Texture_1.Texture(this.gl);\r\n        await this._font.loadImage(font_png_1.default);\r\n        this._menu = new Texture_1.Texture(this.gl);\r\n        await this._menu.loadImage(menu_png_1.default);\r\n    }\r\n}\r\nexports.AssetManager = AssetManager;\r\n\n\n//# sourceURL=webpack://earthquest/./src/systems/AssetManager.ts?");

/***/ }),

/***/ "./src/systems/DialogManager.ts":
/*!**************************************!*\
  !*** ./src/systems/DialogManager.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.DialogManager = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nconst SpriteBatchController_1 = __webpack_require__(/*! ../graphics/SpriteBatchController */ \"./src/graphics/SpriteBatchController.ts\");\r\nconst DialogComponent_1 = __webpack_require__(/*! ../menus/DialogComponent */ \"./src/menus/DialogComponent.ts\");\r\nconst GameMenuComponent_1 = __webpack_require__(/*! ../menus/GameMenuComponent */ \"./src/menus/GameMenuComponent.ts\");\r\nconst DialogBuilder_1 = __webpack_require__(/*! ../menus/DialogBuilder */ \"./src/menus/DialogBuilder.ts\");\r\nconst GameMenuBuilder_1 = __webpack_require__(/*! ../menus/GameMenuBuilder */ \"./src/menus/GameMenuBuilder.ts\");\r\n/**\r\n * Manages dialog boxes\r\n */\r\nclass DialogManager extends Component_1.Component {\r\n    /**\r\n     * Get the game menu\r\n     */\r\n    get gameMenu() {\r\n        return this._gameMenu;\r\n    }\r\n    /**\r\n     * Get the dialog menu\r\n     */\r\n    get dialog() {\r\n        return this._dialog;\r\n    }\r\n    constructor(eng) {\r\n        super(eng);\r\n        this._dialogBuild = new DialogBuilder_1.DialogBuilder(eng);\r\n        this._gameMenuBuilder = new GameMenuBuilder_1.GameMenuBuilder(eng);\r\n        this._spriteController = new SpriteBatchController_1.SpritBatchController(eng);\r\n        this._dialog = new DialogComponent_1.DialogComponent(this.eng, this._dialogBuild);\r\n        this._gameMenu = new GameMenuComponent_1.GameMenuComponent(this.eng, 'gameMenu', this._gameMenuBuilder);\r\n    }\r\n    async initialize() {\r\n        const texture = this.eng.assetManager.menu.texture;\r\n        const data = this.eng.assetManager.menu.data;\r\n        this._spriteController.initialize(texture, data);\r\n        this._dialog.initialize(this._spriteController);\r\n        this._gameMenu.initialize(this._spriteController);\r\n        this._spriteController.commitToBuffer();\r\n    }\r\n    /**\r\n     * Handles user actions for the menu\r\n     * @param action\r\n     * @returns\r\n     */\r\n    handleUserAction(state) {\r\n        return this._dialog.handleUserAction(state) || this._gameMenu.handleUserAction(state);\r\n    }\r\n    /**\r\n     * Shows a dialog box\r\n     * @param text\r\n     * @param loc\r\n     */\r\n    showDialog(text, loc, onClosed, options, onClosing, depth = -0.5) {\r\n        this._dialog.setOptions(options);\r\n        this._dialog.setPosition(loc.x, loc.y);\r\n        this._dialog.setSize(loc.width, loc.height);\r\n        this._dialog.setText(text);\r\n        this._dialog.onClosed = onClosed;\r\n        this._dialog.onClosing = onClosing;\r\n        this._dialog.setDepth(depth);\r\n        this._dialog.show();\r\n    }\r\n    showGameMenu(onHide) {\r\n        this._gameMenu.onHide = onHide;\r\n        this._gameMenu.show();\r\n    }\r\n    /**\r\n     * Updates the dialog box\r\n     * @param dt\r\n     */\r\n    update(dt) {\r\n        this._dialog.update(dt);\r\n        this._gameMenu.update(dt);\r\n        this._spriteController.update(dt);\r\n    }\r\n}\r\nexports.DialogManager = DialogManager;\r\n\n\n//# sourceURL=webpack://earthquest/./src/systems/DialogManager.ts?");

/***/ }),

/***/ "./src/systems/GameManager.ts":
/*!************************************!*\
  !*** ./src/systems/GameManager.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.GameManager = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nconst GameData_1 = __webpack_require__(/*! ../data/GameData */ \"./src/data/GameData.ts\");\r\n/** Key for local storage */\r\nconst localStorageKey = 'EarthQuest';\r\n/**\r\n * This is the main class that manages game state\r\n */\r\nclass GameManager extends Component_1.Component {\r\n    constructor(eng) {\r\n        super(eng);\r\n        this._timeCounter = 0;\r\n    }\r\n    /**\r\n     * Load game data from local storage\r\n     */\r\n    initialize() {\r\n        if (localStorage.getItem(localStorageKey)) {\r\n            this.data = JSON.parse(localStorage[localStorageKey]);\r\n        }\r\n        else {\r\n            this.data = new GameData_1.GameData();\r\n        }\r\n    }\r\n    /**\r\n     * Save game data in local storage\r\n     */\r\n    save() {\r\n        localStorage[localStorageKey] = JSON.stringify(this.data);\r\n    }\r\n    /**\r\n     * Update the game time\r\n     * @param dt\r\n     */\r\n    update(dt) {\r\n        const t = this.data.player.timePlayed;\r\n        this._timeCounter += dt;\r\n        if (this._timeCounter > 1000) {\r\n            t.s++;\r\n            this._timeCounter = this._timeCounter % 1000;\r\n            if (t.s >= 60) {\r\n                t.s -= 60;\r\n                t.m++;\r\n            }\r\n            if (t.m >= 60) {\r\n                t.m -= 60;\r\n                t.h++;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.GameManager = GameManager;\r\n\n\n//# sourceURL=webpack://earthquest/./src/systems/GameManager.ts?");

/***/ }),

/***/ "./src/systems/SoundManager.ts":
/*!*************************************!*\
  !*** ./src/systems/SoundManager.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.SoundManager = void 0;\r\n/**\r\n * Manages background sounds and sounds effects\r\n */\r\nclass SoundManager {\r\n    constructor() { }\r\n    playMusic(music) {\r\n        console.warn(\"sound manager not implemented.\");\r\n    }\r\n    UserReady() {\r\n        if (!this.userInteraction) {\r\n            //this.audio.play();\r\n            //this.audio.loop = true;\r\n            this.userInteraction = true;\r\n        }\r\n    }\r\n}\r\nexports.SoundManager = SoundManager;\r\n\n\n//# sourceURL=webpack://earthquest/./src/systems/SoundManager.ts?");

/***/ }),

/***/ "./src/systems/TextManager.ts":
/*!************************************!*\
  !*** ./src/systems/TextManager.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.TextManager = void 0;\r\nconst TextController_1 = __webpack_require__(/*! ../graphics/TextController */ \"./src/graphics/TextController.ts\");\r\nconst ShaderController_1 = __webpack_require__(/*! ../graphics/ShaderController */ \"./src/graphics/ShaderController.ts\");\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\n/**\r\n * Vertex shader for Font\r\n */\r\nconst FontVS = `\n    attribute vec3 aPos;\n    attribute vec2 aTex;\n\n    varying mediump vec2 vTex;\n                                                \n    void main() {\n        vTex = aTex;\n        gl_Position = vec4(aPos.xyz, 1.0);\n    }                          \n`;\r\n/**\r\n * Fragment shader for Font\r\n */\r\nconst FontFS = ` \n      varying mediump vec2 vTex;\n\n      uniform sampler2D uFont;\n      uniform mediump vec4 uColor;\n                            \n      void main() {\n        mediump vec4 color = texture2D(uFont, vTex) * uColor;\n        if(color.w > 0.2) { \n          gl_FragColor = texture2D(uFont, vTex) * uColor;\n        } else {\n          discard;\n        }\n      }\n`;\r\n/**\r\n * Font manager keeps track of all FontController objects\r\n */\r\nclass TextManager extends Component_1.Component {\r\n    get lineHeight() {\r\n        return this.maxHeightOfCharacters;\r\n    }\r\n    constructor(eng) {\r\n        super(eng);\r\n        this.texts = new Map();\r\n        this.shader = new ShaderController_1.ShaderController(this.gl, 'fontShader');\r\n        /** Shader info for this shader */\r\n        this.shaderInfo = {\r\n            attr: { aPos: 0, aTex: 0 },\r\n            uniform: { uFont: 0, uColor: 0 },\r\n        };\r\n    }\r\n    /**\r\n     * Initialize the font manage. Only one font can be used per manager\r\n     * The font data is a json structure.\r\n     * @param {} fontImage\r\n     * @param {FontData} fontData\r\n     */\r\n    async initialize() {\r\n        this.fontData = this.eng.assetManager.font.data;\r\n        this.fontTexture = this.eng.assetManager.font.texture;\r\n        this.shader.initShaderProgram(FontVS, FontFS);\r\n        this.shaderInfo.attr.aPos = this.shader.getAttribute('aPos');\r\n        this.shaderInfo.attr.aTex = this.shader.getAttribute('aTex');\r\n        this.shaderInfo.uniform.uFont = this.shader.getUniform('uFont');\r\n        this.shaderInfo.uniform.uColor = this.shader.getUniform('uColor');\r\n        // find the tallest character. This will be used when calculating new lines\r\n        this.maxHeightOfCharacters = 0;\r\n        this.fontData.forEach((value) => {\r\n            if (value.sizeY > this.maxHeightOfCharacters) {\r\n                this.maxHeightOfCharacters = value.sizeY;\r\n            }\r\n        });\r\n        // reset the text controllers\r\n        this.texts.clear();\r\n    }\r\n    /**\r\n     * Get text size of a given string\r\n     * @param text\r\n     * @returns\r\n     */\r\n    getTextSize(text) {\r\n        if (!text || this.maxHeightOfCharacters == 0) {\r\n            return { width: 0, height: 0 };\r\n        }\r\n        let width = 0;\r\n        let offsetX = 0;\r\n        let height = this.maxHeightOfCharacters;\r\n        for (let i = 0; i < text.length; i++) {\r\n            let ch = text[i];\r\n            if (ch == '\\n') {\r\n                offsetX = 0;\r\n                height += this.maxHeightOfCharacters;\r\n            }\r\n            else if (ch < ' ' || ch > '~') {\r\n                ch = '?';\r\n            }\r\n            const font = this.fontData.find((value) => value.ch == ch);\r\n            if (!font) {\r\n                console.warn(\"Don't have data for ch: \" + ch);\r\n                continue;\r\n            }\r\n            offsetX += font.advance;\r\n        }\r\n        return { width: offsetX, height };\r\n    }\r\n    /**\r\n     * Updates all the TextureController\r\n     * @param {number} dt Delta time in ms\r\n     */\r\n    update(dt) {\r\n        // enable the shader\r\n        this.shader.enable();\r\n        // Bind the texture to texture unit 0\r\n        this.fontTexture.enable(this.shaderInfo.uniform.uFont);\r\n        this.texts.forEach((text) => {\r\n            this.shader.setVec4(this.shaderInfo.uniform.uColor, text.color);\r\n            this.shaderInfo.uniform.uColor;\r\n            text.update(dt);\r\n        });\r\n    }\r\n    /**\r\n     * Hide a text\r\n     * @param id\r\n     */\r\n    hideText(id) {\r\n        this.texts.delete(id);\r\n    }\r\n    setTextBlock(textModel) {\r\n        let controller = this.texts.get(textModel.id);\r\n        // create one if needed\r\n        if (!controller) {\r\n            controller = new TextController_1.TextController(this.eng, this.fontData);\r\n            this.texts.set(textModel.id, controller);\r\n        }\r\n        controller.initialize(textModel, this.maxHeightOfCharacters);\r\n    }\r\n    /**\r\n     * clean up everything\r\n     */\r\n    dispose() { }\r\n}\r\nexports.TextManager = TextManager;\r\n\n\n//# sourceURL=webpack://earthquest/./src/systems/TextManager.ts?");

/***/ }),

/***/ "./src/systems/ViewManager.ts":
/*!************************************!*\
  !*** ./src/systems/ViewManager.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.ViewManager = void 0;\r\nconst Component_1 = __webpack_require__(/*! ../core/Component */ \"./src/core/Component.ts\");\r\nconst MathConst = __importStar(__webpack_require__(/*! ../math/constants */ \"./src/math/constants.ts\"));\r\nconst mat4_1 = __importDefault(__webpack_require__(/*! ../math/mat4 */ \"./src/math/mat4.ts\"));\r\n/**\r\n * The View manager is used to move the project.\r\n */\r\nclass ViewManager extends Component_1.Component {\r\n    get screenX() {\r\n        return this._screenX;\r\n    }\r\n    get screenY() {\r\n        return this._screenY;\r\n    }\r\n    /**\r\n     * Scale the width and height of the project\r\n     */\r\n    set scale(value) {\r\n        this._scale = value < this._minScale ? this._minScale : value;\r\n        this.updateProjection();\r\n    }\r\n    get scale() {\r\n        return this._scale;\r\n    }\r\n    get left() {\r\n        return this._left;\r\n    }\r\n    get top() {\r\n        return this._top;\r\n    }\r\n    get bottom() {\r\n        return this._bottom;\r\n    }\r\n    get right() {\r\n        return this._right;\r\n    }\r\n    get projection() {\r\n        return this._projection;\r\n    }\r\n    constructor(eng) {\r\n        super(eng);\r\n        this._minScale = 0.01;\r\n        this._targetX = 0;\r\n        this._targetY = 0;\r\n        this._top = 0;\r\n        this._left = 0;\r\n        this._right = 0;\r\n        this._bottom = 0;\r\n        this._projection = mat4_1.default.orthographic(this._left, this._right, this._bottom, this._top, 1, -1);\r\n        this._screenX = 0;\r\n        this._screenY = 0;\r\n        this._screenW = eng.width;\r\n        this._screenH = eng.height;\r\n        this.scale = 1.0;\r\n    }\r\n    /**\r\n     * Calculates a projection\r\n     * @returns\r\n     */\r\n    calculateProjection(offset, scale = 1.0) {\r\n        const adjustX = offset.x + (this.eng.width - this.eng.width * scale);\r\n        const adjustY = offset.y + (this.eng.height - this.eng.height * scale);\r\n        return mat4_1.default.orthographic(adjustX, this.eng.width * scale + offset.x, adjustY, this.eng.height * scale + offset.y, 1, -1);\r\n    }\r\n    /**\r\n     * Set the target for the project\r\n     * @param x\r\n     * @param y\r\n     */\r\n    setTarget(x, y) {\r\n        this._targetX = x;\r\n        this._targetY = y;\r\n        this.updateProjection();\r\n    }\r\n    updateProjection() {\r\n        this._screenX = Math.floor(this._targetX);\r\n        if (this.minX && this.maxX) {\r\n            this._screenX = MathConst.clamp(this._targetX, this.minX, this.maxX);\r\n        }\r\n        this._screenY = Math.floor(this._targetY);\r\n        if (this.minY && this.maxY) {\r\n            this._screenY = MathConst.clamp(this._targetY, this.minY, this.maxY);\r\n        }\r\n        this._left = this._screenX + (this.eng.width - this.eng.width * this._scale);\r\n        this._bottom = this._screenY + (this.eng.height - this.eng.height * this._scale);\r\n        this._right = this.eng.width * this._scale + this._screenX;\r\n        this._top = this.eng.height * this._scale + this._screenY;\r\n        this._projection = mat4_1.default.orthographic(this._left, this._right, this._bottom, this._top, 1, -1);\r\n    }\r\n    update(dt) { }\r\n}\r\nexports.ViewManager = ViewManager;\r\n\n\n//# sourceURL=webpack://earthquest/./src/systems/ViewManager.ts?");

/***/ }),

/***/ "./src/utilities/Random.ts":
/*!*********************************!*\
  !*** ./src/utilities/Random.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.Random = void 0;\r\n/**\r\n * A simple random class that takes a seed value.\r\n * https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\r\n */\r\nclass Random {\r\n    constructor(seed) {\r\n        const seedXor = seed ^ 0xdeadbeef; // 32-bit seed with optional XOR value\r\n        // Pad seed with Phi, Pi and E.\r\n        // https://en.wikipedia.org/wiki/Nothing-up-my-sleeve_number\r\n        this.rand = this.sfc32(0x9e3779b9, 0x243f6a88, 0xb7e15162, seed);\r\n    }\r\n    getUuid() {\r\n        if (window?.crypto?.randomUUID != undefined) {\r\n            return window.crypto.randomUUID();\r\n        }\r\n        else {\r\n            return (Math.floor(Math.random() * 100000000)\r\n                .toString(16)\r\n                .padStart(8, '0') +\r\n                '-' +\r\n                Math.floor(Math.random() * 1000)\r\n                    .toString(16)\r\n                    .padStart(4, '0') +\r\n                '-' +\r\n                Math.floor(Math.random() * 1000)\r\n                    .toString(16)\r\n                    .padStart(4, '0') +\r\n                '-' +\r\n                Math.floor(Math.random() * 100000000)\r\n                    .toString(16)\r\n                    .padStart(8, '0'));\r\n        }\r\n    }\r\n    sfc32(a, b, c, d) {\r\n        return () => {\r\n            a >>>= 0;\r\n            b >>>= 0;\r\n            c >>>= 0;\r\n            d >>>= 0;\r\n            var t = (a + b) | 0;\r\n            a = b ^ (b >>> 9);\r\n            b = (c + (c << 3)) | 0;\r\n            c = (c << 21) | (c >>> 11);\r\n            d = (d + 1) | 0;\r\n            t = (t + d) | 0;\r\n            c = (c + t) | 0;\r\n            return (t >>> 0) / 4294967296;\r\n        };\r\n    }\r\n}\r\nexports.Random = Random;\r\n\n\n//# sourceURL=webpack://earthquest/./src/utilities/Random.ts?");

/***/ }),

/***/ "./src/assets/font.json":
/*!******************************!*\
  !*** ./src/assets/font.json ***!
  \******************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('[{\"ch\":\" \",\"value\":\"32\",\"sizeX\":0,\"sizeY\":0,\"bearingX\":0,\"bearingY\":0,\"advance\":8,\"u1\":0,\"v1\":0,\"u2\":0,\"v2\":0},{\"ch\":\"!\",\"value\":\"33\",\"sizeX\":5,\"sizeY\":21,\"bearingX\":3,\"bearingY\":21,\"advance\":11,\"u1\":0,\"v1\":0,\"u2\":0.00488281,\"v2\":0.0205078},{\"ch\":\"\\\\\"\",\"value\":\"34\",\"sizeX\":11,\"sizeY\":8,\"bearingX\":1,\"bearingY\":21,\"advance\":13,\"u1\":0.00488281,\"v1\":0,\"u2\":0.015625,\"v2\":0.0078125},{\"ch\":\"#\",\"value\":\"35\",\"sizeX\":16,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":16,\"u1\":0.015625,\"v1\":0,\"u2\":0.03125,\"v2\":0.0205078},{\"ch\":\"$\",\"value\":\"36\",\"sizeX\":15,\"sizeY\":25,\"bearingX\":1,\"bearingY\":23,\"advance\":16,\"u1\":0.03125,\"v1\":0,\"u2\":0.0458984,\"v2\":0.0244141},{\"ch\":\"%\",\"value\":\"37\",\"sizeX\":25,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":27,\"u1\":0.0458984,\"v1\":0,\"u2\":0.0703125,\"v2\":0.0205078},{\"ch\":\"&\",\"value\":\"38\",\"sizeX\":24,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":25,\"u1\":0.0703125,\"v1\":0,\"u2\":0.09375,\"v2\":0.0205078},{\"ch\":\"\\'\",\"value\":\"39\",\"sizeX\":4,\"sizeY\":8,\"bearingX\":1,\"bearingY\":21,\"advance\":6,\"u1\":0.09375,\"v1\":0,\"u2\":0.0976562,\"v2\":0.0078125},{\"ch\":\"(\",\"value\":\"40\",\"sizeX\":9,\"sizeY\":29,\"bearingX\":1,\"bearingY\":22,\"advance\":11,\"u1\":0.0976562,\"v1\":0,\"u2\":0.106445,\"v2\":0.0283203},{\"ch\":\")\",\"value\":\"41\",\"sizeX\":9,\"sizeY\":29,\"bearingX\":1,\"bearingY\":22,\"advance\":11,\"u1\":0.106445,\"v1\":0,\"u2\":0.115234,\"v2\":0.0283203},{\"ch\":\"*\",\"value\":\"42\",\"sizeX\":14,\"sizeY\":12,\"bearingX\":1,\"bearingY\":21,\"advance\":16,\"u1\":0.115234,\"v1\":0,\"u2\":0.128906,\"v2\":0.0117188},{\"ch\":\"+\",\"value\":\"43\",\"sizeX\":16,\"sizeY\":16,\"bearingX\":1,\"bearingY\":18,\"advance\":18,\"u1\":0.128906,\"v1\":0,\"u2\":0.144531,\"v2\":0.015625},{\"ch\":\",\",\"value\":\"44\",\"sizeX\":5,\"sizeY\":8,\"bearingX\":1,\"bearingY\":3,\"advance\":8,\"u1\":0.144531,\"v1\":0,\"u2\":0.149414,\"v2\":0.0078125},{\"ch\":\"-\",\"value\":\"45\",\"sizeX\":9,\"sizeY\":3,\"bearingX\":1,\"bearingY\":9,\"advance\":11,\"u1\":0.149414,\"v1\":0,\"u2\":0.158203,\"v2\":0.00292969},{\"ch\":\".\",\"value\":\"46\",\"sizeX\":4,\"sizeY\":4,\"bearingX\":2,\"bearingY\":4,\"advance\":8,\"u1\":0.158203,\"v1\":0,\"u2\":0.162109,\"v2\":0.00390625},{\"ch\":\"/\",\"value\":\"47\",\"sizeX\":9,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":9,\"u1\":0.162109,\"v1\":0,\"u2\":0.170898,\"v2\":0.0205078},{\"ch\":\"0\",\"value\":\"48\",\"sizeX\":14,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":16,\"u1\":0.170898,\"v1\":0,\"u2\":0.18457,\"v2\":0.0205078},{\"ch\":\"1\",\"value\":\"49\",\"sizeX\":13,\"sizeY\":21,\"bearingX\":2,\"bearingY\":21,\"advance\":16,\"u1\":0.18457,\"v1\":0,\"u2\":0.197266,\"v2\":0.0205078},{\"ch\":\"2\",\"value\":\"50\",\"sizeX\":14,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":16,\"u1\":0.197266,\"v1\":0,\"u2\":0.210938,\"v2\":0.0205078},{\"ch\":\"3\",\"value\":\"51\",\"sizeX\":14,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":16,\"u1\":0.210938,\"v1\":0,\"u2\":0.224609,\"v2\":0.0205078},{\"ch\":\"4\",\"value\":\"52\",\"sizeX\":16,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":16,\"u1\":0.224609,\"v1\":0,\"u2\":0.240234,\"v2\":0.0205078},{\"ch\":\"5\",\"value\":\"53\",\"sizeX\":14,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":16,\"u1\":0.240234,\"v1\":0,\"u2\":0.253906,\"v2\":0.0205078},{\"ch\":\"6\",\"value\":\"54\",\"sizeX\":15,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":16,\"u1\":0.253906,\"v1\":0,\"u2\":0.268555,\"v2\":0.0205078},{\"ch\":\"7\",\"value\":\"55\",\"sizeX\":14,\"sizeY\":21,\"bearingX\":2,\"bearingY\":21,\"advance\":16,\"u1\":0.268555,\"v1\":0,\"u2\":0.282227,\"v2\":0.0205078},{\"ch\":\"8\",\"value\":\"56\",\"sizeX\":14,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":16,\"u1\":0.282227,\"v1\":0,\"u2\":0.295898,\"v2\":0.0205078},{\"ch\":\"9\",\"value\":\"57\",\"sizeX\":14,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":16,\"u1\":0.295898,\"v1\":0,\"u2\":0.30957,\"v2\":0.0205078},{\"ch\":\":\",\"value\":\"58\",\"sizeX\":5,\"sizeY\":15,\"bearingX\":2,\"bearingY\":15,\"advance\":9,\"u1\":0.30957,\"v1\":0,\"u2\":0.314453,\"v2\":0.0146484},{\"ch\":\";\",\"value\":\"59\",\"sizeX\":6,\"sizeY\":20,\"bearingX\":1,\"bearingY\":15,\"advance\":9,\"u1\":0.314453,\"v1\":0,\"u2\":0.320312,\"v2\":0.0195312},{\"ch\":\"<\",\"value\":\"60\",\"sizeX\":16,\"sizeY\":15,\"bearingX\":1,\"bearingY\":18,\"advance\":18,\"u1\":0.320312,\"v1\":0,\"u2\":0.335938,\"v2\":0.0146484},{\"ch\":\"=\",\"value\":\"61\",\"sizeX\":16,\"sizeY\":8,\"bearingX\":1,\"bearingY\":15,\"advance\":18,\"u1\":0.335938,\"v1\":0,\"u2\":0.351562,\"v2\":0.0078125},{\"ch\":\">\",\"value\":\"62\",\"sizeX\":16,\"sizeY\":15,\"bearingX\":1,\"bearingY\":18,\"advance\":18,\"u1\":0.351562,\"v1\":0,\"u2\":0.367188,\"v2\":0.0146484},{\"ch\":\"?\",\"value\":\"63\",\"sizeX\":12,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":14,\"u1\":0.367188,\"v1\":0,\"u2\":0.378906,\"v2\":0.0205078},{\"ch\":\"@\",\"value\":\"64\",\"sizeX\":27,\"sizeY\":27,\"bearingX\":1,\"bearingY\":21,\"advance\":29,\"u1\":0.378906,\"v1\":0,\"u2\":0.405273,\"v2\":0.0263672},{\"ch\":\"A\",\"value\":\"65\",\"sizeX\":23,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":23,\"u1\":0.405273,\"v1\":0,\"u2\":0.427734,\"v2\":0.0205078},{\"ch\":\"B\",\"value\":\"66\",\"sizeX\":20,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":21,\"u1\":0.427734,\"v1\":0,\"u2\":0.447266,\"v2\":0.0205078},{\"ch\":\"C\",\"value\":\"67\",\"sizeX\":19,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":21,\"u1\":0.447266,\"v1\":0,\"u2\":0.46582,\"v2\":0.0205078},{\"ch\":\"D\",\"value\":\"68\",\"sizeX\":22,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":23,\"u1\":0.46582,\"v1\":0,\"u2\":0.487305,\"v2\":0.0205078},{\"ch\":\"E\",\"value\":\"69\",\"sizeX\":18,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":20,\"u1\":0.487305,\"v1\":0,\"u2\":0.504883,\"v2\":0.0205078},{\"ch\":\"F\",\"value\":\"70\",\"sizeX\":17,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":18,\"u1\":0.504883,\"v1\":0,\"u2\":0.521484,\"v2\":0.0205078},{\"ch\":\"G\",\"value\":\"71\",\"sizeX\":22,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":23,\"u1\":0.521484,\"v1\":0,\"u2\":0.542969,\"v2\":0.0205078},{\"ch\":\"H\",\"value\":\"72\",\"sizeX\":23,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":23,\"u1\":0.542969,\"v1\":0,\"u2\":0.56543,\"v2\":0.0205078},{\"ch\":\"I\",\"value\":\"73\",\"sizeX\":9,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":11,\"u1\":0.56543,\"v1\":0,\"u2\":0.574219,\"v2\":0.0205078},{\"ch\":\"J\",\"value\":\"74\",\"sizeX\":12,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":12,\"u1\":0.574219,\"v1\":0,\"u2\":0.585938,\"v2\":0.0205078},{\"ch\":\"K\",\"value\":\"75\",\"sizeX\":23,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":23,\"u1\":0.585938,\"v1\":0,\"u2\":0.608398,\"v2\":0.0205078},{\"ch\":\"L\",\"value\":\"76\",\"sizeX\":18,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":20,\"u1\":0.608398,\"v1\":0,\"u2\":0.625977,\"v2\":0.0205078},{\"ch\":\"M\",\"value\":\"77\",\"sizeX\":28,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":28,\"u1\":0.625977,\"v1\":0,\"u2\":0.65332,\"v2\":0.0205078},{\"ch\":\"N\",\"value\":\"78\",\"sizeX\":23,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":23,\"u1\":0.65332,\"v1\":0,\"u2\":0.675781,\"v2\":0.0205078},{\"ch\":\"O\",\"value\":\"79\",\"sizeX\":21,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":23,\"u1\":0.675781,\"v1\":0,\"u2\":0.696289,\"v2\":0.0205078},{\"ch\":\"P\",\"value\":\"80\",\"sizeX\":17,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":18,\"u1\":0.696289,\"v1\":0,\"u2\":0.712891,\"v2\":0.0205078},{\"ch\":\"Q\",\"value\":\"81\",\"sizeX\":22,\"sizeY\":26,\"bearingX\":1,\"bearingY\":21,\"advance\":23,\"u1\":0.712891,\"v1\":0,\"u2\":0.734375,\"v2\":0.0253906},{\"ch\":\"R\",\"value\":\"82\",\"sizeX\":22,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":21,\"u1\":0.734375,\"v1\":0,\"u2\":0.755859,\"v2\":0.0205078},{\"ch\":\"S\",\"value\":\"83\",\"sizeX\":14,\"sizeY\":21,\"bearingX\":2,\"bearingY\":21,\"advance\":18,\"u1\":0.755859,\"v1\":0,\"u2\":0.769531,\"v2\":0.0205078},{\"ch\":\"T\",\"value\":\"84\",\"sizeX\":20,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":20,\"u1\":0.769531,\"v1\":0,\"u2\":0.789062,\"v2\":0.0205078},{\"ch\":\"U\",\"value\":\"85\",\"sizeX\":23,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":23,\"u1\":0.789062,\"v1\":0,\"u2\":0.811523,\"v2\":0.0205078},{\"ch\":\"V\",\"value\":\"86\",\"sizeX\":23,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":23,\"u1\":0.811523,\"v1\":0,\"u2\":0.833984,\"v2\":0.0205078},{\"ch\":\"W\",\"value\":\"87\",\"sizeX\":31,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":30,\"u1\":0.833984,\"v1\":0,\"u2\":0.864258,\"v2\":0.0205078},{\"ch\":\"X\",\"value\":\"88\",\"sizeX\":23,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":23,\"u1\":0.864258,\"v1\":0,\"u2\":0.886719,\"v2\":0.0205078},{\"ch\":\"Y\",\"value\":\"89\",\"sizeX\":23,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":23,\"u1\":0.886719,\"v1\":0,\"u2\":0.90918,\"v2\":0.0205078},{\"ch\":\"Z\",\"value\":\"90\",\"sizeX\":17,\"sizeY\":21,\"bearingX\":1,\"bearingY\":21,\"advance\":20,\"u1\":0.90918,\"v1\":0,\"u2\":0.925781,\"v2\":0.0205078},{\"ch\":\"[\",\"value\":\"91\",\"sizeX\":8,\"sizeY\":26,\"bearingX\":2,\"bearingY\":22,\"advance\":11,\"u1\":0.925781,\"v1\":0,\"u2\":0.933594,\"v2\":0.0253906},{\"ch\":\"\\\\\\\\\",\"value\":\"92\",\"sizeX\":9,\"sizeY\":21,\"bearingX\":0,\"bearingY\":21,\"advance\":9,\"u1\":0.933594,\"v1\":0,\"u2\":0.942383,\"v2\":0.0205078},{\"ch\":\"]\",\"value\":\"93\",\"sizeX\":8,\"sizeY\":26,\"bearingX\":1,\"bearingY\":22,\"advance\":11,\"u1\":0.942383,\"v1\":0,\"u2\":0.950195,\"v2\":0.0253906},{\"ch\":\"^\",\"value\":\"94\",\"sizeX\":15,\"sizeY\":15,\"bearingX\":0,\"bearingY\":21,\"advance\":15,\"u1\":0.950195,\"v1\":0,\"u2\":0.964844,\"v2\":0.0146484},{\"ch\":\"_\",\"value\":\"95\",\"sizeX\":18,\"sizeY\":2,\"bearingX\":-1,\"bearingY\":-3,\"advance\":16,\"u1\":0.964844,\"v1\":0,\"u2\":0.982422,\"v2\":0.00195312},{\"ch\":\"`\",\"value\":\"96\",\"sizeX\":8,\"sizeY\":5,\"bearingX\":1,\"bearingY\":22,\"advance\":11,\"u1\":0.982422,\"v1\":0,\"u2\":0.990234,\"v2\":0.00488281},{\"ch\":\"a\",\"value\":\"97\",\"sizeX\":13,\"sizeY\":15,\"bearingX\":1,\"bearingY\":15,\"advance\":14,\"u1\":0,\"v1\":0.0283203,\"u2\":0.0126953,\"v2\":0.0429688},{\"ch\":\"b\",\"value\":\"98\",\"sizeX\":15,\"sizeY\":22,\"bearingX\":0,\"bearingY\":22,\"advance\":16,\"u1\":0.0126953,\"v1\":0.0283203,\"u2\":0.0273438,\"v2\":0.0498047},{\"ch\":\"c\",\"value\":\"99\",\"sizeX\":13,\"sizeY\":15,\"bearingX\":1,\"bearingY\":15,\"advance\":14,\"u1\":0.0273438,\"v1\":0.0283203,\"u2\":0.0400391,\"v2\":0.0429688},{\"ch\":\"d\",\"value\":\"100\",\"sizeX\":15,\"sizeY\":22,\"bearingX\":1,\"bearingY\":22,\"advance\":16,\"u1\":0.0400391,\"v1\":0.0283203,\"u2\":0.0546875,\"v2\":0.0498047},{\"ch\":\"e\",\"value\":\"101\",\"sizeX\":13,\"sizeY\":15,\"bearingX\":1,\"bearingY\":15,\"advance\":14,\"u1\":0.0546875,\"v1\":0.0283203,\"u2\":0.0673828,\"v2\":0.0429688},{\"ch\":\"f\",\"value\":\"102\",\"sizeX\":11,\"sizeY\":22,\"bearingX\":0,\"bearingY\":22,\"advance\":11,\"u1\":0.0673828,\"v1\":0.0283203,\"u2\":0.078125,\"v2\":0.0498047},{\"ch\":\"g\",\"value\":\"103\",\"sizeX\":15,\"sizeY\":24,\"bearingX\":1,\"bearingY\":17,\"advance\":16,\"u1\":0.078125,\"v1\":0.0283203,\"u2\":0.0927734,\"v2\":0.0517578},{\"ch\":\"h\",\"value\":\"104\",\"sizeX\":16,\"sizeY\":22,\"bearingX\":0,\"bearingY\":22,\"advance\":16,\"u1\":0.0927734,\"v1\":0.0283203,\"u2\":0.108398,\"v2\":0.0498047},{\"ch\":\"i\",\"value\":\"105\",\"sizeX\":9,\"sizeY\":22,\"bearingX\":0,\"bearingY\":22,\"advance\":9,\"u1\":0.108398,\"v1\":0.0283203,\"u2\":0.117188,\"v2\":0.0498047},{\"ch\":\"j\",\"value\":\"106\",\"sizeX\":8,\"sizeY\":29,\"bearingX\":-1,\"bearingY\":22,\"advance\":9,\"u1\":0.117188,\"v1\":0.0283203,\"u2\":0.125,\"v2\":0.0566406},{\"ch\":\"k\",\"value\":\"107\",\"sizeX\":16,\"sizeY\":22,\"bearingX\":0,\"bearingY\":22,\"advance\":16,\"u1\":0.125,\"v1\":0.0283203,\"u2\":0.140625,\"v2\":0.0498047},{\"ch\":\"l\",\"value\":\"108\",\"sizeX\":9,\"sizeY\":22,\"bearingX\":0,\"bearingY\":22,\"advance\":9,\"u1\":0.140625,\"v1\":0.0283203,\"u2\":0.149414,\"v2\":0.0498047},{\"ch\":\"m\",\"value\":\"109\",\"sizeX\":25,\"sizeY\":15,\"bearingX\":0,\"bearingY\":15,\"advance\":25,\"u1\":0.149414,\"v1\":0.0283203,\"u2\":0.173828,\"v2\":0.0429688},{\"ch\":\"n\",\"value\":\"110\",\"sizeX\":16,\"sizeY\":15,\"bearingX\":0,\"bearingY\":15,\"advance\":16,\"u1\":0.173828,\"v1\":0.0283203,\"u2\":0.189453,\"v2\":0.0429688},{\"ch\":\"o\",\"value\":\"111\",\"sizeX\":14,\"sizeY\":15,\"bearingX\":1,\"bearingY\":15,\"advance\":16,\"u1\":0.189453,\"v1\":0.0283203,\"u2\":0.203125,\"v2\":0.0429688},{\"ch\":\"p\",\"value\":\"112\",\"sizeX\":15,\"sizeY\":22,\"bearingX\":0,\"bearingY\":15,\"advance\":16,\"u1\":0.203125,\"v1\":0.0283203,\"u2\":0.217773,\"v2\":0.0498047},{\"ch\":\"q\",\"value\":\"113\",\"sizeX\":15,\"sizeY\":23,\"bearingX\":1,\"bearingY\":16,\"advance\":16,\"u1\":0.217773,\"v1\":0.0283203,\"u2\":0.232422,\"v2\":0.0507812},{\"ch\":\"r\",\"value\":\"114\",\"sizeX\":11,\"sizeY\":15,\"bearingX\":0,\"bearingY\":15,\"advance\":11,\"u1\":0.232422,\"v1\":0.0283203,\"u2\":0.243164,\"v2\":0.0429688},{\"ch\":\"s\",\"value\":\"115\",\"sizeX\":11,\"sizeY\":15,\"bearingX\":1,\"bearingY\":15,\"advance\":12,\"u1\":0.243164,\"v1\":0.0283203,\"u2\":0.253906,\"v2\":0.0429688},{\"ch\":\"t\",\"value\":\"116\",\"sizeX\":9,\"sizeY\":19,\"bearingX\":0,\"bearingY\":19,\"advance\":9,\"u1\":0.253906,\"v1\":0.0283203,\"u2\":0.262695,\"v2\":0.046875},{\"ch\":\"u\",\"value\":\"117\",\"sizeX\":16,\"sizeY\":15,\"bearingX\":0,\"bearingY\":15,\"advance\":16,\"u1\":0.262695,\"v1\":0.0283203,\"u2\":0.27832,\"v2\":0.0429688},{\"ch\":\"v\",\"value\":\"118\",\"sizeX\":16,\"sizeY\":15,\"bearingX\":0,\"bearingY\":15,\"advance\":16,\"u1\":0.27832,\"v1\":0.0283203,\"u2\":0.293945,\"v2\":0.0429688},{\"ch\":\"w\",\"value\":\"119\",\"sizeX\":23,\"sizeY\":15,\"bearingX\":0,\"bearingY\":15,\"advance\":23,\"u1\":0.293945,\"v1\":0.0283203,\"u2\":0.316406,\"v2\":0.0429688},{\"ch\":\"x\",\"value\":\"120\",\"sizeX\":16,\"sizeY\":15,\"bearingX\":0,\"bearingY\":15,\"advance\":16,\"u1\":0.316406,\"v1\":0.0283203,\"u2\":0.332031,\"v2\":0.0429688},{\"ch\":\"y\",\"value\":\"121\",\"sizeX\":16,\"sizeY\":22,\"bearingX\":0,\"bearingY\":15,\"advance\":16,\"u1\":0.332031,\"v1\":0.0283203,\"u2\":0.347656,\"v2\":0.0498047},{\"ch\":\"z\",\"value\":\"122\",\"sizeX\":14,\"sizeY\":15,\"bearingX\":0,\"bearingY\":15,\"advance\":14,\"u1\":0.347656,\"v1\":0.0283203,\"u2\":0.361328,\"v2\":0.0429688},{\"ch\":\"{\",\"value\":\"123\",\"sizeX\":11,\"sizeY\":26,\"bearingX\":2,\"bearingY\":22,\"advance\":15,\"u1\":0.361328,\"v1\":0.0283203,\"u2\":0.37207,\"v2\":0.0537109},{\"ch\":\"|\",\"value\":\"124\",\"sizeX\":2,\"sizeY\":29,\"bearingX\":2,\"bearingY\":22,\"advance\":6,\"u1\":0.37207,\"v1\":0.0283203,\"u2\":0.374023,\"v2\":0.0566406},{\"ch\":\"}\",\"value\":\"125\",\"sizeX\":11,\"sizeY\":26,\"bearingX\":2,\"bearingY\":22,\"advance\":15,\"u1\":0.374023,\"v1\":0.0283203,\"u2\":0.384766,\"v2\":0.0537109},{\"ch\":\"~\",\"value\":\"126\",\"sizeX\":17,\"sizeY\":5,\"bearingX\":0,\"bearingY\":13,\"advance\":17,\"u1\":0.384766,\"v1\":0.0283203,\"u2\":0.401367,\"v2\":0.0332031}]');\n\n//# sourceURL=webpack://earthquest/./src/assets/font.json?");

/***/ }),

/***/ "./src/assets/menu.json":
/*!******************************!*\
  !*** ./src/assets/menu.json ***!
  \******************************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"tiles\":[{\"id\":\"menu.left.top\",\"loc\":[80,672,64,64],\"offset\":[0,0]},{\"id\":\"menu.left.middle\",\"loc\":[80,721,64,64],\"offset\":[0,0]},{\"id\":\"menu.left.bottom\",\"loc\":[80,784,64,64],\"offset\":[0,0]},{\"id\":\"menu.center.top\",\"loc\":[141,672,64,64],\"offset\":[0,0]},{\"id\":\"menu.center.middle\",\"loc\":[141,718,64,64],\"offset\":[0,0]},{\"id\":\"menu.center.bottom\",\"loc\":[141,784,64,64],\"offset\":[0,0]},{\"id\":\"menu.right.top\",\"loc\":[208,672,64,64],\"offset\":[0,0]},{\"id\":\"menu.right.middle\",\"loc\":[208,720,64,64],\"offset\":[0,0]},{\"id\":\"menu.right.bottom\",\"loc\":[208,784,64,64],\"offset\":[0,0]},{\"id\":\"cursor\",\"loc\":[97,609,64,47],\"offset\":[-4,0]},{\"id\":\"gameMenu\",\"loc\":[0,0,800,600],\"offset\":[0,0]}]}');\n\n//# sourceURL=webpack://earthquest/./src/assets/menu.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;